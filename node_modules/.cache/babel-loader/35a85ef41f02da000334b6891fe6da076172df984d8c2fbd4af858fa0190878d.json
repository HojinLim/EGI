{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\category\\\\CategoryFilter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../../services/supabase/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const categories = [{\n  value: '컴퓨터',\n  label: '컴퓨터'\n}, {\n  value: '노트북',\n  label: '노트북'\n}, {\n  value: '콘솔',\n  label: '콘솔'\n}, {\n  value: '핸드폰',\n  label: '핸드폰'\n}, {\n  value: '주변기기',\n  label: '주변기기'\n}, {\n  value: '모니터',\n  label: '모니터'\n}];\nconst CategoryFilter = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('posts').select('*');\n      if (error) {\n        console.error('Error fetching posts:', error);\n      } else {\n        const postsWithCompleteURLs = data.map(post => ({\n          ...post,\n          image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\n        }));\n        setPosts(postsWithCompleteURLs);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleCategoryClick = category => {\n    const filteredPosts = posts.filter(post => post.category === category);\n    setFilteredPosts(filteredPosts);\n  };\n  const categoryButtons = categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n    value: category.value,\n    onClick: () => handleCategoryClick(category.value),\n    children: category.label\n  }, category.value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: categoryButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.image_urls.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `,\n            alt: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryFilter, \"q6K2sNFS1sq4esghSX4PZ2EcyPU=\");\n_c = CategoryFilter;\nexport default CategoryFilter;\nvar _c;\n$RefreshReg$(_c, \"CategoryFilter\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","categories","value","label","CategoryFilter","_s","posts","setPosts","filteredPosts","setFilteredPosts","fetchPosts","data","error","from","select","console","postsWithCompleteURLs","map","post","image_urls","replace","split","handleCategoryClick","category","filter","categoryButtons","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","title","length","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","id","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/category/CategoryFilter.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { supabase } from '../../services/supabase/supabase';\r\n\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  category: string;\r\n  image_urls: string[];\r\n}\r\n\r\nexport const categories = [\r\n  { value: '컴퓨터', label: '컴퓨터' },\r\n  { value: '노트북', label: '노트북' },\r\n  { value: '콘솔', label: '콘솔' },\r\n  { value: '핸드폰', label: '핸드폰' },\r\n  { value: '주변기기', label: '주변기기' },\r\n  { value: '모니터', label: '모니터' }\r\n];\r\n\r\nconst CategoryFilter = () => {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const { data, error } = await supabase.from('posts').select('*');\r\n\r\n      if (error) {\r\n        console.error('Error fetching posts:', error);\r\n      } else {\r\n        const postsWithCompleteURLs = data.map((post) => ({\r\n          ...post,\r\n          image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\r\n        }));\r\n\r\n        setPosts(postsWithCompleteURLs);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    const filteredPosts = posts.filter((post) => post.category === category);\r\n    setFilteredPosts(filteredPosts);\r\n  };\r\n\r\n  const categoryButtons = categories.map((category) => (\r\n    <button key={category.value} value={category.value} onClick={() => handleCategoryClick(category.value)}>\r\n      {category.label}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div>{categoryButtons}</div>\r\n      <div>\r\n        {filteredPosts.map((post) => (\r\n          <div key={post.id}>\r\n            <h3>{post.title}</h3>\r\n\r\n            <div>\r\n              {post.image_urls.length > 0 && (\r\n                <img src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `} alt={post.title} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryFilter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS5D,OAAO,MAAMC,UAAU,GAAG,CACxB;EAAEC,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC9B;EAAED,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC9B;EAAED,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAK,CAAC,EAC5B;EAAED,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC9B;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,EAChC;EAAED,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAM,CAAC,CAC/B;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;MAEhE,IAAIF,KAAK,EAAE;QACTG,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,MAAM;QACL,MAAMI,qBAAqB,GAAGL,IAAI,CAACM,GAAG,CAAEC,IAAI,KAAM;UAChD,GAAGA,IAAI;UACPC,UAAU,EAAED,IAAI,CAACC,UAAU,GAAGD,IAAI,CAACC,UAAU,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,GAAG;QACrF,CAAC,CAAC,CAAC;QAEHd,QAAQ,CAACS,qBAAqB,CAAC;MACjC;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,mBAAmB,GAAIC,QAAgB,IAAK;IAChD,MAAMf,aAAa,GAAGF,KAAK,CAACkB,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACK,QAAQ,KAAKA,QAAQ,CAAC;IACxEd,gBAAgB,CAACD,aAAa,CAAC;EACjC,CAAC;EAED,MAAMiB,eAAe,GAAGxB,UAAU,CAACgB,GAAG,CAAEM,QAAQ,iBAC9CvB,OAAA;IAA6BE,KAAK,EAAEqB,QAAQ,CAACrB,KAAM;IAACwB,OAAO,EAAEA,CAAA,KAAMJ,mBAAmB,CAACC,QAAQ,CAACrB,KAAK,CAAE;IAAAyB,QAAA,EACpGJ,QAAQ,CAACpB;EAAK,GADJoB,QAAQ,CAACrB,KAAK;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CACT,CAAC;EAEF,oBACE/B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAMF;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5B/B,OAAA;MAAA2B,QAAA,EACGnB,aAAa,CAACS,GAAG,CAAEC,IAAI,iBACtBlB,OAAA;QAAA2B,QAAA,gBACE3B,OAAA;UAAA2B,QAAA,EAAKT,IAAI,CAACc;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAErB/B,OAAA;UAAA2B,QAAA,EACGT,IAAI,CAACC,UAAU,CAACc,MAAM,GAAG,CAAC,iBACzBjC,OAAA;YAAKkC,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,8BAA+B,GAAEnB,IAAI,CAACC,UAAU,CAAC,CAAC,CAAE,GAAG;YAACmB,GAAG,EAAEpB,IAAI,CAACc;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACpG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GAPEb,IAAI,CAACqB,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CApDID,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AAsDpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}