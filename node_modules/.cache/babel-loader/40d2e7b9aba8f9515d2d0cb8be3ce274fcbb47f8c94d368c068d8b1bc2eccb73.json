{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\user\\\\SignUp.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { atom, useAtom } from 'jotai';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { signUpService } from '../../services/supabase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const userDataAtom = atom({\n  uid: '',\n  email: '',\n  password: '',\n  nickname: '',\n  profileImg: null // 프로필 이미지는 초기에 null로 설정\n});\n\nconst SignUp = ({\n  setLoginModal,\n  setSignUpmodal\n}) => {\n  _s();\n  const queryClient = useQueryClient();\n  const [userData, setUserData] = useAtom(userDataAtom);\n  const signUpMutation = useMutation(signUpService, {\n    onSuccess: async () => {\n      queryClient.invalidateQueries({\n        queryKey: [userData]\n      });\n    }\n  });\n  const signUpHandler = async e => {\n    e.preventDefault();\n    try {\n      // 이미지 업로드 및 URL 저장\n      const uploadedImageUrl = await uploadImageAndSaveUser(userData);\n      if (uploadedImageUrl) {\n        // 사용자 데이터에 이미지 URL 추가\n        const userDataWithImage = {\n          ...userData,\n          profileImg: uploadedImageUrl\n        };\n\n        // 회원가입 서비스 호출\n        signUpMutation.mutate(userDataWithImage);\n        alert('회원가입이 완료되었습니다!');\n        setSignUpmodal(false);\n        setLoginModal(true);\n      } else {\n        console.error('Failed to upload image and save user.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const closeSignUpModal = () => {\n    setSignUpmodal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CloseBtn, {\n      onClick: closeSignUpModal,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wapper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: signUpHandler,\n        children: [\"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4 :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setUserData({\n            ...userData,\n            profileImg: e.target.files[0]\n          }),\n          accept: \"image/*\" // 이미지 파일만 선택 가능하도록\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uD68C\\uC6D0 \\uAC00\\uC785 \\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"FZH3CEMInPd8hRggiaNHpm93oWs=\", false, function () {\n  return [useQueryClient, useAtom, useMutation];\n});\n_c = SignUp;\nexport default SignUp;\n\n// 나머지 스타일 등은 동일하게 유지합니다.\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","atom","useAtom","useMutation","useQueryClient","signUpService","jsxDEV","_jsxDEV","userDataAtom","uid","email","password","nickname","profileImg","SignUp","setLoginModal","setSignUpmodal","_s","queryClient","userData","setUserData","signUpMutation","onSuccess","invalidateQueries","queryKey","signUpHandler","e","preventDefault","uploadedImageUrl","uploadImageAndSaveUser","userDataWithImage","mutate","alert","console","error","closeSignUpModal","Container","children","CloseBtn","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Wapper","onSubmit","type","onChange","target","files","accept","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/user/SignUp.tsx"],"sourcesContent":["import React from 'react';\r\nimport { atom, useAtom } from 'jotai';\r\nimport { styled } from 'styled-components';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { signUpService } from '../../services/supabase/auth';\r\nimport type { UserType } from '../../types/supabase';\r\n\r\ntype SignUpType = {\r\n  setLoginModal: (isOpen: boolean) => void;\r\n  setSignUpmodal: (isOpen: boolean) => void;\r\n};\r\n\r\nexport const userDataAtom = atom<UserType>({\r\n  uid: '',\r\n  email: '',\r\n  password: '',\r\n  nickname: '',\r\n  profileImg: null // 프로필 이미지는 초기에 null로 설정\r\n});\r\n\r\nconst SignUp = ({ setLoginModal, setSignUpmodal }: SignUpType) => {\r\n  const queryClient = useQueryClient();\r\n  const [userData, setUserData] = useAtom(userDataAtom);\r\n\r\n  const signUpMutation = useMutation(signUpService, {\r\n    onSuccess: async () => {\r\n      queryClient.invalidateQueries({ queryKey: [userData] });\r\n    }\r\n  });\r\n\r\n  const signUpHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      // 이미지 업로드 및 URL 저장\r\n      const uploadedImageUrl = await uploadImageAndSaveUser(userData);\r\n\r\n      if (uploadedImageUrl) {\r\n        // 사용자 데이터에 이미지 URL 추가\r\n        const userDataWithImage = { ...userData, profileImg: uploadedImageUrl };\r\n\r\n        // 회원가입 서비스 호출\r\n        signUpMutation.mutate(userDataWithImage);\r\n        alert('회원가입이 완료되었습니다!');\r\n        setSignUpmodal(false);\r\n        setLoginModal(true);\r\n      } else {\r\n        console.error('Failed to upload image and save user.');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const closeSignUpModal = () => {\r\n    setSignUpmodal(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CloseBtn onClick={closeSignUpModal}>x</CloseBtn>\r\n      <Wapper>\r\n        <form onSubmit={signUpHandler}>\r\n          {/* (이메일, 비밀번호, 닉네임 등 입력 필드) */}\r\n          프로필 사진 :\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => setUserData({ ...userData, profileImg: e.target.files[0] })}\r\n            accept=\"image/*\" // 이미지 파일만 선택 가능하도록\r\n          ></input>\r\n          <button>회원 가입 완료</button>\r\n        </form>\r\n      </Wapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n\r\n// 나머지 스타일 등은 동일하게 유지합니다.\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}