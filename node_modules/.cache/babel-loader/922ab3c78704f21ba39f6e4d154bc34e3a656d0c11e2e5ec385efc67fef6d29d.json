{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\EditPost.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport Editor from '../editor/Editor';\nimport { v4 as uuidv4 } from 'uuid';\nimport { supabase } from '../../services/supabase/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [editTitle, setEditTitle] = useState('');\n  const [post, setPost] = useState(null);\n  const [editBody, setEditBody] = useState('');\n  const [selectedImages, setSelectedImages] = useState([]);\n  const handleEditPost = async () => {\n    if (!editTitle.trim() || !editBody.trim()) {\n      alert('제목과 본문을 모두 입력해주세요.');\n      return;\n    }\n    const imageUrls = [];\n    for (const selectedImage of selectedImages) {\n      const {\n        data,\n        error\n      } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\n      if (error) {\n        console.error('Error uploading image to Supabase storage:', error);\n        alert('이미지 업로드 중 에러가 발생했습니다!');\n        return;\n      }\n      imageUrls.push(data.path);\n    }\n    const {\n      error: updateError\n    } = await supabase.from('posts').update({\n      title: editTitle,\n      body: editBody,\n      image_urls: imageUrls\n    }) // Assuming your database field name is 'image_urls'\n    .eq('pid', post.pid);\n    if (updateError) {\n      console.error('Error editing post:', updateError);\n      alert('에러가 발생했습니다!');\n    } else {\n      alert('글 수정이 완료되었습니다.');\n      navigate(-1);\n    }\n  };\n  const handleImageChange = e => {\n    const selectedFiles = e.target.files;\n    if (selectedFiles && selectedFiles.length > 0) {\n      const updatedSelectedImages = [];\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const selectedFile = selectedFiles[i];\n        const originalFileName = selectedFile.name;\n        const fileExtension = originalFileName.split('.').pop();\n        const randomFileName = uuidv4() + '.' + (fileExtension || 'jpg');\n        updatedSelectedImages.push(new File([selectedFile], randomFileName));\n      }\n      setSelectedImages(updatedSelectedImages);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: editTitle,\n      onChange: e => setEditTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: editBody,\n      onChange: content => setEditBody(content)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditPost,\n      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"dkAtHtRfmdug307AGuv8MapiLLs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useNavigate","useParams","Editor","v4","uuidv4","supabase","jsxDEV","_jsxDEV","EditPost","_s","id","navigate","editTitle","setEditTitle","useState","post","setPost","editBody","setEditBody","selectedImages","setSelectedImages","handleEditPost","trim","alert","imageUrls","selectedImage","data","error","storage","from","upload","name","console","push","path","updateError","update","title","body","image_urls","eq","pid","handleImageChange","e","selectedFiles","target","files","length","updatedSelectedImages","i","selectedFile","originalFileName","fileExtension","split","pop","randomFileName","File","children","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","content","accept","multiple","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/EditPost.tsx"],"sourcesContent":["import React, { useStatem } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport Editor from '../editor/Editor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { supabase } from '../../services/supabase/supabase';\r\n\r\nconst EditPost = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [post, setPost] = useState<Post | null>(null);\r\n  const [editBody, setEditBody] = useState('');\r\n  const [selectedImages, setSelectedImages] = useState<File[]>([]);\r\n\r\n  const handleEditPost = async () => {\r\n    if (!editTitle.trim() || !editBody.trim()) {\r\n      alert('제목과 본문을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    const imageUrls: string[] = [];\r\n\r\n    for (const selectedImage of selectedImages) {\r\n      const { data, error } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\r\n\r\n      if (error) {\r\n        console.error('Error uploading image to Supabase storage:', error);\r\n        alert('이미지 업로드 중 에러가 발생했습니다!');\r\n        return;\r\n      }\r\n\r\n      imageUrls.push(data.path);\r\n    }\r\n\r\n    const { error: updateError } = await supabase\r\n      .from('posts')\r\n      .update({ title: editTitle, body: editBody, image_urls: imageUrls }) // Assuming your database field name is 'image_urls'\r\n      .eq('pid', post.pid);\r\n\r\n    if (updateError) {\r\n      console.error('Error editing post:', updateError);\r\n      alert('에러가 발생했습니다!');\r\n    } else {\r\n      alert('글 수정이 완료되었습니다.');\r\n      navigate(-1);\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFiles = e.target.files;\r\n\r\n    if (selectedFiles && selectedFiles.length > 0) {\r\n      const updatedSelectedImages: File[] = [];\r\n\r\n      for (let i = 0; i < selectedFiles.length; i++) {\r\n        const selectedFile = selectedFiles[i];\r\n        const originalFileName = selectedFile.name;\r\n        const fileExtension = originalFileName.split('.').pop();\r\n        const randomFileName = uuidv4() + '.' + (fileExtension || 'jpg');\r\n\r\n        updatedSelectedImages.push(new File([selectedFile], randomFileName));\r\n      }\r\n\r\n      setSelectedImages(updatedSelectedImages);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Title\" value={editTitle} onChange={(e) => setEditTitle(e.target.value)} />\r\n      <Editor value={editBody} onChange={(content) => setEditBody(content)} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <input type=\"file\" accept=\"image/*\" multiple onChange={handleImageChange} />\r\n      <button onClick={handleEditPost}>수정하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}