{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\pages\\\\ResetPasswordPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../services/supabase/supabase';\nimport * as S from '../pages/Styled.ResetPasswordPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordPage = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  // ÎπÑÎ∞ÄÎ≤àÌò∏ Ïû¨ÏÑ§Ï†ï ÏóÖÎç∞Ïù¥Ìä∏ Ìï∏Îì§Îü¨\n  const updatePasswordHandler = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (!error) {\n        alert('ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏóàÏäµÎãàÎã§!');\n        setNewPassword('');\n        setConfirmPassword('');\n        window.location.href = '/';\n      } else {\n        console.error(error);\n        alert('ÎπÑÎ∞ÄÎ≤àÌò∏ ÏóÖÎç∞Ïù¥Ìä∏ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const backToTheHome = () => {\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.HomeBtn, {\n      onClick: backToTheHome,\n      children: \"\\uD83C\\uDFE0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(S.PasswordInput, {\n          type: \"password\",\n          placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.PasswordInput, {\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.PwdUpdateBtn, {\n          onClick: updatePasswordHandler,\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC5C5\\uB370\\uC774\\uD2B8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPasswordPage, \"ps53tgkIwu4c8T0q0jZHcZfDanE=\");\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","supabase","S","jsxDEV","_jsxDEV","ResetPasswordPage","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updatePasswordHandler","error","auth","updateUser","password","alert","window","location","href","console","backToTheHome","Container","children","HomeBtn","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Wrapper","PasswordInput","type","placeholder","value","onChange","e","target","PwdUpdateBtn","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/pages/ResetPasswordPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { supabase } from '../services/supabase/supabase';\r\nimport * as S from '../pages/Styled.ResetPasswordPage';\r\n\r\nconst ResetPasswordPage = () => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  // ÎπÑÎ∞ÄÎ≤àÌò∏ Ïû¨ÏÑ§Ï†ï ÏóÖÎç∞Ïù¥Ìä∏ Ìï∏Îì§Îü¨\r\n  const updatePasswordHandler = async () => {\r\n    try {\r\n      const { error } = await supabase.auth.updateUser({\r\n        password: newPassword\r\n      });\r\n\r\n      if (!error) {\r\n        alert('ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏóàÏäµÎãàÎã§!');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        window.location.href = '/';\r\n      } else {\r\n        console.error(error);\r\n        alert('ÎπÑÎ∞ÄÎ≤àÌò∏ ÏóÖÎç∞Ïù¥Ìä∏ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const backToTheHome = () => {\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.HomeBtn onClick={backToTheHome}>üè†</S.HomeBtn>\r\n      <S.Wrapper>\r\n        <h2>ÎπÑÎ∞ÄÎ≤àÌò∏ Ïû¨ÏÑ§Ï†ï</h2>\r\n        <S.Wrapper>\r\n          <S.PasswordInput\r\n            type=\"password\"\r\n            placeholder=\"ÏÉàÎ°úÏö¥ ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <S.PasswordInput\r\n            type=\"password\"\r\n            placeholder=\"ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n          <S.PwdUpdateBtn onClick={updatePasswordHandler}>ÎπÑÎ∞ÄÎ≤àÌò∏ ÏóÖÎç∞Ïù¥Ìä∏</S.PwdUpdateBtn>\r\n        </S.Wrapper>\r\n      </S.Wrapper>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}