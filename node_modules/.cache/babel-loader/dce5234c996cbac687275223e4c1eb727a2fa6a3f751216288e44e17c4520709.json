{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\comments\\\\reply\\\\ReplyCommentForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useCommentMutation from '../../../hooks/useCommentMutation';\nimport * as S from '../comment/Styled.Comments';\nimport { jotaiUserDataAtom } from '../../common/Header';\nimport { useAtom } from 'jotai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyCommentForm = ({\n  pid,\n  cid,\n  setIsAddReply\n}) => {\n  _s();\n  const {\n    addReplyCommentMutation\n  } = useCommentMutation();\n  const [replyCommentText, setReplyCommentText] = useState('');\n  const [jotaiUserData] = useAtom(jotaiUserDataAtom);\n  const handleCommentInputChange = e => {\n    setReplyCommentText(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleAddBtnClick();\n    }\n  };\n  const handleAddBtnClick = () => {\n    if (!jotaiUserData) {\n      alert('로그인 후 사용 가능합니다.');\n      return;\n    }\n    if (replyCommentText.trim() === '') {\n      alert('댓글을 작성해 주세요.');\n      return;\n    }\n    const newComment = {\n      cid,\n      uid: jotaiUserData.uid,\n      pid: Number(pid),\n      nickname: jotaiUserData.nickname,\n      body: replyCommentText,\n      created_at: new Date().toISOString(),\n      profileimg: jotaiUserData.profileimg\n    };\n    addReplyCommentMutation.mutate(newComment);\n    setReplyCommentText('');\n    setIsAddReply(false);\n  };\n  return /*#__PURE__*/_jsxDEV(S.CommentItem, {\n    margin: '20px 20px 10px 40px',\n    children: [/*#__PURE__*/_jsxDEV(S.CommentProfileImgBox, {\n      children: [/*#__PURE__*/_jsxDEV(S.CommentProfileImg, {\n        src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.profileimg}`,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.CommentInput, {\n      value: replyCommentText,\n      onChange: handleCommentInputChange,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.CommentPanel, {\n      children: /*#__PURE__*/_jsxDEV(S.Button, {\n        width: \"50px\",\n        height: \"30px\",\n        onClick: handleAddBtnClick,\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyCommentForm, \"kzEHCUYbfVkctYg/9svA8cmMwTo=\", false, function () {\n  return [useCommentMutation, useAtom];\n});\n_c = ReplyCommentForm;\nexport default ReplyCommentForm;\nvar _c;\n$RefreshReg$(_c, \"ReplyCommentForm\");","map":{"version":3,"names":["React","useState","useCommentMutation","S","jotaiUserDataAtom","useAtom","jsxDEV","_jsxDEV","ReplyCommentForm","pid","cid","setIsAddReply","_s","addReplyCommentMutation","replyCommentText","setReplyCommentText","jotaiUserData","handleCommentInputChange","e","target","value","handleKeyDown","key","handleAddBtnClick","alert","trim","newComment","uid","Number","nickname","body","created_at","Date","toISOString","profileimg","mutate","CommentItem","margin","children","CommentProfileImgBox","CommentProfileImg","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","CommentInput","onChange","onKeyDown","CommentPanel","Button","width","height","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/comments/reply/ReplyCommentForm.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useState } from 'react';\r\nimport useCommentMutation from '../../../hooks/useCommentMutation';\r\nimport * as S from '../comment/Styled.Comments';\r\nimport { jotaiUserDataAtom } from '../../common/Header';\r\nimport { useAtom } from 'jotai';\r\n\r\ninterface ReplyCommentFormProps {\r\n  cid: number;\r\n  pid: string;\r\n  setIsAddReply: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst ReplyCommentForm = ({ pid, cid, setIsAddReply }: ReplyCommentFormProps) => {\r\n  const { addReplyCommentMutation } = useCommentMutation();\r\n  const [replyCommentText, setReplyCommentText] = useState('');\r\n\r\n  const [jotaiUserData] = useAtom(jotaiUserDataAtom);\r\n\r\n  const handleCommentInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setReplyCommentText(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleAddBtnClick();\r\n    }\r\n  };\r\n\r\n  const handleAddBtnClick = () => {\r\n    if (!jotaiUserData) {\r\n      alert('로그인 후 사용 가능합니다.');\r\n      return;\r\n    }\r\n\r\n    if (replyCommentText.trim() === '') {\r\n      alert('댓글을 작성해 주세요.');\r\n      return;\r\n    }\r\n\r\n    const newComment = {\r\n      cid,\r\n      uid: jotaiUserData.uid,\r\n      pid: Number(pid),\r\n      nickname: jotaiUserData.nickname,\r\n      body: replyCommentText,\r\n      created_at: new Date().toISOString(),\r\n      profileimg: jotaiUserData.profileimg\r\n    };\r\n\r\n    addReplyCommentMutation.mutate(newComment);\r\n    setReplyCommentText('');\r\n    setIsAddReply(false);\r\n  };\r\n\r\n  return (\r\n    <S.CommentItem margin={'20px 20px 10px 40px'}>\r\n      <S.CommentProfileImgBox>\r\n        <S.CommentProfileImg\r\n          src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData?.profileimg}`}\r\n          alt=\"Profile\"\r\n        />\r\n        <div>{jotaiUserData?.nickname}</div>\r\n      </S.CommentProfileImgBox>\r\n      <S.CommentInput value={replyCommentText} onChange={handleCommentInputChange} onKeyDown={handleKeyDown} />\r\n      <S.CommentPanel>\r\n        <S.Button width=\"50px\" height=\"30px\" onClick={handleAddBtnClick}>\r\n          등록\r\n        </S.Button>\r\n      </S.CommentPanel>\r\n    </S.CommentItem>\r\n  );\r\n};\r\n\r\nexport default ReplyCommentForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}