{"ast":null,"code":"export function expiresAt(expiresIn) {\n  const timeNow = Math.round(Date.now() / 1000);\n  return timeNow + expiresIn;\n}\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexport const isBrowser = () => typeof document !== 'undefined';\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false;\n  }\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false;\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false;\n  }\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable;\n  }\n  const randomKey = `lswt-${Math.random()}${Math.random()}`;\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey);\n    globalThis.localStorage.removeItem(randomKey);\n    localStorageWriteTests.tested = true;\n    localStorageWriteTests.writable = true;\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n    localStorageWriteTests.tested = true;\n    localStorageWriteTests.writable = false;\n  }\n  return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href) {\n  const result = {};\n  const url = new URL(href);\n  if (url.hash && url.hash[0] === '#') {\n    try {\n      const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n      hashSearchParams.forEach((value, key) => {\n        result[key] = value;\n      });\n    } catch (e) {\n      // hash is not a query string\n    }\n  }\n  // search parameters take precedence over hash parameters\n  url.searchParams.forEach((value, key) => {\n    result[key] = value;\n  });\n  return result;\n}\nexport const resolveFetch = customFetch => {\n  let _fetch;\n  if (customFetch) {\n    _fetch = customFetch;\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args);\n  } else {\n    _fetch = fetch;\n  }\n  return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = maybeResponse => {\n  return typeof maybeResponse === 'object' && maybeResponse !== null && 'status' in maybeResponse && 'ok' in maybeResponse && 'json' in maybeResponse && typeof maybeResponse.json === 'function';\n};\n// Storage helpers\nexport const setItemAsync = async (storage, key, data) => {\n  await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n  const value = await storage.getItem(key);\n  if (!value) {\n    return null;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (_a) {\n    return value;\n  }\n};\nexport const removeItemAsync = async (storage, key) => {\n  await storage.removeItem(key);\n};\nexport function decodeBase64URL(value) {\n  const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let base64 = '';\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n  value = value.replace('-', '+').replace('_', '/');\n  while (i < value.length) {\n    enc1 = key.indexOf(value.charAt(i++));\n    enc2 = key.indexOf(value.charAt(i++));\n    enc3 = key.indexOf(value.charAt(i++));\n    enc4 = key.indexOf(value.charAt(i++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    base64 = base64 + String.fromCharCode(chr1);\n    if (enc3 != 64 && chr2 != 0) {\n      base64 = base64 + String.fromCharCode(chr2);\n    }\n    if (enc4 != 64 && chr3 != 0) {\n      base64 = base64 + String.fromCharCode(chr3);\n    }\n  }\n  return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n  constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;\n    this.promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\nDeferred.promiseConstructor = Promise;\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token) {\n  // Regex checks for base64url format\n  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n  const parts = token.split('.');\n  if (parts.length !== 3) {\n    throw new Error('JWT is not valid: not a JWT structure');\n  }\n  if (!base64UrlRegex.test(parts[1])) {\n    throw new Error('JWT is not valid: payload is not in base64url format');\n  }\n  const base64Url = parts[1];\n  return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time) {\n  return await new Promise(accept => {\n    setTimeout(() => accept(null), time);\n  });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n  const promise = new Promise((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;\n    (async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt);\n          if (!isRetryable(attempt, null, result)) {\n            accept(result);\n            return;\n          }\n        } catch (e) {\n          if (!isRetryable(attempt, e)) {\n            reject(e);\n            return;\n          }\n        }\n      }\n    })();\n  });\n  return promise;\n}\nfunction dec2hex(dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n  const verifierLength = 56;\n  const array = new Uint32Array(verifierLength);\n  if (typeof crypto === 'undefined') {\n    const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n    const charSetLen = charSet.length;\n    let verifier = '';\n    for (let i = 0; i < verifierLength; i++) {\n      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n    }\n    return verifier;\n  }\n  crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n  const encoder = new TextEncoder();\n  const encodedData = encoder.encode(randomString);\n  const hash = await crypto.subtle.digest('SHA-256', encodedData);\n  const bytes = new Uint8Array(hash);\n  return Array.from(bytes).map(c => String.fromCharCode(c)).join('');\n}\nfunction base64urlencode(str) {\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function generatePKCEChallenge(verifier) {\n  if (typeof crypto === 'undefined') {\n    console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n    return verifier;\n  }\n  const hashed = await sha256(verifier);\n  return base64urlencode(hashed);\n}\nconst STACK_GUARD_PREFIX = `__stack_guard__`;\nconst STACK_GUARD_SUFFIX = `__`;\n// Firefox and WebKit based browsers encode the stack entry differently, but\n// they all include the function name. So instead of trying to parse the entry,\n// we're only looking for the special string `__stack_guard__${guardName}__`.\n// Guard names can only be letters with dashes or underscores.\n//\n// Example Firefox stack trace:\n// ```\n// __stack_guard__EXAMPLE__@debugger eval code:1:55\n// @debugger eval code:1:3\n// ```\n//\n// Example WebKit/Chrome stack trace:\n// ```\n// Error\n//  at Object.__stack_guard__EXAMPLE__ (<anonymous>:1:55)\n//  at <anonymous>:1:13\n// ```\n//\nconst STACK_ENTRY_REGEX = /__stack_guard__([a-zA-Z0-9_-]+)__/;\nlet STACK_GUARD_CHECKED = false;\nlet STACK_GUARD_CHECK_FN; // eslint-disable-line prefer-const\nlet STACK_GUARDS_SUPPORTED = false;\n/**\n * Checks if the current caller of the function is in a {@link\n * #stackGuard} of the provided `name`. Works by looking through\n * the stack trace of an `Error` object for a special function\n * name (generated by {@link #stackGuard}).\n *\n * @param name The name of the stack guard to check for. Must be `[a-zA-Z0-9_-]` only.\n */\nexport function isInStackGuard(name) {\n  var _a, _b;\n  STACK_GUARD_CHECK_FN();\n  let error;\n  try {\n    throw new Error();\n  } catch (e) {\n    error = e;\n  }\n  const stack = (_b = (_a = error.stack) === null || _a === void 0 ? void 0 : _a.split('\\n')) !== null && _b !== void 0 ? _b : [];\n  for (let i = 0; i < stack.length; i += 1) {\n    const entry = stack[i];\n    const match = entry.match(STACK_ENTRY_REGEX);\n    if (match && match[1] === name) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * Creates a minification resistant stack guard, i.e. if you\n * call {@link #isInStackGuard} from within the `fn` parameter\n * function, you will always get `true` otherwise it will be\n * `false`.\n *\n * Works by dynamically defining a function name before calling\n * into `fn`, which is then parsed from the stack trace on an\n * `Error` object within {@link #isInStackGuard}.\n *\n * @param name The name of the stack guard. Must be `[a-zA-Z0-9_-]` only.\n * @param fn The async/await function to be run within the stack guard.\n */\nexport async function stackGuard(name, fn) {\n  await STACK_GUARD_CHECK_FN();\n  const guardName = `${STACK_GUARD_PREFIX}${name}${STACK_GUARD_SUFFIX}`;\n  const guardFunc = {\n    // per ECMAScript rules, this defines a new function with the dynamic name\n    // contained in the `guardName` variable\n    // this function name shows up in stack traces and is resistant to mangling\n    // from minification processes as it is determined at runtime\n    [guardName]: async () => await fn()\n  };\n  // Safari does not log the name of a dynamically named function unless you\n  // explicitly set the displayName\n  Object.assign(guardFunc[guardName], {\n    displayName: guardName\n  });\n  return await guardFunc[guardName]();\n}\n/**\n * Returns if the JavaScript engine supports stack guards. If it doesn't\n * certain features that depend on detecting recursive calls should be disabled\n * to prevent deadlocks.\n */\nexport async function stackGuardsSupported() {\n  if (STACK_GUARD_CHECKED) {\n    return STACK_GUARDS_SUPPORTED;\n  }\n  await STACK_GUARD_CHECK_FN();\n  return STACK_GUARDS_SUPPORTED;\n}\nlet STACK_GUARD_WARNING_LOGGED = false;\n// In certain cases, if this file is transpiled using an ES2015 target, or is\n// running in a JS engine that does not support async/await stack traces, this\n// function will log a single warning message.\nSTACK_GUARD_CHECK_FN = async () => {\n  if (!STACK_GUARD_CHECKED) {\n    STACK_GUARD_CHECKED = true;\n    await stackGuard('ENV_CHECK', async () => {\n      // sleeping for the next tick as Safari loses track of the async/await\n      // trace beyond this point\n      await sleep(0);\n      const result = isInStackGuard('ENV_CHECK');\n      STACK_GUARDS_SUPPORTED = result;\n      if (!result && !STACK_GUARD_WARNING_LOGGED) {\n        STACK_GUARD_WARNING_LOGGED = true;\n        console.warn('@supabase/gotrue-js: Stack guards not supported in this environment. Generally not an issue but may point to a very conservative transpilation environment (use ES2017 or above) that implements async/await with generators, or this is a JavaScript engine that does not support async/await stack traces. Safari is known to not support stack guards.');\n      }\n      return result;\n    });\n  }\n};","map":{"version":3,"names":["expiresAt","expiresIn","timeNow","Math","round","Date","now","uuid","replace","c","r","random","v","toString","isBrowser","document","localStorageWriteTests","tested","writable","supportsLocalStorage","globalThis","localStorage","e","randomKey","setItem","removeItem","parseParametersFromURL","href","result","url","URL","hash","hashSearchParams","URLSearchParams","substring","forEach","value","key","searchParams","resolveFetch","customFetch","_fetch","fetch","args","looksLikeFetchResponse","maybeResponse","json","setItemAsync","storage","data","JSON","stringify","getItemAsync","getItem","parse","_a","removeItemAsync","decodeBase64URL","base64","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","length","indexOf","charAt","String","fromCharCode","Deferred","constructor","promise","promiseConstructor","res","rej","resolve","reject","Promise","decodeJWTPayload","token","base64UrlRegex","parts","split","Error","test","base64Url","sleep","time","accept","setTimeout","retryable","fn","isRetryable","attempt","Infinity","dec2hex","dec","substr","generatePKCEVerifier","verifierLength","array","Uint32Array","crypto","charSet","charSetLen","verifier","floor","getRandomValues","Array","from","join","sha256","randomString","encoder","TextEncoder","encodedData","encode","subtle","digest","bytes","Uint8Array","map","base64urlencode","str","btoa","generatePKCEChallenge","console","warn","hashed","STACK_GUARD_PREFIX","STACK_GUARD_SUFFIX","STACK_ENTRY_REGEX","STACK_GUARD_CHECKED","STACK_GUARD_CHECK_FN","STACK_GUARDS_SUPPORTED","isInStackGuard","name","error","stack","_b","entry","match","stackGuard","guardName","guardFunc","Object","assign","displayName","stackGuardsSupported","STACK_GUARD_WARNING_LOGGED"],"sources":["C:\\React\\team_one\\.yarn\\cache\\@supabase-gotrue-js-npm-2.46.1-6290d2f0f6-051be5f935.zip\\node_modules\\@supabase\\gotrue-js\\src\\lib\\helpers.ts"],"sourcesContent":["import { SupportedStorage } from './types'\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof document !== 'undefined'\n\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false,\n}\n\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false\n  }\n\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false\n  }\n\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable\n  }\n\n  const randomKey = `lswt-${Math.random()}${Math.random()}`\n\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey)\n    globalThis.localStorage.removeItem(randomKey)\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = true\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = false\n  }\n\n  return localStorageWriteTests.writable\n}\n\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href: string) {\n  const result: { [parameter: string]: string } = {}\n\n  const url = new URL(href)\n\n  if (url.hash && url.hash[0] === '#') {\n    try {\n      const hashSearchParams = new URLSearchParams(url.hash.substring(1))\n      hashSearchParams.forEach((value, key) => {\n        result[key] = value\n      })\n    } catch (e: any) {\n      // hash is not a query string\n    }\n  }\n\n  // search parameters take precedence over hash parameters\n  url.searchParams.forEach((value, key) => {\n    result[key] = value\n  })\n\n  return result\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const looksLikeFetchResponse = (maybeResponse: unknown): maybeResponse is Response => {\n  return (\n    typeof maybeResponse === 'object' &&\n    maybeResponse !== null &&\n    'status' in maybeResponse &&\n    'ok' in maybeResponse &&\n    'json' in maybeResponse &&\n    typeof (maybeResponse as any).json === 'function'\n  )\n}\n\n// Storage helpers\nexport const setItemAsync = async (\n  storage: SupportedStorage,\n  key: string,\n  data: any\n): Promise<void> => {\n  await storage.setItem(key, JSON.stringify(data))\n}\n\nexport const getItemAsync = async (storage: SupportedStorage, key: string): Promise<unknown> => {\n  const value = await storage.getItem(key)\n\n  if (!value) {\n    return null\n  }\n\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const removeItemAsync = async (storage: SupportedStorage, key: string): Promise<void> => {\n  await storage.removeItem(key)\n}\n\nexport function decodeBase64URL(value: string): string {\n  const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  let base64 = ''\n  let chr1, chr2, chr3\n  let enc1, enc2, enc3, enc4\n  let i = 0\n  value = value.replace('-', '+').replace('_', '/')\n\n  while (i < value.length) {\n    enc1 = key.indexOf(value.charAt(i++))\n    enc2 = key.indexOf(value.charAt(i++))\n    enc3 = key.indexOf(value.charAt(i++))\n    enc4 = key.indexOf(value.charAt(i++))\n    chr1 = (enc1 << 2) | (enc2 >> 4)\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n    chr3 = ((enc3 & 3) << 6) | enc4\n    base64 = base64 + String.fromCharCode(chr1)\n\n    if (enc3 != 64 && chr2 != 0) {\n      base64 = base64 + String.fromCharCode(chr2)\n    }\n    if (enc4 != 64 && chr3 != 0) {\n      base64 = base64 + String.fromCharCode(chr3)\n    }\n  }\n  return base64\n}\n\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred<T = any> {\n  public static promiseConstructor: PromiseConstructor = Promise\n\n  public readonly promise!: PromiseLike<T>\n\n  public readonly resolve!: (value?: T | PromiseLike<T>) => void\n\n  public readonly reject!: (reason?: any) => any\n\n  public constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(this as any).promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).resolve = res\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).reject = rej\n    })\n  }\n}\n\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token: string) {\n  // Regex checks for base64url format\n  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i\n\n  const parts = token.split('.')\n\n  if (parts.length !== 3) {\n    throw new Error('JWT is not valid: not a JWT structure')\n  }\n\n  if (!base64UrlRegex.test(parts[1])) {\n    throw new Error('JWT is not valid: payload is not in base64url format')\n  }\n\n  const base64Url = parts[1]\n  return JSON.parse(decodeBase64URL(base64Url))\n}\n\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time: number): Promise<null> {\n  return await new Promise((accept) => {\n    setTimeout(() => accept(null), time)\n  })\n}\n\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable<T>(\n  fn: (attempt: number) => Promise<T>,\n  isRetryable: (attempt: number, error: any | null, result?: T) => boolean\n): Promise<T> {\n  const promise = new Promise<T>((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt)\n\n          if (!isRetryable(attempt, null, result)) {\n            accept(result)\n            return\n          }\n        } catch (e: any) {\n          if (!isRetryable(attempt, e)) {\n            reject(e)\n            return\n          }\n        }\n      }\n    })()\n  })\n\n  return promise\n}\n\nfunction dec2hex(dec: number) {\n  return ('0' + dec.toString(16)).substr(-2)\n}\n\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n  const verifierLength = 56\n  const array = new Uint32Array(verifierLength)\n  if (typeof crypto === 'undefined') {\n    const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~'\n    const charSetLen = charSet.length\n    let verifier = ''\n    for (let i = 0; i < verifierLength; i++) {\n      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen))\n    }\n    return verifier\n  }\n  crypto.getRandomValues(array)\n  return Array.from(array, dec2hex).join('')\n}\n\nasync function sha256(randomString: string) {\n  const encoder = new TextEncoder()\n  const encodedData = encoder.encode(randomString)\n  const hash = await crypto.subtle.digest('SHA-256', encodedData)\n  const bytes = new Uint8Array(hash)\n\n  return Array.from(bytes)\n    .map((c) => String.fromCharCode(c))\n    .join('')\n}\n\nfunction base64urlencode(str: string) {\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '')\n}\n\nexport async function generatePKCEChallenge(verifier: string) {\n  if (typeof crypto === 'undefined') {\n    console.warn(\n      'WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.'\n    )\n    return verifier\n  }\n  const hashed = await sha256(verifier)\n  return base64urlencode(hashed)\n}\n\nconst STACK_GUARD_PREFIX = `__stack_guard__`\nconst STACK_GUARD_SUFFIX = `__`\n\n// Firefox and WebKit based browsers encode the stack entry differently, but\n// they all include the function name. So instead of trying to parse the entry,\n// we're only looking for the special string `__stack_guard__${guardName}__`.\n// Guard names can only be letters with dashes or underscores.\n//\n// Example Firefox stack trace:\n// ```\n// __stack_guard__EXAMPLE__@debugger eval code:1:55\n// @debugger eval code:1:3\n// ```\n//\n// Example WebKit/Chrome stack trace:\n// ```\n// Error\n//  at Object.__stack_guard__EXAMPLE__ (<anonymous>:1:55)\n//  at <anonymous>:1:13\n// ```\n//\nconst STACK_ENTRY_REGEX = /__stack_guard__([a-zA-Z0-9_-]+)__/\n\nlet STACK_GUARD_CHECKED = false\nlet STACK_GUARD_CHECK_FN: () => Promise<void> // eslint-disable-line prefer-const\n\nlet STACK_GUARDS_SUPPORTED = false\n\n/**\n * Checks if the current caller of the function is in a {@link\n * #stackGuard} of the provided `name`. Works by looking through\n * the stack trace of an `Error` object for a special function\n * name (generated by {@link #stackGuard}).\n *\n * @param name The name of the stack guard to check for. Must be `[a-zA-Z0-9_-]` only.\n */\nexport function isInStackGuard(name: string): boolean {\n  STACK_GUARD_CHECK_FN()\n\n  let error: Error\n\n  try {\n    throw new Error()\n  } catch (e: any) {\n    error = e\n  }\n\n  const stack = error.stack?.split('\\n') ?? []\n\n  for (let i = 0; i < stack.length; i += 1) {\n    const entry = stack[i]\n    const match = entry.match(STACK_ENTRY_REGEX)\n\n    if (match && match[1] === name) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Creates a minification resistant stack guard, i.e. if you\n * call {@link #isInStackGuard} from within the `fn` parameter\n * function, you will always get `true` otherwise it will be\n * `false`.\n *\n * Works by dynamically defining a function name before calling\n * into `fn`, which is then parsed from the stack trace on an\n * `Error` object within {@link #isInStackGuard}.\n *\n * @param name The name of the stack guard. Must be `[a-zA-Z0-9_-]` only.\n * @param fn The async/await function to be run within the stack guard.\n */\nexport async function stackGuard<R>(name: string, fn: () => Promise<R>): Promise<R> {\n  await STACK_GUARD_CHECK_FN()\n\n  const guardName = `${STACK_GUARD_PREFIX}${name}${STACK_GUARD_SUFFIX}`\n\n  const guardFunc: {\n    [funcName: string]: () => Promise<R>\n  } = {\n    // per ECMAScript rules, this defines a new function with the dynamic name\n    // contained in the `guardName` variable\n    // this function name shows up in stack traces and is resistant to mangling\n    // from minification processes as it is determined at runtime\n    [guardName]: async () => await fn(),\n  }\n\n  // Safari does not log the name of a dynamically named function unless you\n  // explicitly set the displayName\n  Object.assign(guardFunc[guardName], { displayName: guardName })\n\n  return await guardFunc[guardName]()\n}\n\n/**\n * Returns if the JavaScript engine supports stack guards. If it doesn't\n * certain features that depend on detecting recursive calls should be disabled\n * to prevent deadlocks.\n */\nexport async function stackGuardsSupported(): Promise<boolean> {\n  if (STACK_GUARD_CHECKED) {\n    return STACK_GUARDS_SUPPORTED\n  }\n\n  await STACK_GUARD_CHECK_FN()\n\n  return STACK_GUARDS_SUPPORTED\n}\n\nlet STACK_GUARD_WARNING_LOGGED = false\n\n// In certain cases, if this file is transpiled using an ES2015 target, or is\n// running in a JS engine that does not support async/await stack traces, this\n// function will log a single warning message.\nSTACK_GUARD_CHECK_FN = async () => {\n  if (!STACK_GUARD_CHECKED) {\n    STACK_GUARD_CHECKED = true\n\n    await stackGuard('ENV_CHECK', async () => {\n      // sleeping for the next tick as Safari loses track of the async/await\n      // trace beyond this point\n      await sleep(0)\n\n      const result = isInStackGuard('ENV_CHECK')\n      STACK_GUARDS_SUPPORTED = result\n\n      if (!result && !STACK_GUARD_WARNING_LOGGED) {\n        STACK_GUARD_WARNING_LOGGED = true\n        console.warn(\n          '@supabase/gotrue-js: Stack guards not supported in this environment. Generally not an issue but may point to a very conservative transpilation environment (use ES2017 or above) that implements async/await with generators, or this is a JavaScript engine that does not support async/await stack traces. Safari is known to not support stack guards.'\n        )\n      }\n\n      return result\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}