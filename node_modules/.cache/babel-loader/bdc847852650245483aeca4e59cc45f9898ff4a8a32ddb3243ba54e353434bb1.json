{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\Post.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport Editor from '../editor/Editor';\nimport { v4 as uuidv4 } from 'uuid';\nimport { supabase } from '../../services/supabase/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const navigate = useNavigate();\n  const [newTitle, setNewTitle] = useState('');\n  const [newBody, setNewBody] = useState('');\n  const [selectedImages, setSelectedImages] = useState([]);\n  const handleAddPost = async () => {\n    if (!newTitle.trim() || !newBody.trim()) {\n      alert('제목과 본문을 모두 입력해주세요.');\n      return;\n    }\n    const imageUrls = [];\n    for (let i = 0; i < selectedImages.length; i++) {\n      const selectedImage = selectedImages[i];\n      const imagePath = `images/${selectedImage.name}`;\n\n      // Check if the image already exists\n      const {\n        data,\n        error: fetchError\n      } = await supabase.storage.from('1st').getMetadata([imagePath]);\n      if (!fetchError && data && data.length > 0) {\n        // If the image already exists, use its URL\n        imageUrls.push(data[0].url);\n      } else {\n        // If the image doesn't exist, upload it\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from('1st').upload(imagePath, selectedImage);\n        if (uploadError) {\n          console.error('Error uploading image to Supabase storage:', uploadError);\n          alert('이미지 업로드 중 에러가 발생했습니다!');\n          return;\n        }\n        imageUrls.push(uploadData.path);\n      }\n    }\n    const {\n      error: insertError\n    } = await supabase.from('posts').insert([{\n      title: newTitle,\n      body: newBody,\n      image_urls: imageUrls\n    }]);\n    if (insertError) {\n      console.error('Error adding post:', insertError);\n      alert('에러가 발생했습니다!');\n      return;\n    }\n    setNewTitle('');\n    setNewBody('');\n    setSelectedImages([]);\n    alert('글 작성이 완료되었습니다.');\n    navigate(`/`);\n  };\n  const handleImageChange = e => {\n    const selectedFiles = e.target.files;\n    if (selectedFiles) {\n      const newImages = [];\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const selectedFile = selectedFiles[i];\n        const originalFileName = selectedFile.name;\n        const fileExtension = originalFileName.split('.').pop();\n        const randomFileName = uuidv4() + '.' + fileExtension;\n        newImages.push(new File([selectedFile], randomFileName));\n      }\n      setSelectedImages(newImages);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: newBody,\n        onChange: content => setNewBody(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"I2Cfbkjbpj42N+ND6a50+mP2TXw=\", false, function () {\n  return [useNavigate];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useNavigate","useState","Editor","v4","uuidv4","supabase","jsxDEV","_jsxDEV","Post","_s","navigate","newTitle","setNewTitle","newBody","setNewBody","selectedImages","setSelectedImages","handleAddPost","trim","alert","imageUrls","i","length","selectedImage","imagePath","name","data","error","fetchError","storage","from","getMetadata","push","url","uploadData","uploadError","upload","console","path","insertError","insert","title","body","image_urls","handleImageChange","e","selectedFiles","target","files","newImages","selectedFile","originalFileName","fileExtension","split","pop","randomFileName","File","children","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","content","accept","multiple","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/Post.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Editor from '../editor/Editor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { supabase } from '../../services/supabase/supabase';\r\n\r\nconst Post = () => {\r\n  const navigate = useNavigate();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newBody, setNewBody] = useState('');\r\n  const [selectedImages, setSelectedImages] = useState<File[]>([]);\r\n\r\n  const handleAddPost = async () => {\r\n    if (!newTitle.trim() || !newBody.trim()) {\r\n      alert('제목과 본문을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    const imageUrls = [];\r\n\r\n    for (let i = 0; i < selectedImages.length; i++) {\r\n      const selectedImage = selectedImages[i];\r\n      const imagePath = `images/${selectedImage.name}`;\r\n\r\n      // Check if the image already exists\r\n      const { data, error: fetchError } = await supabase.storage.from('1st').getMetadata([imagePath]);\r\n      if (!fetchError && data && data.length > 0) {\r\n        // If the image already exists, use its URL\r\n        imageUrls.push(data[0].url);\r\n      } else {\r\n        // If the image doesn't exist, upload it\r\n        const { data: uploadData, error: uploadError } = await supabase.storage\r\n          .from('1st')\r\n          .upload(imagePath, selectedImage);\r\n\r\n        if (uploadError) {\r\n          console.error('Error uploading image to Supabase storage:', uploadError);\r\n          alert('이미지 업로드 중 에러가 발생했습니다!');\r\n          return;\r\n        }\r\n\r\n        imageUrls.push(uploadData.path);\r\n      }\r\n    }\r\n\r\n    const { error: insertError } = await supabase\r\n      .from('posts')\r\n      .insert([{ title: newTitle, body: newBody, image_urls: imageUrls }]);\r\n\r\n    if (insertError) {\r\n      console.error('Error adding post:', insertError);\r\n      alert('에러가 발생했습니다!');\r\n      return;\r\n    }\r\n\r\n    setNewTitle('');\r\n    setNewBody('');\r\n    setSelectedImages([]);\r\n    alert('글 작성이 완료되었습니다.');\r\n    navigate(`/`);\r\n  };\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFiles = e.target.files;\r\n\r\n    if (selectedFiles) {\r\n      const newImages: File[] = [];\r\n\r\n      for (let i = 0; i < selectedFiles.length; i++) {\r\n        const selectedFile = selectedFiles[i];\r\n        const originalFileName = selectedFile.name;\r\n        const fileExtension = originalFileName.split('.').pop();\r\n        const randomFileName = uuidv4() + '.' + fileExtension;\r\n        newImages.push(new File([selectedFile], randomFileName));\r\n      }\r\n\r\n      setSelectedImages(newImages);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n        <Editor value={newBody} onChange={(content) => setNewBody(content)} />\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <input type=\"file\" accept=\"image/*\" multiple onChange={handleImageChange} />\r\n        <button onClick={handleAddPost}>글 작성하기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}