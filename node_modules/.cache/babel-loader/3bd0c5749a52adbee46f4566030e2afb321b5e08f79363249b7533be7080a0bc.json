{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\comments\\\\comment\\\\commentform\\\\CommentForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useCommentMutation from '../../../../hooks/useCommentMutation';\n// import baseProfile from '../../image/baseprofile.jpeg';\nimport * as S from './Styled.Form';\nimport { jotaiUserDataAtom } from '../../../common/header/Header';\nimport { useAtom } from 'jotai';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport { MailFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentForm = ({\n  pid\n}) => {\n  _s();\n  const [showAlert, setShowAlert] = useState(false);\n  const {\n    addCommentMutation\n  } = useCommentMutation();\n  const [commentText, setCommentText] = useState('');\n  const [jotaiUserData] = useAtom(jotaiUserDataAtom);\n  const handleCommentInputChange = e => {\n    setCommentText(e.target.value);\n  };\n\n  // const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n  //   if (e.key === 'Enter') {\n  //     handleAddBtnClick();\n  //   }\n  // };\n\n  const handleAddBtnClick = () => {\n    if (!jotaiUserData) {\n      alert('로그인 후 사용 가능합니다.');\n      return;\n    }\n    if (commentText.trim() === '') {\n      setShowAlert(true);\n      setTimeout(() => {\n        setShowAlert(false);\n        console.log('Alert hidden');\n      }, 3000);\n      return false;\n    }\n    const newComment = {\n      uid: jotaiUserData.uid,\n      pid: Number(pid),\n      nickname: jotaiUserData.nickname,\n      body: commentText,\n      created_at: new Date().toISOString(),\n      profileimg: jotaiUserData.profileimg\n    };\n    addCommentMutation.mutate(newComment);\n    setCommentText('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', /*#__PURE__*/_jsxDEV(S.Container, {\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          width: '100%',\n          position: 'fixed',\n          bottom: 0,\n          zIndex: 100\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(S.ProfileBox, {\n          children: /*#__PURE__*/_jsxDEV(S.ProfileImg, {\n            src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.profileimg}`,\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.TextBox, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.Text, {\n            value: commentText,\n            onChange: handleCommentInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.ButtonBox, {\n            children: /*#__PURE__*/_jsxDEV(S.Button, {\n              onClick: handleAddBtnClick,\n              children: /*#__PURE__*/_jsxDEV(MailFilled, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CommentForm, \"KCPEDOT9hiiClEqiq+OVFMAemzc=\", false, function () {\n  return [useCommentMutation, useAtom];\n});\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","useCommentMutation","S","jotaiUserDataAtom","useAtom","Alert","Stack","MailFilled","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentForm","pid","_s","showAlert","setShowAlert","addCommentMutation","commentText","setCommentText","jotaiUserData","handleCommentInputChange","e","target","value","handleAddBtnClick","alert","trim","setTimeout","console","log","newComment","uid","Number","nickname","body","created_at","Date","toISOString","profileimg","mutate","children","Container","sx","width","position","bottom","zIndex","severity","fileName","_jsxFileName","lineNumber","columnNumber","Wrapper","ProfileBox","ProfileImg","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","TextBox","Text","onChange","ButtonBox","Button","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/comments/comment/commentform/CommentForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport useCommentMutation from '../../../../hooks/useCommentMutation';\r\n// import baseProfile from '../../image/baseprofile.jpeg';\r\nimport * as S from './Styled.Form';\r\nimport { jotaiUserDataAtom } from '../../../common/header/Header';\r\nimport { useAtom } from 'jotai';\r\n\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport { MailFilled } from '@ant-design/icons';\r\n\r\ninterface CommentFormProps {\r\n  pid: string;\r\n}\r\n\r\nconst CommentForm = ({ pid }: CommentFormProps) => {\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const { addCommentMutation } = useCommentMutation();\r\n  const [commentText, setCommentText] = useState('');\r\n\r\n  const [jotaiUserData] = useAtom(jotaiUserDataAtom);\r\n\r\n  const handleCommentInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n\r\n  // const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n  //   if (e.key === 'Enter') {\r\n  //     handleAddBtnClick();\r\n  //   }\r\n  // };\r\n\r\n  const handleAddBtnClick = () => {\r\n    if (!jotaiUserData) {\r\n      alert('로그인 후 사용 가능합니다.');\r\n\r\n      return;\r\n    }\r\n\r\n    if (commentText.trim() === '') {\r\n      setShowAlert(true);\r\n      setTimeout(() => {\r\n        setShowAlert(false);\r\n        console.log('Alert hidden');\r\n      }, 3000);\r\n      return false;\r\n    }\r\n\r\n    const newComment = {\r\n      uid: jotaiUserData.uid,\r\n      pid: Number(pid),\r\n      nickname: jotaiUserData.nickname,\r\n      body: commentText,\r\n      created_at: new Date().toISOString(),\r\n      profileimg: jotaiUserData.profileimg\r\n    };\r\n\r\n    addCommentMutation.mutate(newComment);\r\n    setCommentText('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      {/* <S.Line></S.Line> */}\r\n      <S.Container>\r\n        {showAlert && (\r\n          <Stack sx={{ width: '100%', position: 'fixed', bottom: 0, zIndex: 100 }}>\r\n            <Alert severity=\"error\">댓글을 작성해 주세요.</Alert>\r\n          </Stack>\r\n        )}\r\n        <S.Wrapper>\r\n          <S.ProfileBox>\r\n            <S.ProfileImg\r\n              src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData?.profileimg}`}\r\n              alt=\"Profile\"\r\n            />\r\n          </S.ProfileBox>\r\n          <S.TextBox>\r\n            <div>{jotaiUserData?.nickname}</div>\r\n            <S.Text value={commentText} onChange={handleCommentInputChange} />\r\n            <S.ButtonBox>\r\n              <S.Button onClick={handleAddBtnClick}>\r\n                <MailFilled />\r\n              </S.Button>\r\n            </S.ButtonBox>\r\n          </S.TextBox>\r\n        </S.Wrapper>\r\n      </S.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}