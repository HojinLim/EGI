{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\Post.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport Editor from './Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst Post = () => {\n  _s();\n  //   const [, setPosts] = useState<Post[]>([]);\n  const navigate = useNavigate();\n  const [newTitle, setNewTitle] = useState('');\n  const [newbody, setNewBody] = useState('');\n\n  //   useEffect(() => {\n  //     async function fetchPosts() {\n  //       const { data, error } = await supabase.from('posts').select('*');\n\n  //       if (error) {\n  //         console.error('Error fetching posts:', error);\n  //       } else {\n  //         setPosts(data);\n  //       }\n  //     }\n\n  //     fetchPosts();\n  //   }, []);\n\n  const handleAddPost = async () => {\n    if (!newTitle.trim() || !newbody.trim()) {\n      alert('제목과 본문을 모두 입력해주세요.');\n      return;\n    }\n    if (newTitle && newbody) {\n      const {\n        error\n      } = await supabase.from('posts').insert([{\n        title: newTitle,\n        body: newbody\n      }]);\n      setNewTitle('');\n      setNewBody('');\n      if (error) {\n        console.error('Error adding post:', error);\n        // 여기에서 에러 처리를 원하는 대로 수행하세요.\n      } else {\n        alert('글 작성이 완료되었습니다.');\n        navigate(`/`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: newbody,\n        onChange: content => setNewBody(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"DiiUBROHiNiIvUfLs9j2Mi99yaU=\", false, function () {\n  return [useNavigate];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","createClient","useNavigate","useState","Editor","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_KEY","supabase","Post","_s","navigate","newTitle","setNewTitle","newbody","setNewBody","handleAddPost","trim","alert","error","from","insert","title","body","console","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/Post.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Editor from './Editor';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY as string;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nconst Post = () => {\r\n  //   const [, setPosts] = useState<Post[]>([]);\r\n  const navigate = useNavigate();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newbody, setNewBody] = useState('');\r\n\r\n  //   useEffect(() => {\r\n  //     async function fetchPosts() {\r\n  //       const { data, error } = await supabase.from('posts').select('*');\r\n\r\n  //       if (error) {\r\n  //         console.error('Error fetching posts:', error);\r\n  //       } else {\r\n  //         setPosts(data);\r\n  //       }\r\n  //     }\r\n\r\n  //     fetchPosts();\r\n  //   }, []);\r\n\r\n  const handleAddPost = async () => {\r\n    if (!newTitle.trim() || !newbody.trim()) {\r\n      alert('제목과 본문을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    if (newTitle && newbody) {\r\n      const { error } = await supabase.from('posts').insert([{ title: newTitle, body: newbody }]);\r\n\r\n      setNewTitle('');\r\n      setNewBody('');\r\n      if (error) {\r\n        console.error('Error adding post:', error);\r\n        // 여기에서 에러 처리를 원하는 대로 수행하세요.\r\n      } else {\r\n        alert('글 작성이 완료되었습니다.');\r\n        navigate(`/`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n        <Editor value={newbody} onChange={(content) => setNewBody(content)} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <button onClick={handleAddPost}>Add Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}