{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\payment\\\\payment.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useAtom } from 'jotai';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { userEmailAtom } from '../user/login/Login';\nimport { jotaiUserDataAtom } from '../common/header/Header';\nimport { styled } from 'styled-components';\nimport kakao from '../../image/kakaopay.png';\nimport inicis from '../../image/Inicis.png';\nimport toss from '../../image/tosspay.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = ({\n  handlePayment,\n  post\n}) => {\n  _s();\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\n  const [userEmail] = useAtom(userEmailAtom);\n  const queryClient = useQueryClient();\n\n  // 생성한 토큰 가져와서 새로고침 방지\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('jotaiUserData');\n    if (storedUserData) {\n      const parsedUserData = JSON.parse(storedUserData);\n      setJotaiUserData(parsedUserData);\n      queryClient.invalidateQueries(['users', userEmail]);\n    }\n  }, []);\n\n  // 결제 모듈 초기화\n  useEffect(() => {\n    const IMP = window.IMP;\n    const impKey = process.env.REACT_APP_IMP_KEY;\n    if (impKey) {\n      IMP === null || IMP === void 0 ? void 0 : IMP.init(impKey);\n    } else {\n      console.error('키가 없습니다.');\n    }\n  }, []);\n  const handlePaymentClick = (pg, post) => {\n    if (!post) {\n      console.error('Post is not available.');\n      return;\n    }\n    const paymentInfo = {\n      pg: pg,\n      pay_method: 'card',\n      merchant_uid: 'merchant_' + new Date().getTime(),\n      name: post.title,\n      amount: post.price || 0,\n      buyer_name: post.nickname,\n      buyer_tel: '010-1234-5678',\n      buyer_email: (jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.email) || ''\n    };\n    handlePayment(paymentInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(BtnBox, {\n    children: [/*#__PURE__*/_jsxDEV(Btn1, {\n      onClick: () => handlePaymentClick('kakaopay', post),\n      children: /*#__PURE__*/_jsxDEV(Img, {\n        src: kakao\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Btn, {\n      onClick: () => handlePaymentClick('tosspay', post),\n      children: /*#__PURE__*/_jsxDEV(Img, {\n        src: toss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Btn, {\n      onClick: () => handlePaymentClick('inicis', post),\n      children: /*#__PURE__*/_jsxDEV(Img, {\n        src: inicis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"Y5RIFN6VeMzLbP8yzI6wBRDq7z4=\", false, function () {\n  return [useAtom, useAtom, useQueryClient];\n});\n_c = Payment;\nexport default Payment;\nconst BtnBox = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  /* margin: 0 auto; */\n\n  /* width: 10px; */\n\n  margin: 0 120px 50px 120px;\n`;\n_c2 = BtnBox;\nconst Btn = styled.button`\n  margin-top: 30px;\n  width: 170px;\n  height: 60px;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n_c3 = Btn;\nconst Btn1 = styled.button`\n  margin-top: 30px;\n  width: 170px;\n  height: 100px;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n_c4 = Btn1;\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n_c5 = Img;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Payment\");\n$RefreshReg$(_c2, \"BtnBox\");\n$RefreshReg$(_c3, \"Btn\");\n$RefreshReg$(_c4, \"Btn1\");\n$RefreshReg$(_c5, \"Img\");","map":{"version":3,"names":["React","useEffect","useAtom","useQueryClient","userEmailAtom","jotaiUserDataAtom","styled","kakao","inicis","toss","jsxDEV","_jsxDEV","Payment","handlePayment","post","_s","jotaiUserData","setJotaiUserData","userEmail","queryClient","storedUserData","localStorage","getItem","parsedUserData","JSON","parse","invalidateQueries","IMP","window","impKey","process","env","REACT_APP_IMP_KEY","init","console","error","handlePaymentClick","pg","paymentInfo","pay_method","merchant_uid","Date","getTime","name","title","amount","price","buyer_name","nickname","buyer_tel","buyer_email","email","BtnBox","children","Btn1","onClick","Img","src","fileName","_jsxFileName","lineNumber","columnNumber","Btn","_c","div","_c2","button","_c3","_c4","img","_c5","$RefreshReg$"],"sources":["C:/React/team_one/src/components/payment/payment.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { RequestPayParams } from 'iamport-typings';\r\nimport { Post } from '../../types/supabase';\r\nimport { useAtom } from 'jotai';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { userEmailAtom } from '../user/login/Login';\r\nimport { jotaiUserDataAtom } from '../common/header/Header';\r\nimport { styled } from 'styled-components';\r\nimport kakao from '../../image/kakaopay.png';\r\nimport inicis from '../../image/Inicis.png';\r\nimport toss from '../../image/tosspay.png';\r\ninterface PaymentProps {\r\n  handlePayment: (paymentInfo: RequestPayParams) => void;\r\n  post: Post;\r\n}\r\n\r\nconst Payment: React.FC<PaymentProps> = ({ handlePayment, post }) => {\r\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\r\n  const [userEmail] = useAtom(userEmailAtom);\r\n  const queryClient = useQueryClient();\r\n\r\n  // 생성한 토큰 가져와서 새로고침 방지\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem('jotaiUserData');\r\n    if (storedUserData) {\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setJotaiUserData(parsedUserData);\r\n\r\n      queryClient.invalidateQueries(['users', userEmail]);\r\n    }\r\n  }, []);\r\n\r\n  // 결제 모듈 초기화\r\n  useEffect(() => {\r\n    const IMP = window.IMP;\r\n    const impKey = process.env.REACT_APP_IMP_KEY;\r\n\r\n    if (impKey) {\r\n      IMP?.init(impKey);\r\n    } else {\r\n      console.error('키가 없습니다.');\r\n    }\r\n  }, []);\r\n\r\n  const handlePaymentClick = (pg: string, post: Post) => {\r\n    if (!post) {\r\n      console.error('Post is not available.');\r\n      return;\r\n    }\r\n\r\n    const paymentInfo: RequestPayParams = {\r\n      pg: pg,\r\n      pay_method: 'card',\r\n      merchant_uid: 'merchant_' + new Date().getTime(),\r\n      name: post.title,\r\n      amount: post.price || 0,\r\n      buyer_name: post.nickname,\r\n      buyer_tel: '010-1234-5678',\r\n      buyer_email: jotaiUserData?.email || ''\r\n    };\r\n\r\n    handlePayment(paymentInfo);\r\n  };\r\n\r\n  return (\r\n    <BtnBox>\r\n      <Btn1 onClick={() => handlePaymentClick('kakaopay', post)}>\r\n        <Img src={kakao} />\r\n      </Btn1>\r\n      <Btn onClick={() => handlePaymentClick('tosspay', post)}>\r\n        <Img src={toss} />\r\n      </Btn>\r\n      <Btn onClick={() => handlePaymentClick('inicis', post)}>\r\n        <Img src={inicis} />\r\n      </Btn>\r\n    </BtnBox>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n\r\nconst BtnBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  /* margin: 0 auto; */\r\n\r\n  /* width: 10px; */\r\n\r\n  margin: 0 120px 50px 120px;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  margin-top: 30px;\r\n  width: 170px;\r\n  height: 60px;\r\n\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Btn1 = styled.button`\r\n  margin-top: 30px;\r\n  width: 170px;\r\n  height: 100px;\r\n\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}