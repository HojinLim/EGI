{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\Post.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport Editor from '../editor/Editor';\nimport { handleImageChange } from './HandleImage';\nimport { supabase } from '../../services/supabase/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const navigate = useNavigate();\n  const [newTitle, setNewTitle] = useState('');\n  const [newBody, setNewBody] = useState('');\n  const [newPrice, setNewPrice] = useState('');\n  const [newLocation, setNewLocation] = useState('');\n  const [selectedImages, setSelectedImages] = useState([]);\n  const handleAddPost = async () => {\n    if (!newTitle.trim() || !newBody.trim() || !newPrice.trim() || !newLocation.trim()) {\n      alert('제목, 본문, 가격, 지역을 모두 입력해주세요.');\n      return;\n    }\n    const imageUrls = [];\n    for (const selectedImage of selectedImages) {\n      const {\n        data,\n        error\n      } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\n      if (error) {\n        console.error('Error uploading image to Supabase storage:', error);\n        alert('이미지 업로드 중 에러가 발생했습니다!');\n        return;\n      }\n      imageUrls.push(data.path);\n    }\n    const {\n      error: insertError\n    } = await supabase.from('posts').insert([{\n      title: newTitle,\n      body: newBody,\n      image_urls: imageUrls,\n      price: newPrice,\n      location: newLocation\n    }]);\n    if (insertError) {\n      console.error('Error adding post:', insertError);\n      alert('에러가 발생했습니다!');\n      return;\n    }\n    setNewTitle('');\n    setNewBody('');\n    setNewPrice('');\n    setNewLocation('');\n    setSelectedImages([]);\n    alert('글 작성이 완료되었습니다.');\n    navigate(`/`);\n  };\n  const handleImageChangeWrapper = e => {\n    const selectedFiles = e.target.files;\n    if (selectedFiles) {\n      const updatedSelectedImages = handleImageChange(selectedFiles);\n      setSelectedImages(updatedSelectedImages);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        value: newPrice,\n        onChange: e => setNewPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: newLocation,\n        onChange: e => setNewLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: newBody,\n        onChange: content => setNewBody(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: handleImageChangeWrapper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"OVUo2bY/9HfzQWDn6RF4uYhTHno=\", false, function () {\n  return [useNavigate];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useNavigate","useState","Editor","handleImageChange","supabase","jsxDEV","_jsxDEV","Post","_s","navigate","newTitle","setNewTitle","newBody","setNewBody","newPrice","setNewPrice","newLocation","setNewLocation","selectedImages","setSelectedImages","handleAddPost","trim","alert","imageUrls","selectedImage","data","error","storage","from","upload","name","console","push","path","insertError","insert","title","body","image_urls","price","location","handleImageChangeWrapper","e","selectedFiles","target","files","updatedSelectedImages","children","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","content","accept","multiple","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/Post.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Editor from '../editor/Editor';\r\n\r\nimport { handleImageChange } from './HandleImage';\r\nimport { supabase } from '../../services/supabase/supabase';\r\n\r\nconst Post = () => {\r\n  const navigate = useNavigate();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newBody, setNewBody] = useState('');\r\n  const [newPrice, setNewPrice] = useState('');\r\n  const [newLocation, setNewLocation] = useState('');\r\n  const [selectedImages, setSelectedImages] = useState<File[]>([]);\r\n\r\n  const handleAddPost = async () => {\r\n    if (!newTitle.trim() || !newBody.trim() || !newPrice.trim() || !newLocation.trim()) {\r\n      alert('제목, 본문, 가격, 지역을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    const imageUrls: string[] = [];\r\n\r\n    for (const selectedImage of selectedImages) {\r\n      const { data, error } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\r\n\r\n      if (error) {\r\n        console.error('Error uploading image to Supabase storage:', error);\r\n        alert('이미지 업로드 중 에러가 발생했습니다!');\r\n        return;\r\n      }\r\n\r\n      imageUrls.push(data.path);\r\n    }\r\n\r\n    const { error: insertError } = await supabase\r\n      .from('posts')\r\n      .insert([{ title: newTitle, body: newBody, image_urls: imageUrls, price: newPrice, location: newLocation }]);\r\n\r\n    if (insertError) {\r\n      console.error('Error adding post:', insertError);\r\n      alert('에러가 발생했습니다!');\r\n      return;\r\n    }\r\n\r\n    setNewTitle('');\r\n    setNewBody('');\r\n    setNewPrice('');\r\n    setNewLocation('');\r\n    setSelectedImages([]);\r\n\r\n    alert('글 작성이 완료되었습니다.');\r\n    navigate(`/`);\r\n  };\r\n\r\n  const handleImageChangeWrapper = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFiles = e.target.files;\r\n\r\n    if (selectedFiles) {\r\n      const updatedSelectedImages = handleImageChange(selectedFiles);\r\n      setSelectedImages(updatedSelectedImages);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n        <br />\r\n        <input type=\"text\" placeholder=\"Price\" value={newPrice} onChange={(e) => setNewPrice(e.target.value)} />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Location\"\r\n          value={newLocation}\r\n          onChange={(e) => setNewLocation(e.target.value)}\r\n        />\r\n        <br />\r\n        <Editor value={newBody} onChange={(content) => setNewBody(content)} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <input type=\"file\" accept=\"image/*\" multiple onChange={handleImageChangeWrapper} />\r\n        <button onClick={handleAddPost}>글 작성하기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}