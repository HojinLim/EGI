{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\chat\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../services/supabase/supabase'; // Supabase 클라이언트를 가져옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  postId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // 채팅 테이블에 대한 실시간 업데이트 구독\n    const chatSubscription = supabase.from('chat').on('INSERT', payload => {\n      // 실시간으로 받은 새 메시지를 처리합니다.\n      const newMessage = payload.new;\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }).subscribe();\n\n    // 컴포넌트가 언마운트될 때 구독을 정리합니다.\n    return () => {\n      chatSubscription.unsubscribe();\n    };\n  }, []);\n\n  // 새 메시지를 전송하는 함수\n  const sendMessage = async message => {\n    const {\n      data,\n      error\n    } = await supabase.from('chat').insert([{\n      message,\n      sender_id: '현재_사용자_아이디',\n      timestamp: new Date()\n    }]);\n    if (error) {\n      console.error('메시지 전송 오류:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        const newMessage = event.target.message.value;\n        sendMessage(newMessage);\n        event.target.message.value = '';\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","Chat","postId","_s","messages","setMessages","chatSubscription","from","on","payload","newMessage","new","prevMessages","subscribe","unsubscribe","sendMessage","message","data","error","insert","sender_id","timestamp","Date","console","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","event","preventDefault","target","value","type","name","placeholder","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/chat/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../services/supabase/supabase'; // Supabase 클라이언트를 가져옵니다.\r\n\r\nconst Chat = ({ postId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 채팅 테이블에 대한 실시간 업데이트 구독\r\n    const chatSubscription = supabase\r\n      .from('chat')\r\n      .on('INSERT', (payload) => {\r\n        // 실시간으로 받은 새 메시지를 처리합니다.\r\n        const newMessage = payload.new;\r\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n      })\r\n      .subscribe();\r\n\r\n    // 컴포넌트가 언마운트될 때 구독을 정리합니다.\r\n    return () => {\r\n      chatSubscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  // 새 메시지를 전송하는 함수\r\n  const sendMessage = async (message) => {\r\n    const { data, error } = await supabase\r\n      .from('chat')\r\n      .insert([{ message, sender_id: '현재_사용자_아이디', timestamp: new Date() }]);\r\n    if (error) {\r\n      console.error('메시지 전송 오류:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 채팅 메시지를 표시합니다 */}\r\n      <ul>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message.message}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* 새 메시지를 전송하는 입력 폼 */}\r\n      <form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          const newMessage = event.target.message.value;\r\n          sendMessage(newMessage);\r\n          event.target.message.value = '';\r\n        }}\r\n      >\r\n        <input type=\"text\" name=\"message\" placeholder=\"메시지를 입력하세요...\" />\r\n        <button type=\"submit\">전송</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kCAAkC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,gBAAgB,GAAGR,QAAQ,CAC9BS,IAAI,CAAC,MAAM,CAAC,CACZC,EAAE,CAAC,QAAQ,EAAGC,OAAO,IAAK;MACzB;MACA,MAAMC,UAAU,GAAGD,OAAO,CAACE,GAAG;MAC9BN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,UAAU,CAAC,CAAC;IAC9D,CAAC,CAAC,CACDG,SAAS,CAAC,CAAC;;IAEd;IACA,OAAO,MAAM;MACXP,gBAAgB,CAACQ,WAAW,CAAC,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,WAAW,GAAG,MAAOC,OAAO,IAAK;IACrC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMpB,QAAQ,CACnCS,IAAI,CAAC,MAAM,CAAC,CACZY,MAAM,CAAC,CAAC;MAAEH,OAAO;MAAEI,SAAS,EAAE,YAAY;MAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;IACxE,IAAIJ,KAAK,EAAE;MACTK,OAAO,CAACL,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC;EACF,CAAC;EAED,oBACElB,OAAA;IAAAwB,QAAA,gBAEExB,OAAA;MAAAwB,QAAA,EACGpB,QAAQ,CAACqB,GAAG,CAAC,CAACT,OAAO,EAAEU,KAAK,kBAC3B1B,OAAA;QAAAwB,QAAA,EAAiBR,OAAO,CAACA;MAAO,GAAvBU,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGL9B,OAAA;MACE+B,QAAQ,EAAGC,KAAK,IAAK;QACnBA,KAAK,CAACC,cAAc,CAAC,CAAC;QACtB,MAAMvB,UAAU,GAAGsB,KAAK,CAACE,MAAM,CAAClB,OAAO,CAACmB,KAAK;QAC7CpB,WAAW,CAACL,UAAU,CAAC;QACvBsB,KAAK,CAACE,MAAM,CAAClB,OAAO,CAACmB,KAAK,GAAG,EAAE;MACjC,CAAE;MAAAX,QAAA,gBAEFxB,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,WAAW,EAAC;MAAe;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChE9B,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArDIF,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}