{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\user\\\\login\\\\PasswordReset.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../../../services/supabase/supabase';\nimport * as S from './Styled.PasswordReset';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [showPasswordResetModal, setShowPasswordResetModal] = useState(false);\n\n  // 비밀번호 재설정 모달 열기\n  const openPasswordResetModal = () => {\n    setShowPasswordResetModal(true);\n  };\n  // 비밀번호 재설정 모달 닫기\n  const closePasswordResetModal = () => {\n    setShowPasswordResetModal(false);\n  };\n\n  // 비밀번호 재설정 이메일 전송 핸들러\n  const resetPasswordHandler = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: 'http://localhost:3000/resetPassword'\n      });\n      if (!error) {\n        alert('비밀번호 재설정 이메일이 전송되었습니다. 이메일을 확인해주세요.');\n        closePasswordResetModal();\n      } else {\n        console.error(error);\n        alert('비밀번호 재설정 이메일을 전송하는 도중 오류가 발생했습니다.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showPasswordResetModal ? /*#__PURE__*/_jsxDEV(S.Container, {\n      children: /*#__PURE__*/_jsxDEV(S.Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(S.EmailInput, {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.SendEmailBtn, {\n            onClick: resetPasswordHandler,\n            children: \"\\uC774\\uBA54\\uC77C \\uBCF4\\uB0B4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \"`\", /*#__PURE__*/_jsxDEV(S.CloseBtn, {\n          onClick: closePasswordResetModal,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(S.PasswordResetBtn, {\n      onClick: openPasswordResetModal,\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"O9/TeAQAVlABQ6DekogqSLrNzw0=\");\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","supabase","S","jsxDEV","_jsxDEV","PasswordReset","_s","email","setEmail","showPasswordResetModal","setShowPasswordResetModal","openPasswordResetModal","closePasswordResetModal","resetPasswordHandler","error","auth","resetPasswordForEmail","redirectTo","alert","console","children","Container","Wrapper","fileName","_jsxFileName","lineNumber","columnNumber","EmailInput","type","placeholder","value","onChange","e","target","SendEmailBtn","onClick","CloseBtn","PasswordResetBtn","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/user/login/PasswordReset.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { supabase } from '../../../services/supabase/supabase';\r\nimport * as S from './Styled.PasswordReset';\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [showPasswordResetModal, setShowPasswordResetModal] = useState(false);\r\n\r\n  // 비밀번호 재설정 모달 열기\r\n  const openPasswordResetModal = () => {\r\n    setShowPasswordResetModal(true);\r\n  };\r\n  // 비밀번호 재설정 모달 닫기\r\n  const closePasswordResetModal = () => {\r\n    setShowPasswordResetModal(false);\r\n  };\r\n\r\n  // 비밀번호 재설정 이메일 전송 핸들러\r\n  const resetPasswordHandler = async () => {\r\n    try {\r\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: 'http://localhost:3000/resetPassword'\r\n      });\r\n\r\n      if (!error) {\r\n        alert('비밀번호 재설정 이메일이 전송되었습니다. 이메일을 확인해주세요.');\r\n        closePasswordResetModal();\r\n      } else {\r\n        console.error(error);\r\n        alert('비밀번호 재설정 이메일을 전송하는 도중 오류가 발생했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showPasswordResetModal ? (\r\n        <S.Container>\r\n          <S.Wrapper>\r\n            <h2>비밀번호 재설정</h2>\r\n            <div>\r\n              <S.EmailInput type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n              <S.SendEmailBtn onClick={resetPasswordHandler}>이메일 보내기</S.SendEmailBtn>\r\n            </div>\r\n            `<S.CloseBtn onClick={closePasswordResetModal}>x</S.CloseBtn>\r\n          </S.Wrapper>\r\n        </S.Container>\r\n      ) : (\r\n        <S.PasswordResetBtn onClick={openPasswordResetModal}>비밀번호 찾기</S.PasswordResetBtn>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}