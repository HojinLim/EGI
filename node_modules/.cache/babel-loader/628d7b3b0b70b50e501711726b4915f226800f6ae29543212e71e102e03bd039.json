{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\EditPost.tsx\",\n  _s = $RefreshSig$();\n// EditPost.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport Editor from '../editor/Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst EditPost = () => {\n  _s();\n  const {\n    pid\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    async function fetchPost() {\n      const result = await supabase.from('posts').select('*').eq('pid', pid).single();\n      const {\n        data: post,\n        error\n      } = result;\n      if (error) {\n        console.error('Error fetching post:', error);\n      } else {\n        setPost(post);\n      }\n    }\n    fetchPost();\n  }, [pid]);\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  useEffect(() => {\n    if (post) {\n      setEditTitle(post.title);\n      setEditBody(post.body);\n    }\n  }, [post]);\n  const handleEditPost = async () => {\n    if (!editTitle.trim() || !editBody.trim()) {\n      alert('제목과 본문을 모두 입력해주세요.');\n      return;\n    }\n    if (post && editTitle && editBody) {\n      const {\n        error\n      } = await supabase.from('posts').update({\n        title: editTitle,\n        body: editBody\n      }).eq('pid', post.pid);\n      if (error) {\n        console.error('Error editing post:', error);\n        alert('에러가 발생했습니다!');\n      } else {\n        alert('글 수정이 완료되었습니다.');\n        navigate(`/`);\n      }\n    }\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: editTitle,\n      onChange: e => setEditTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: editBody,\n      onChange: content => setEditBody(content)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditPost,\n      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"OefDL3Xffrnw9JX4s4MRBGATxNw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","createClient","Editor","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_KEY","supabase","EditPost","_s","pid","navigate","post","setPost","fetchPost","result","from","select","eq","single","data","error","console","editTitle","setEditTitle","editBody","setEditBody","title","body","handleEditPost","trim","alert","update","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","content","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/EditPost.tsx"],"sourcesContent":["// EditPost.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport Editor from '../editor/Editor';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY as string;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\ninterface Post {\r\n  pid: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nconst EditPost = () => {\r\n  const { pid } = useParams();\r\n  const navigate = useNavigate();\r\n  const [post, setPost] = useState<Post | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchPost() {\r\n      const result = await supabase.from('posts').select('*').eq('pid', pid).single();\r\n      const { data: post, error } = result;\r\n\r\n      if (error) {\r\n        console.error('Error fetching post:', error);\r\n      } else {\r\n        setPost(post);\r\n      }\r\n    }\r\n\r\n    fetchPost();\r\n  }, [pid]);\r\n\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editBody, setEditBody] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setEditTitle(post.title);\r\n      setEditBody(post.body);\r\n    }\r\n  }, [post]);\r\n\r\n  const handleEditPost = async () => {\r\n    if (!editTitle.trim() || !editBody.trim()) {\r\n      alert('제목과 본문을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    if (post && editTitle && editBody) {\r\n      const { error } = await supabase.from('posts').update({ title: editTitle, body: editBody }).eq('pid', post.pid);\r\n\r\n      if (error) {\r\n        console.error('Error editing post:', error);\r\n        alert('에러가 발생했습니다!');\r\n      } else {\r\n        alert('글 수정이 완료되었습니다.');\r\n        navigate(`/`);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!post) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Title\" value={editTitle} onChange={(e) => setEditTitle(e.target.value)} />\r\n      <Editor value={editBody} onChange={(content) => setEditBody(content)} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <button onClick={handleEditPost}>수정하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}