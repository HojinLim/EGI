{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\comments\\\\comment\\\\Comments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as S from './Styled.Comments';\nimport { fetchComments } from '../../../services/supabase/comments';\nimport { useQuery } from '@tanstack/react-query';\nimport { useParams } from 'react-router';\nimport ReplyComments from '../reply/ReplyComments';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport * as SL from '../../common/Styled.Loading';\n\n// 댓글, 대댓글 차이 두기 > 색상, 위치.\n// 작성자 딱지 > 좋은듯? > 포스트의 uid 값 가져와서 comment uid와 비교\n\n// 대댓글 > 그냥 보이게 > 완료\n// 댓글 작성하기 버튼 삭제 > 폼 항상 보이기 > 완료\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  // login 완료되면 수정하기\n\n  const {\n    id: pid\n  } = useParams();\n\n  // 댓글 수정\n  const [isUpdating, setIsUpdating] = useState(false);\n  const defaultQueryOptions = {\n    queryKey: ['comments', pid],\n    queryFn: () => fetchComments(pid),\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false\n  };\n  const {\n    data: comments,\n    error,\n    isLoading\n  } = useQuery(defaultQueryOptions);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uB3C4\\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SL.LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(S.CommentsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(S.CommentsPanel, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uB313\\uAE00 \", comments === null || comments === void 0 ? void 0 : comments.length, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.CommentsHr, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.CommentList, {\n      children: comments === null || comments === void 0 ? void 0 : comments.map(comment => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: comment,\n          pid: pid,\n          isUpdating: isUpdating,\n          setIsUpdating: setIsUpdating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReplyComments, {\n          cid: comment.cid,\n          pid: pid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, comment.cid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      pid: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"/Yh+WH8SENiOqh9OIOls27v0Ik0=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","S","fetchComments","useQuery","useParams","ReplyComments","CommentForm","CommentItem","SL","jsxDEV","_jsxDEV","Comments","_s","id","pid","isUpdating","setIsUpdating","defaultQueryOptions","queryKey","queryFn","refetchOnWindowFocus","refetchOnReconnect","data","comments","error","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","LoadingOverlay","CommentsContainer","CommentsPanel","length","CommentsHr","CommentList","map","comment","Fragment","cid","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/comments/comment/Comments.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as S from './Styled.Comments';\r\nimport { fetchComments } from '../../../services/supabase/comments';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useParams } from 'react-router';\r\nimport ReplyComments from '../reply/ReplyComments';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nimport * as SL from '../../common/Styled.Loading';\r\n\r\n// 댓글, 대댓글 차이 두기 > 색상, 위치.\r\n// 작성자 딱지 > 좋은듯? > 포스트의 uid 값 가져와서 comment uid와 비교\r\n\r\n// 대댓글 > 그냥 보이게 > 완료\r\n// 댓글 작성하기 버튼 삭제 > 폼 항상 보이기 > 완료\r\n\r\nimport type { CommentType } from '../../../types/supabase';\r\nconst Comments = () => {\r\n  // login 완료되면 수정하기\r\n\r\n  const { id: pid } = useParams() as { id: string };\r\n\r\n  // 댓글 수정\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  const defaultQueryOptions = {\r\n    queryKey: ['comments', pid],\r\n    queryFn: () => fetchComments(pid),\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  };\r\n\r\n  const { data: comments, error, isLoading } = useQuery<CommentType[]>(defaultQueryOptions);\r\n\r\n  if (error) {\r\n    return <div>데이터를 가져오는 도중 오류가 발생했습니다.</div>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <SL.LoadingOverlay />;\r\n  }\r\n\r\n  return (\r\n    <S.CommentsContainer>\r\n      <S.CommentsPanel>\r\n        <div>\r\n          <div>댓글 {comments?.length}개</div>\r\n        </div>\r\n      </S.CommentsPanel>\r\n      <S.CommentsHr />\r\n      <S.CommentList>\r\n        {comments?.map((comment) => (\r\n          <React.Fragment key={comment.cid}>\r\n            <CommentItem comment={comment} pid={pid} isUpdating={isUpdating} setIsUpdating={setIsUpdating} />\r\n            <ReplyComments cid={comment.cid} pid={pid} />\r\n          </React.Fragment>\r\n        ))}\r\n      </S.CommentList>\r\n      <CommentForm pid={pid} />\r\n    </S.CommentsContainer>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}