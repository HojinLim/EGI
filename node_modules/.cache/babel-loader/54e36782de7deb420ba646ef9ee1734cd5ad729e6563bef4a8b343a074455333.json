{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\GetPost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\nimport { supabase } from '../../services/supabase/supabase';\nimport { categories } from '../category/Category';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GetPost = () => {\n  _s();\n  const [page, setPage] = useState(1);\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [postEnd, setPostEnd] = useState(false);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('posts').select('*');\n      if (error) {\n        console.error('Error fetching posts:', error);\n      } else {\n        const postsWithCompleteURLs = data.map(post => ({\n          ...post,\n          image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\n        }));\n        setPosts(postsWithCompleteURLs);\n        setFilteredPosts(postsWithCompleteURLs);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleScroll = () => {\n    const {\n      innerHeight\n    } = window;\n    const {\n      scrollHeight\n    } = document.body;\n    const {\n      scrollTop\n    } = document.documentElement;\n    if (Math.round(scrollTop + innerHeight) >= scrollHeight) {\n      const newPosts = getPostList(page + 1);\n      if (newPosts.length === 0) {\n        setPostEnd(true);\n      } else {\n        setPosts(prevPosts => [...prevPosts, ...newPosts]);\n        setPage(prevPage => prevPage + 1);\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const handleCategoryClick = category => {\n    if (category === '전체') {\n      setFilteredPosts(posts);\n    } else {\n      const filteredPosts = posts.filter(post => post.category === category);\n      setFilteredPosts(filteredPosts);\n    }\n  };\n  const categoryButtons = categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n    value: category.value,\n    onClick: () => handleCategoryClick(category.value),\n    children: category.label\n  }, category.value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: categoryButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [filteredPosts.map(post => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/post/${post.pid}`,\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        children: /*#__PURE__*/_jsxDEV(PostItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.image_urls.length > 0 && /*#__PURE__*/_jsxDEV(S.Image, {\n              src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `,\n              alt: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, post.pid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)), postEnd && /*#__PURE__*/_jsxDEV(EndMessage, {\n        children: \"\\uB354 \\uC774\\uC0C1\\uC758 \\uAC8C\\uC2DC\\uBB3C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GetPost, \"UEUamDdt6nhPSFMlocX8D9VY4fA=\");\n_c = GetPost;\nconst Container = styled.div`\n  /* 스타일 정의 */\n`;\n_c2 = Container;\nconst PostItem = styled.div`\n  /* 스타일 정의 */\n`;\n_c3 = PostItem;\nconst EndMessage = styled.div`\n  /* 스타일 정의 */\n`;\n_c4 = EndMessage;\nexport default GetPost;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GetPost\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"PostItem\");\n$RefreshReg$(_c4, \"EndMessage\");","map":{"version":3,"names":["React","useEffect","useState","NavLink","styled","supabase","categories","jsxDEV","_jsxDEV","Fragment","_Fragment","GetPost","_s","page","setPage","posts","setPosts","filteredPosts","setFilteredPosts","postEnd","setPostEnd","fetchPosts","data","error","from","select","console","postsWithCompleteURLs","map","post","image_urls","replace","split","handleScroll","innerHeight","window","scrollHeight","document","body","scrollTop","documentElement","Math","round","newPosts","getPostList","length","prevPosts","prevPage","addEventListener","removeEventListener","handleCategoryClick","category","filter","categoryButtons","value","onClick","children","label","fileName","_jsxFileName","lineNumber","columnNumber","Container","to","pid","style","textDecoration","color","PostItem","title","S","Image","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","EndMessage","_c","div","_c2","_c3","_c4","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/GetPost.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { styled } from 'styled-components';\r\nimport { Post } from '../../types/supabase';\r\nimport { supabase } from '../../services/supabase/supabase';\r\nimport { categories } from '../category/Category';\r\n\r\nexport const GetPost = () => {\r\n  const [page, setPage] = useState<number>(1);\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\r\n  const [postEnd, setPostEnd] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const { data, error } = await supabase.from('posts').select('*');\r\n\r\n      if (error) {\r\n        console.error('Error fetching posts:', error);\r\n      } else {\r\n        const postsWithCompleteURLs = data.map((post) => ({\r\n          ...post,\r\n          image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\r\n        }));\r\n\r\n        setPosts(postsWithCompleteURLs);\r\n        setFilteredPosts(postsWithCompleteURLs);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    const { innerHeight } = window;\r\n    const { scrollHeight } = document.body;\r\n    const { scrollTop } = document.documentElement;\r\n    if (Math.round(scrollTop + innerHeight) >= scrollHeight) {\r\n      const newPosts = getPostList(page + 1);\r\n      if (newPosts.length === 0) {\r\n        setPostEnd(true);\r\n      } else {\r\n        setPosts((prevPosts) => [...prevPosts, ...newPosts]);\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    if (category === '전체') {\r\n      setFilteredPosts(posts);\r\n    } else {\r\n      const filteredPosts = posts.filter((post) => post.category === category);\r\n      setFilteredPosts(filteredPosts);\r\n    }\r\n  };\r\n\r\n  const categoryButtons = categories.map((category) => (\r\n    <button key={category.value} value={category.value} onClick={() => handleCategoryClick(category.value)}>\r\n      {category.label}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div>{categoryButtons}</div>\r\n      <Container>\r\n        {filteredPosts.map((post) => (\r\n          <NavLink to={`/post/${post.pid}`} key={post.pid} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n            <PostItem>\r\n              <h2>{post.title}</h2>\r\n              <div>\r\n                {post.image_urls.length > 0 && (\r\n                  <S.Image\r\n                    src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `}\r\n                    alt={post.title}\r\n                  />\r\n                )}\r\n              </div>\r\n            </PostItem>\r\n          </NavLink>\r\n        ))}\r\n        {postEnd && <EndMessage>더 이상의 게시물이 없습니다.</EndMessage>}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  /* 스타일 정의 */\r\n`;\r\n\r\nconst PostItem = styled.div`\r\n  /* 스타일 정의 */\r\n`;\r\n\r\nconst EndMessage = styled.div`\r\n  /* 스타일 정의 */\r\n`;\r\n\r\nexport default GetPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}