{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\GetPost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { supabase } from '../../services/supabase/supabase';\nimport * as S from './Styled.Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GetPost = () => {\n  _s();\n  const [page, setPage] = useState(1);\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [postEnd, setPostEnd] = useState(false);\n  const fetchPosts = async pageNumber => {\n    const pageSize = 10;\n    const {\n      data,\n      error\n    } = await supabase.from('posts').select('*').range((pageNumber - 1) * pageSize, pageNumber * pageSize - 1); // 페이지네이션 처리\n\n    if (error) {\n      console.error('Error fetching posts:', error);\n      return [];\n    } else {\n      const postsWithCompleteURLs = data.map(post => ({\n        ...post,\n        image_urls: post.image_urls || [] // 이미지 URL이 없을 경우 빈 배열로 설정\n      }));\n\n      return postsWithCompleteURLs;\n    }\n  };\n  console.log('postsWithCompleteURLs', filteredPosts);\n  const fetchNextPage = () => {\n    const nextPage = page + 1;\n    fetchPosts(nextPage).then(newPosts => {\n      if (newPosts.length === 0) {\n        setPostEnd(true);\n      } else {\n        setFilteredPosts(prevFilteredPosts => [...prevFilteredPosts, ...newPosts]);\n        setPage(nextPage);\n        setPostEnd(false);\n      }\n    });\n  };\n  useEffect(() => {\n    fetchPosts(1).then(initialPosts => {\n      setPosts(initialPosts);\n      setFilteredPosts(initialPosts);\n    });\n    const handleScroll = () => {\n      const {\n        innerHeight\n      } = window;\n      const {\n        scrollHeight\n      } = document.body;\n      const {\n        scrollTop\n      } = document.documentElement;\n      if (Math.round(scrollTop + innerHeight) >= scrollHeight) {\n        fetchNextPage();\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const handleCategoryClick = category => {\n    if (category === '전체') {\n      setFilteredPosts(posts);\n    } else {\n      const filteredPosts = posts.filter(post => post.category === category);\n      setFilteredPosts(filteredPosts);\n    }\n  };\n  const categoryButtons = filterdcategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n    value: category.value,\n    onClick: () => handleCategoryClick(category.value),\n    children: category.label\n  }, category.value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: categoryButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.PostContainer, {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/post/${post.pid}`,\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        children: /*#__PURE__*/_jsxDEV(S.PostItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.image_urls.length > 0 && /*#__PURE__*/_jsxDEV(S.Image, {\n              src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `,\n              alt: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, post.pid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), postEnd && /*#__PURE__*/_jsxDEV(S.EndMassage, {\n      children: \"\\uB354 \\uC774\\uC0C1\\uC758 \\uAC8C\\uC2DC\\uBB3C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n_s(GetPost, \"54cyLuXDPIVlK/hEepNOjyuCwS0=\");\n_c = GetPost;\nexport default GetPost;\nvar _c;\n$RefreshReg$(_c, \"GetPost\");","map":{"version":3,"names":["React","useEffect","useState","NavLink","supabase","S","jsxDEV","_jsxDEV","Fragment","_Fragment","GetPost","_s","page","setPage","posts","setPosts","filteredPosts","setFilteredPosts","postEnd","setPostEnd","fetchPosts","pageNumber","pageSize","data","error","from","select","range","console","postsWithCompleteURLs","map","post","image_urls","log","fetchNextPage","nextPage","then","newPosts","length","prevFilteredPosts","initialPosts","handleScroll","innerHeight","window","scrollHeight","document","body","scrollTop","documentElement","Math","round","addEventListener","removeEventListener","handleCategoryClick","category","filter","categoryButtons","filterdcategories","value","onClick","children","label","fileName","_jsxFileName","lineNumber","columnNumber","PostContainer","to","pid","style","textDecoration","color","PostItem","title","Image","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","EndMassage","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/GetPost.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { Post } from '../../types/supabase';\r\nimport { supabase } from '../../services/supabase/supabase';\r\nimport { categories } from '../category/Category';\r\n\r\nimport * as S from './Styled.Posts';\r\n\r\nexport const GetPost = () => {\r\n  const [page, setPage] = useState<number>(1);\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\r\n  const [postEnd, setPostEnd] = useState<boolean>(false);\r\n\r\n  const fetchPosts = async (pageNumber: number) => {\r\n    const pageSize = 10;\r\n    const { data, error } = await supabase\r\n      .from('posts')\r\n      .select('*')\r\n      .range((pageNumber - 1) * pageSize, pageNumber * pageSize - 1); // 페이지네이션 처리\r\n\r\n    if (error) {\r\n      console.error('Error fetching posts:', error);\r\n      return [];\r\n    } else {\r\n      const postsWithCompleteURLs = data.map((post: Post) => ({\r\n        ...post,\r\n        image_urls: post.image_urls || [] // 이미지 URL이 없을 경우 빈 배열로 설정\r\n      }));\r\n\r\n      return postsWithCompleteURLs;\r\n    }\r\n  };\r\n\r\n  console.log('postsWithCompleteURLs', filteredPosts);\r\n\r\n  const fetchNextPage = () => {\r\n    const nextPage = page + 1;\r\n    fetchPosts(nextPage).then((newPosts) => {\r\n      if (newPosts.length === 0) {\r\n        setPostEnd(true);\r\n      } else {\r\n        setFilteredPosts((prevFilteredPosts) => [...prevFilteredPosts, ...newPosts]);\r\n        setPage(nextPage);\r\n        setPostEnd(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts(1).then((initialPosts) => {\r\n      setPosts(initialPosts);\r\n      setFilteredPosts(initialPosts);\r\n    });\r\n\r\n    const handleScroll = () => {\r\n      const { innerHeight } = window;\r\n      const { scrollHeight } = document.body;\r\n      const { scrollTop } = document.documentElement;\r\n\r\n      if (Math.round(scrollTop + innerHeight) >= scrollHeight) {\r\n        fetchNextPage();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    if (category === '전체') {\r\n      setFilteredPosts(posts);\r\n    } else {\r\n      const filteredPosts = posts.filter((post) => post.category === category);\r\n      setFilteredPosts(filteredPosts);\r\n    }\r\n  };\r\n\r\n  const categoryButtons = filterdcategories.map((category) => (\r\n    <button key={category.value} value={category.value} onClick={() => handleCategoryClick(category.value)}>\r\n      {category.label}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div>{categoryButtons}</div>\r\n      <S.PostContainer>\r\n        {filteredPosts.map((post) => (\r\n          <NavLink to={`/post/${post.pid}`} key={post.pid} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n            <S.PostItem>\r\n              <h2>{post.title}</h2>\r\n              <div>\r\n                {post.image_urls.length > 0 && (\r\n                  <S.Image\r\n                    src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `}\r\n                    alt={post.title}\r\n                  />\r\n                )}\r\n              </div>\r\n            </S.PostItem>\r\n          </NavLink>\r\n        ))}\r\n      </S.PostContainer>\r\n      {postEnd && <S.EndMassage>더 이상의 게시물이 없습니다.</S.EndMassage>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetPost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,kBAAkB;AAG1C,SAASC,QAAQ,QAAQ,kCAAkC;AAG3D,OAAO,KAAKC,CAAC,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAU,KAAK,CAAC;EAEtD,MAAMkB,UAAU,GAAG,MAAOC,UAAkB,IAAK;IAC/C,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMpB,QAAQ,CACnCqB,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,CAACN,UAAU,GAAG,CAAC,IAAIC,QAAQ,EAAED,UAAU,GAAGC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;;IAElE,IAAIE,KAAK,EAAE;MACTI,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO,EAAE;IACX,CAAC,MAAM;MACL,MAAMK,qBAAqB,GAAGN,IAAI,CAACO,GAAG,CAAEC,IAAU,KAAM;QACtD,GAAGA,IAAI;QACPC,UAAU,EAAED,IAAI,CAACC,UAAU,IAAI,EAAE,CAAC;MACpC,CAAC,CAAC,CAAC;;MAEH,OAAOH,qBAAqB;IAC9B;EACF,CAAC;EAEDD,OAAO,CAACK,GAAG,CAAC,uBAAuB,EAAEjB,aAAa,CAAC;EAEnD,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,QAAQ,GAAGvB,IAAI,GAAG,CAAC;IACzBQ,UAAU,CAACe,QAAQ,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACtC,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;QACzBnB,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACLF,gBAAgB,CAAEsB,iBAAiB,IAAK,CAAC,GAAGA,iBAAiB,EAAE,GAAGF,QAAQ,CAAC,CAAC;QAC5ExB,OAAO,CAACsB,QAAQ,CAAC;QACjBhB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;EACJ,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdmB,UAAU,CAAC,CAAC,CAAC,CAACgB,IAAI,CAAEI,YAAY,IAAK;MACnCzB,QAAQ,CAACyB,YAAY,CAAC;MACtBvB,gBAAgB,CAACuB,YAAY,CAAC;IAChC,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAM;QAAEC;MAAY,CAAC,GAAGC,MAAM;MAC9B,MAAM;QAAEC;MAAa,CAAC,GAAGC,QAAQ,CAACC,IAAI;MACtC,MAAM;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,eAAe;MAE9C,IAAIC,IAAI,CAACC,KAAK,CAACH,SAAS,GAAGL,WAAW,CAAC,IAAIE,YAAY,EAAE;QACvDV,aAAa,CAAC,CAAC;MACjB;IACF,CAAC;IAEDS,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAEV,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXE,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAEX,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,mBAAmB,GAAIC,QAAgB,IAAK;IAChD,IAAIA,QAAQ,KAAK,IAAI,EAAE;MACrBrC,gBAAgB,CAACH,KAAK,CAAC;IACzB,CAAC,MAAM;MACL,MAAME,aAAa,GAAGF,KAAK,CAACyC,MAAM,CAAExB,IAAI,IAAKA,IAAI,CAACuB,QAAQ,KAAKA,QAAQ,CAAC;MACxErC,gBAAgB,CAACD,aAAa,CAAC;IACjC;EACF,CAAC;EAED,MAAMwC,eAAe,GAAGC,iBAAiB,CAAC3B,GAAG,CAAEwB,QAAQ,iBACrD/C,OAAA;IAA6BmD,KAAK,EAAEJ,QAAQ,CAACI,KAAM;IAACC,OAAO,EAAEA,CAAA,KAAMN,mBAAmB,CAACC,QAAQ,CAACI,KAAK,CAAE;IAAAE,QAAA,EACpGN,QAAQ,CAACO;EAAK,GADJP,QAAQ,CAACI,KAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CACT,CAAC;EAEF,oBACE1D,OAAA,CAAAE,SAAA;IAAAmD,QAAA,gBACErD,OAAA;MAAAqD,QAAA,EAAMJ;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5B1D,OAAA,CAACF,CAAC,CAAC6D,aAAa;MAAAN,QAAA,EACb5C,aAAa,CAACc,GAAG,CAAEC,IAAI,iBACtBxB,OAAA,CAACJ,OAAO;QAACgE,EAAE,EAAG,SAAQpC,IAAI,CAACqC,GAAI,EAAE;QAAgBC,KAAK,EAAE;UAAEC,cAAc,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAX,QAAA,eACnGrD,OAAA,CAACF,CAAC,CAACmE,QAAQ;UAAAZ,QAAA,gBACTrD,OAAA;YAAAqD,QAAA,EAAK7B,IAAI,CAAC0C;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB1D,OAAA;YAAAqD,QAAA,EACG7B,IAAI,CAACC,UAAU,CAACM,MAAM,GAAG,CAAC,iBACzB/B,OAAA,CAACF,CAAC,CAACqE,KAAK;cACNC,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,8BAA+B,GAAE/C,IAAI,CAACC,UAAU,CAAC,CAAC,CAAE,GAAG;cAC3E+C,GAAG,EAAEhD,IAAI,CAAC0C;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC,GAXwBlC,IAAI,CAACqC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYtC,CACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC,EACjB/C,OAAO,iBAAIX,OAAA,CAACF,CAAC,CAAC2E,UAAU;MAAApB,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA,eACzD,CAAC;AAEP,CAAC;AAACtD,EAAA,CAtGWD,OAAO;AAAAuE,EAAA,GAAPvE,OAAO;AAwGpB,eAAeA,OAAO;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}