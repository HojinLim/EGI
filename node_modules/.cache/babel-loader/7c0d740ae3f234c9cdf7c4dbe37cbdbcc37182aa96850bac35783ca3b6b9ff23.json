{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\GetPost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as S from './Styled.Posts';\nimport { supabase } from '../../services/supabase/supabase';\nimport { filterdcategories } from '../category/Category';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GetPost = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const loadMoreRef = useRef(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const {\n        data,\n        error\n      } = await supabase.from('posts').select('*').range((page - 1) * 10, page * 10 - 1); // Use range() instead of offset() and limit()\n\n      if (error) {\n        console.error('Error fetching posts:', error);\n      } else {\n        // Check for duplicate posts by comparing their pid\n        const newPosts = data.filter(newPost => !posts.some(oldPost => oldPost.pid === newPost.pid));\n        setPosts(prevPosts => [...prevPosts, ...newPosts]);\n        setFilteredPosts(prevFilteredPosts => [...prevFilteredPosts, ...newPosts]);\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n    console.log('나 몇번 실행되게?');\n  }, [page, posts]);\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 1.0\n    };\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && !loading) {\n        setPage(prevPage => prevPage + 1);\n      }\n    }, options);\n    if (loadMoreRef.current) {\n      observer.observe(loadMoreRef.current);\n    }\n    return () => {\n      if (loadMoreRef.current) {\n        observer.unobserve(loadMoreRef.current);\n      }\n    };\n  }, [loading]);\n  const handleCategoryClick = category => {\n    if (category === '전체') {\n      setFilteredPosts(posts);\n    } else {\n      const filteredPosts = posts.filter(post => post.category === category);\n      setFilteredPosts(filteredPosts);\n    }\n  };\n  const categoryButtons = filterdcategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n    value: category.value,\n    onClick: () => handleCategoryClick(category.value),\n    children: category.label\n  }, category.value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: categoryButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.PostContainer, {\n      children: [filteredPosts.map(post => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/post/${post.pid}`,\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        children: /*#__PURE__*/_jsxDEV(S.PostItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.image_urls.length > 0 && /*#__PURE__*/_jsxDEV(S.Image, {\n              src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls}`,\n              alt: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, post.pid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: loadMoreRef,\n        style: {\n          height: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GetPost, \"yDZJZMW9F5De23elWpdCVwc9V0U=\");\n_c = GetPost;\nexport default GetPost;\nvar _c;\n$RefreshReg$(_c, \"GetPost\");","map":{"version":3,"names":["React","useEffect","useState","useRef","NavLink","S","supabase","filterdcategories","jsxDEV","_jsxDEV","Fragment","_Fragment","GetPost","_s","posts","setPosts","filteredPosts","setFilteredPosts","loading","setLoading","page","setPage","loadMoreRef","fetchPosts","data","error","from","select","range","console","newPosts","filter","newPost","some","oldPost","pid","prevPosts","prevFilteredPosts","log","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","isIntersecting","prevPage","current","observe","unobserve","handleCategoryClick","category","post","categoryButtons","map","value","onClick","children","label","fileName","_jsxFileName","lineNumber","columnNumber","PostContainer","to","style","textDecoration","color","PostItem","title","image_urls","length","Image","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","ref","height","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/GetPost.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport * as S from './Styled.Posts';\r\nimport { Post } from '../../types/supabase';\r\nimport { supabase } from '../../services/supabase/supabase';\r\nimport { filterdcategories } from '../category/Category';\r\n\r\nexport const GetPost = () => {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const loadMoreRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n\r\n      const { data, error } = await supabase\r\n        .from('posts')\r\n        .select('*')\r\n        .range((page - 1) * 10, page * 10 - 1); // Use range() instead of offset() and limit()\r\n\r\n      if (error) {\r\n        console.error('Error fetching posts:', error);\r\n      } else {\r\n        // Check for duplicate posts by comparing their pid\r\n        const newPosts = data.filter((newPost) => !posts.some((oldPost) => oldPost.pid === newPost.pid));\r\n\r\n        setPosts((prevPosts) => [...prevPosts, ...newPosts]);\r\n        setFilteredPosts((prevFilteredPosts) => [...prevFilteredPosts, ...newPosts]);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n    console.log('나 몇번 실행되게?');\r\n  }, [page, posts]);\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 1.0\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting && !loading) {\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    }, options);\r\n\r\n    if (loadMoreRef.current) {\r\n      observer.observe(loadMoreRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (loadMoreRef.current) {\r\n        observer.unobserve(loadMoreRef.current);\r\n      }\r\n    };\r\n  }, [loading]);\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    if (category === '전체') {\r\n      setFilteredPosts(posts);\r\n    } else {\r\n      const filteredPosts = posts.filter((post) => post.category === category);\r\n      setFilteredPosts(filteredPosts);\r\n    }\r\n  };\r\n\r\n  const categoryButtons = filterdcategories.map((category) => (\r\n    <button key={category.value} value={category.value} onClick={() => handleCategoryClick(category.value)}>\r\n      {category.label}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div>{categoryButtons}</div>\r\n      <S.PostContainer>\r\n        {filteredPosts.map((post) => (\r\n          <NavLink to={`/post/${post.pid}`} key={post.pid} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n            <S.PostItem>\r\n              <h2>{post.title}</h2>\r\n              <div>\r\n                {post.image_urls.length > 0 && (\r\n                  <S.Image src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls}`} alt={post.title} />\r\n                )}\r\n              </div>\r\n            </S.PostItem>\r\n          </NavLink>\r\n        ))}\r\n        <div ref={loadMoreRef} style={{ height: '10px' }} />\r\n      </S.PostContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}