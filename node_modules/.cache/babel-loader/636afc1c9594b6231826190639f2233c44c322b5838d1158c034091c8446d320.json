{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\EditPost.tsx\",\n  _s = $RefreshSig$();\n// EditPost.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport Editor from '../editor/Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst EditPost = props => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    async function fetchPost() {\n      const {\n        data: posts,\n        error\n      } = await supabase.from('posts').select('*').eq('id', id).single();\n      if (error) {\n        console.error('Error fetching post:', error);\n      } else {\n        setPost(posts);\n      }\n    }\n    fetchPost();\n  }, [id]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newBody, setNewBody] = useState('');\n  useEffect(() => {\n    if (post) {\n      setNewTitle(post.title);\n      setNewBody(post.body);\n    }\n  }, [post]);\n  const handleEditPost = async () => {\n    if (!newTitle.trim() || !newBody.trim()) {\n      alert('제목과 본문을 모두 입력해주세요.');\n      return;\n    }\n    if (post && newTitle && newBody) {\n      const {\n        error\n      } = await supabase.from('posts').update({\n        title: newTitle,\n        body: newBody\n      }).eq('id', post.id);\n      if (error) {\n        console.error('Error editing post:', error);\n        alert('에러가 발생했습니다!');\n      } else {\n        alert('글 수정이 완료되었습니다.');\n        navigate(`/`);\n      }\n    }\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: newTitle,\n      onChange: e => setNewTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: newBody,\n      onChange: content => setNewBody(content)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditPost,\n      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"0CLUWzYJmXppkjTmOoNVCepVyhY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","createClient","Editor","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_KEY","supabase","EditPost","props","_s","id","navigate","post","setPost","fetchPost","data","posts","error","from","select","eq","single","console","newTitle","setNewTitle","newBody","setNewBody","title","body","handleEditPost","trim","alert","update","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","content","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/EditPost.tsx"],"sourcesContent":["// EditPost.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport Editor from '../editor/Editor';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY as string;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\ninterface EditPostProps {\r\n  postId: string; // postId를 props로 받아옴\r\n}\r\n\r\nconst EditPost: React.FC<EditPostProps> = (props) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [post, setPost] = useState<Post | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchPost() {\r\n      const { data: posts, error } = await supabase.from('posts').select('*').eq('id', id).single();\r\n      if (error) {\r\n        console.error('Error fetching post:', error);\r\n      } else {\r\n        setPost(posts);\r\n      }\r\n    }\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newBody, setNewBody] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setNewTitle(post.title);\r\n      setNewBody(post.body);\r\n    }\r\n  }, [post]);\r\n\r\n  const handleEditPost = async () => {\r\n    if (!newTitle.trim() || !newBody.trim()) {\r\n      alert('제목과 본문을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    if (post && newTitle && newBody) {\r\n      const { error } = await supabase.from('posts').update({ title: newTitle, body: newBody }).eq('id', post.id);\r\n\r\n      if (error) {\r\n        console.error('Error editing post:', error);\r\n        alert('에러가 발생했습니다!');\r\n      } else {\r\n        alert('글 수정이 완료되었습니다.');\r\n        navigate(`/`);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!post) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n      <Editor value={newBody} onChange={(content) => setNewBody(content)} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <button onClick={handleEditPost}>수정하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}