{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\Post.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst Post = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newbody, setNewBody] = useState('');\n  useEffect(() => {\n    async function fetchPosts() {\n      const {\n        data,\n        error\n      } = await supabase.from('posts').select('*');\n      if (error) {\n        console.error('Error fetching posts:', error);\n      } else {\n        setPosts(data);\n      }\n    }\n    fetchPosts();\n  }, []);\n  const handleAddPost = async () => {\n    if (newTitle && newbody) {\n      const {\n        data,\n        error\n      } = await supabase.from('posts').insert([{\n        title: newTitle,\n        body: newbody\n      }]);\n      if (error) {\n        console.error('Error adding post:', error);\n      } else {\n        if (data) {\n          setPosts([...posts, ...data]);\n          setNewTitle('');\n          setNewBody('');\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"body\",\n        value: newbody,\n        onChange: e => setNewBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"VSEriny9J3qTD/krVkqGpovGopk=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","createClient","useEffect","useState","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_KEY","supabase","Post","_s","posts","setPosts","newTitle","setNewTitle","newbody","setNewBody","fetchPosts","data","error","from","select","console","handleAddPost","insert","title","body","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","post","content","id","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/Post.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY as string;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nconst Post = () => {\r\n  const [posts, setPosts] = useState<any[]>([]);\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newbody, setNewBody] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      const { data, error } = await supabase.from('posts').select('*');\r\n\r\n      if (error) {\r\n        console.error('Error fetching posts:', error);\r\n      } else {\r\n        setPosts(data);\r\n      }\r\n    }\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleAddPost = async () => {\r\n    if (newTitle && newbody) {\r\n      const { data, error } = await supabase.from('posts').insert([{ title: newTitle, body: newbody }]);\r\n\r\n      if (error) {\r\n        console.error('Error adding post:', error);\r\n      } else {\r\n        if (data) {\r\n          setPosts([...posts, ...data]);\r\n          setNewTitle('');\r\n          setNewBody('');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"body\" value={newbody} onChange={(e) => setNewBody(e.target.value)} />\r\n        <button onClick={handleAddPost}>Add Post</button>\r\n      </div>\r\n      <div>\r\n        {posts.map((post) => (\r\n          <div key={post.id}>\r\n            <h2>{post.title}</h2>\r\n            <p>{post.content}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}