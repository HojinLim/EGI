{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\editor\\\\Editor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useRef, useEffect } from 'react';\nimport 'react-quill/dist/quill.snow.css';\nimport ReactQuill, { Quill } from 'react-quill';\nimport ImageResize from 'quill-image-resize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nQuill.register('modules/ImageResize', ImageResize);\nconst Editor = ({\n  value,\n  onChange\n}) => {\n  _s();\n  const quillRef = useRef(null);\n  const [content, setContent] = useState(value);\n  const modules = useMemo(() => {\n    const Parchment = Quill.import('parchment');\n    return {\n      toolbar: {\n        container: [[{\n          header: [1, 2, 3, false]\n        }], ['bold', 'italic', 'underline', 'strike'], ['blockquote'], [{\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], [{\n          color: []\n        }, {\n          background: []\n        }], [{\n          align: []\n        }, 'link']\n        // ['image', 'video'] 사이트의 취지와 안맞아서 주석처리\n        ]\n      },\n\n      ImageResize: {\n        parchment: Parchment\n      }\n    };\n  }, []);\n\n  // 에디터 내용이 바뀔 때마다 부모 컴포넌트로 업데이트 전달\n  useEffect(() => {\n    onChange(content);\n  }, [content, onChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      style: {\n        width: '450px',\n        height: '300px'\n      },\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      theme: \"snow\",\n      ref: quillRef,\n      value: content,\n      onChange: setContent,\n      modules: modules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"vl/v+1jOiGQ3XU/Og1ylLPR8cQ0=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useMemo","useRef","useEffect","ReactQuill","Quill","ImageResize","jsxDEV","_jsxDEV","register","Editor","value","onChange","_s","quillRef","content","setContent","modules","Parchment","import","toolbar","container","header","list","color","background","align","parchment","children","style","width","height","placeholder","theme","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/editor/Editor.tsx"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport ImageResize from 'quill-image-resize';\r\n\r\nQuill.register('modules/ImageResize', ImageResize);\r\n\r\ninterface EditorProps {\r\n  value: string;\r\n  onChange: (content: string) => void;\r\n}\r\n\r\nconst Editor: React.FC<EditorProps> = ({ value, onChange }) => {\r\n  const quillRef = useRef<ReactQuill | null>(null);\r\n  const [content, setContent] = useState(value);\r\n\r\n  const modules = useMemo(() => {\r\n    const Parchment = Quill.import('parchment');\r\n    return {\r\n      toolbar: {\r\n        container: [\r\n          [{ header: [1, 2, 3, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          ['blockquote'],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          [{ align: [] }, 'link']\r\n          // ['image', 'video'] 사이트의 취지와 안맞아서 주석처리\r\n        ]\r\n      },\r\n      ImageResize: {\r\n        parchment: Parchment\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 에디터 내용이 바뀔 때마다 부모 컴포넌트로 업데이트 전달\r\n  useEffect(() => {\r\n    onChange(content);\r\n  }, [content, onChange]);\r\n\r\n  return (\r\n    <div>\r\n      <ReactQuill\r\n        style={{ width: '450px', height: '300px' }}\r\n        placeholder=\"내용을 입력해주세요\"\r\n        theme=\"snow\"\r\n        ref={quillRef}\r\n        value={content}\r\n        onChange={setContent}\r\n        modules={modules}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnE,OAAO,iCAAiC;AACxC,OAAOC,UAAU,IAAIC,KAAK,QAAQ,aAAa;AAC/C,OAAOC,WAAW,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7CH,KAAK,CAACI,QAAQ,CAAC,qBAAqB,EAAEH,WAAW,CAAC;AAOlD,MAAMI,MAA6B,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,QAAQ,GAAGZ,MAAM,CAAoB,IAAI,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAACW,KAAK,CAAC;EAE7C,MAAMM,OAAO,GAAGhB,OAAO,CAAC,MAAM;IAC5B,MAAMiB,SAAS,GAAGb,KAAK,CAACc,MAAM,CAAC,WAAW,CAAC;IAC3C,OAAO;MACLC,OAAO,EAAE;QACPC,SAAS,EAAE,CACT,CAAC;UAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;QAAE,CAAC,CAAC,EAC9B,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC,EACzC,CAAC,YAAY,CAAC,EACd,CAAC;UAAEC,IAAI,EAAE;QAAU,CAAC,EAAE;UAAEA,IAAI,EAAE;QAAS,CAAC,CAAC,EACzC,CAAC;UAAEC,KAAK,EAAE;QAAG,CAAC,EAAE;UAAEC,UAAU,EAAE;QAAG,CAAC,CAAC,EACnC,CAAC;UAAEC,KAAK,EAAE;QAAG,CAAC,EAAE,MAAM;QACtB;QAAA;MAEJ,CAAC;;MACDpB,WAAW,EAAE;QACXqB,SAAS,EAAET;MACb;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAf,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACG,OAAO,CAAC;EACnB,CAAC,EAAE,CAACA,OAAO,EAAEH,QAAQ,CAAC,CAAC;EAEvB,oBACEJ,OAAA;IAAAoB,QAAA,eACEpB,OAAA,CAACJ,UAAU;MACTyB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAC3CC,WAAW,EAAC,yDAAY;MACxBC,KAAK,EAAC,MAAM;MACZC,GAAG,EAAEpB,QAAS;MACdH,KAAK,EAAEI,OAAQ;MACfH,QAAQ,EAAEI,UAAW;MACrBC,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CIH,MAA6B;AAAA6B,EAAA,GAA7B7B,MAA6B;AA4CnC,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}