{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { addComment, deleteComment, updateComment } from '../services/supabase/comments';\nimport { addReplyComment, deleteReplyComment, updateReplyComment } from '../services/supabase/replyComments';\nconst useCommentMutation = () => {\n  _s();\n  const queryClient = useQueryClient();\n  const addCommentMutation = useMutation(addComment, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['comments']);\n    },\n    onError: error => {\n      alert(`댓글 작성 중 오류가 발생했습니다.: ${error}`);\n    }\n  });\n  const updateCommentMutation = useMutation(updateComment, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['comments']);\n    },\n    onError: error => {\n      alert(`댓글 수정 중 오류가 발생했습니다.: ${error}`);\n    }\n  });\n  const deleteCommentMutation = useMutation(deleteComment, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['comments']);\n    },\n    onError: error => {\n      alert(`댓글 삭제 중 오류가 발생했습니다.: ${error}`);\n    }\n  });\n\n  // 대댓글\n  const addReplyCommentMutation = useMutation(addReplyComment, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['replyComments']);\n    },\n    onError: error => {\n      alert(`댓글 작성 중 오류가 발생했습니다.: ${error}`);\n    }\n  });\n  const updateReplyCommentMutation = useMutation(updateReplyComment, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['replyComments']);\n    },\n    onError: error => {\n      alert(`댓글 수정 중 오류가 발생했습니다.: ${error}`);\n    }\n  });\n  const deleteReplyCommentMutation = useMutation(deleteReplyComment, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['replyComments']);\n    },\n    onError: error => {\n      alert(`댓글 삭제 중 오류가 발생했습니다.: ${error}`);\n    }\n  });\n  return {\n    addCommentMutation,\n    deleteCommentMutation,\n    updateCommentMutation,\n    addReplyCommentMutation,\n    updateReplyCommentMutation,\n    deleteReplyCommentMutation\n  };\n};\n_s(useCommentMutation, \"MjQ+ispBSIyXdGTkWaT571MjLFY=\", false, function () {\n  return [useQueryClient, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation];\n});\nexport default useCommentMutation;","map":{"version":3,"names":["useMutation","useQueryClient","addComment","deleteComment","updateComment","addReplyComment","deleteReplyComment","updateReplyComment","useCommentMutation","_s","queryClient","addCommentMutation","onSuccess","invalidateQueries","onError","error","alert","updateCommentMutation","deleteCommentMutation","addReplyCommentMutation","updateReplyCommentMutation","deleteReplyCommentMutation"],"sources":["C:/React/team_one/src/hooks/useCommentMutation.ts"],"sourcesContent":["import { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { addComment, deleteComment, updateComment } from '../services/supabase/comments';\r\nimport { addReplyComment, deleteReplyComment, updateReplyComment } from '../services/supabase/replyComments';\r\n\r\nconst useCommentMutation = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const addCommentMutation = useMutation(addComment, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['comments']);\r\n    },\r\n    onError: (error) => {\r\n      alert(`댓글 작성 중 오류가 발생했습니다.: ${error}`);\r\n    }\r\n  });\r\n\r\n  const updateCommentMutation = useMutation(updateComment, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['comments']);\r\n    },\r\n    onError: (error) => {\r\n      alert(`댓글 수정 중 오류가 발생했습니다.: ${error}`);\r\n    }\r\n  });\r\n\r\n  const deleteCommentMutation = useMutation(deleteComment, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['comments']);\r\n    },\r\n    onError: (error) => {\r\n      alert(`댓글 삭제 중 오류가 발생했습니다.: ${error}`);\r\n    }\r\n  });\r\n\r\n  // 대댓글\r\n  const addReplyCommentMutation = useMutation(addReplyComment, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['replyComments']);\r\n    },\r\n    onError: (error) => {\r\n      alert(`댓글 작성 중 오류가 발생했습니다.: ${error}`);\r\n    }\r\n  });\r\n\r\n  const updateReplyCommentMutation = useMutation(updateReplyComment, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['replyComments']);\r\n    },\r\n    onError: (error) => {\r\n      alert(`댓글 수정 중 오류가 발생했습니다.: ${error}`);\r\n    }\r\n  });\r\n\r\n  const deleteReplyCommentMutation = useMutation(deleteReplyComment, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['replyComments']);\r\n    },\r\n    onError: (error) => {\r\n      alert(`댓글 삭제 중 오류가 발생했습니다.: ${error}`);\r\n    }\r\n  });\r\n\r\n  return {\r\n    addCommentMutation,\r\n    deleteCommentMutation,\r\n    updateCommentMutation,\r\n    addReplyCommentMutation,\r\n    updateReplyCommentMutation,\r\n    deleteReplyCommentMutation\r\n  };\r\n};\r\n\r\nexport default useCommentMutation;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;AACnE,SAASC,UAAU,EAAEC,aAAa,EAAEC,aAAa,QAAQ,+BAA+B;AACxF,SAASC,eAAe,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,oCAAoC;AAE5G,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,WAAW,GAAGT,cAAc,CAAC,CAAC;EAEpC,MAAMU,kBAAkB,GAAGX,WAAW,CAACE,UAAU,EAAE;IACjDU,SAAS,EAAEA,CAAA,KAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACDC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAAE,wBAAuBD,KAAM,EAAC,CAAC;IACxC;EACF,CAAC,CAAC;EAEF,MAAME,qBAAqB,GAAGjB,WAAW,CAACI,aAAa,EAAE;IACvDQ,SAAS,EAAEA,CAAA,KAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACDC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAAE,wBAAuBD,KAAM,EAAC,CAAC;IACxC;EACF,CAAC,CAAC;EAEF,MAAMG,qBAAqB,GAAGlB,WAAW,CAACG,aAAa,EAAE;IACvDS,SAAS,EAAEA,CAAA,KAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACDC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAAE,wBAAuBD,KAAM,EAAC,CAAC;IACxC;EACF,CAAC,CAAC;;EAEF;EACA,MAAMI,uBAAuB,GAAGnB,WAAW,CAACK,eAAe,EAAE;IAC3DO,SAAS,EAAEA,CAAA,KAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAAC,eAAe,CAAC,CAAC;IAClD,CAAC;IACDC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAAE,wBAAuBD,KAAM,EAAC,CAAC;IACxC;EACF,CAAC,CAAC;EAEF,MAAMK,0BAA0B,GAAGpB,WAAW,CAACO,kBAAkB,EAAE;IACjEK,SAAS,EAAEA,CAAA,KAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAAC,eAAe,CAAC,CAAC;IAClD,CAAC;IACDC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAAE,wBAAuBD,KAAM,EAAC,CAAC;IACxC;EACF,CAAC,CAAC;EAEF,MAAMM,0BAA0B,GAAGrB,WAAW,CAACM,kBAAkB,EAAE;IACjEM,SAAS,EAAEA,CAAA,KAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAAC,eAAe,CAAC,CAAC;IAClD,CAAC;IACDC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAAE,wBAAuBD,KAAM,EAAC,CAAC;IACxC;EACF,CAAC,CAAC;EAEF,OAAO;IACLJ,kBAAkB;IAClBO,qBAAqB;IACrBD,qBAAqB;IACrBE,uBAAuB;IACvBC,0BAA0B;IAC1BC;EACF,CAAC;AACH,CAAC;AAACZ,EAAA,CAlEID,kBAAkB;EAAA,QACFP,cAAc,EAEPD,WAAW,EASRA,WAAW,EASXA,WAAW,EAUTA,WAAW,EASRA,WAAW,EASXA,WAAW;AAAA;AAmBhD,eAAeQ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}