{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\common\\\\Header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { atom, useAtom } from 'jotai';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport Login, { userAtom, userEmailAtom } from '../user/login/Login';\nimport { getUserInfo, sigOutService } from '../../services/supabase/auth';\nimport icon from '../../image/icon.png';\nimport * as S from './Styled.Header';\nimport { supabase } from '../../services/supabase/supabase';\nimport { sosialUserAtom } from '../user/social/SosialLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const jotaiUserDataAtom = atom(null);\nconst Header = () => {\n  _s();\n  const queryClient = useQueryClient();\n  const [loginModal, setLoginModal] = useState(false);\n  const [showLogoutButton, setShowLogoutButton] = useState(false);\n  const [, setUser] = useAtom(userAtom);\n  const [userEmail, setUserEmail] = useAtom(userEmailAtom);\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\n  const [socialUser, setSocialUser] = useAtom(sosialUserAtom);\n\n  // 유저 정보 조회하는 쿼리\n  const {\n    isLoading,\n    isError,\n    data: userData\n  } = useQuery(['users', userEmail], () => getUserInfo(userEmail), {\n    staleTime: 300000,\n    enabled: userEmail !== null\n  });\n\n  // 로그아웃 뮤테이션\n  const logoutMutation = useMutation(() => sigOutService(), {\n    onSuccess: () => {\n      setJotaiUserData(null);\n      setUserEmail('');\n      localStorage.removeItem('jotaiUserData');\n      queryClient.invalidateQueries(['users', userEmail]);\n    }\n  });\n\n  // 로그아웃 핸들러\n  const signOutHandler = async () => {\n    try {\n      setSocialUser(null);\n      setUser(null); // userData 초기화\n      setUserEmail('');\n      await logoutMutation.mutateAsync();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // 이메일 로그인 토큰 생성 => jotaiUserData\n  useEffect(() => {\n    if (userData) {\n      const userDataString = JSON.stringify(userData);\n      localStorage.setItem('jotaiUserData', userDataString);\n      setJotaiUserData(userData);\n    }\n  }, [userData]);\n\n  // 소셜 로그인 토큰 생성 => jotaiUserData\n  useEffect(() => {\n    if (!(socialUser !== null && socialUser !== void 0 && socialUser.identities)) {\n      return;\n    } else if ((socialUser === null || socialUser === void 0 ? void 0 : socialUser.identities[0].provider) !== 'email') {\n      const tokenKey = localStorage.getItem('sb-bbakvkybkyfoiijevbec-auth-token');\n      const parsedToken = tokenKey ? JSON.parse(tokenKey) : null;\n      const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.user.id;\n      const userName = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.user.user_metadata.name;\n      const userEmail = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.user.email;\n      const userInsertData = {\n        uid: userId,\n        nickname: userName,\n        profileimg: 'neverdelete/461839d7-4ae5-4981-a29c-7793179d98ac.jpeg',\n        email: userEmail,\n        password: ''\n      };\n      const userDataString = JSON.stringify(userInsertData);\n      localStorage.setItem('jotaiUserData', userDataString);\n      setJotaiUserData(userInsertData);\n    }\n  }, [socialUser]);\n\n  // 생성한 토큰 가져와서 새로고침 방지\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('jotaiUserData');\n    if (storedUserData) {\n      const parsedUserData = JSON.parse(storedUserData);\n      setJotaiUserData(parsedUserData);\n    }\n  }, []);\n\n  // 현재 유저의 정보 가져오기\n  const checkUser = async () => {\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser();\n    setSocialUser(user);\n  };\n\n  // window.addEventListener('hashchange' =>브라우저의 URL 해시(예: # 뒤의 일부)가 변경될 때 발생\n  // 의존성 배열을 빈 배열([])을 전달했기 때문에, 컴포넌트가 처음 렌더링될 때 한 번만 실행되며, 이후에는 의존성 변경 없이는 다시 실행되지 않음\n  useEffect(() => {\n    checkUser();\n    window.addEventListener('hashchange', function () {\n      checkUser();\n    });\n  }, []);\n\n  // 로그인 모달 오픈\n  const showModal = () => {\n    setLoginModal(true);\n  };\n\n  // 드롭박스 토글 버튼\n  const toggleLogoutButton = () => {\n    setShowLogoutButton(prevState => !prevState);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC911\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uB3D9\\uC548 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(S.HeaderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(S.Logo, {\n      src: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [jotaiUserData ? /*#__PURE__*/_jsxDEV(S.ProfileWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: jotaiUserData ? /*#__PURE__*/_jsxDEV(S.ProfileBox, {\n            children: [/*#__PURE__*/_jsxDEV(S.ProfileImg, {\n              src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData.profileimg}`,\n              alt: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(S.NickName, {\n              children: jotaiUserData.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, jotaiUserData.uid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.ButtonWrapper, {\n          children: /*#__PURE__*/_jsxDEV(S.ButtonBox, {\n            children: [/*#__PURE__*/_jsxDEV(S.ToggleButton, {\n              onClick: toggleLogoutButton,\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), showLogoutButton && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(S.LogOutButton, {\n                onClick: signOutHandler,\n                children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(S.LinkButton, {\n                to: \"/mypage\",\n                children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(S.PostLinkButton, {\n                to: \"/post\",\n                children: \"\\uAE00\\uC791\\uC131\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(S.LoginButton, {\n        onClick: showModal,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), loginModal && /*#__PURE__*/_jsxDEV(Login, {\n        setLoginModal: setLoginModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"ez0CLKgQII4FxJfK1DE7BXoDbMo=\", false, function () {\n  return [useQueryClient, useAtom, useAtom, useAtom, useAtom, useQuery, useMutation];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","atom","useAtom","useMutation","useQuery","useQueryClient","Login","userAtom","userEmailAtom","getUserInfo","sigOutService","icon","S","supabase","sosialUserAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","jotaiUserDataAtom","Header","_s","queryClient","loginModal","setLoginModal","showLogoutButton","setShowLogoutButton","setUser","userEmail","setUserEmail","jotaiUserData","setJotaiUserData","socialUser","setSocialUser","isLoading","isError","data","userData","staleTime","enabled","logoutMutation","onSuccess","localStorage","removeItem","invalidateQueries","signOutHandler","mutateAsync","error","console","userDataString","JSON","stringify","setItem","identities","provider","tokenKey","getItem","parsedToken","parse","userId","user","id","userName","user_metadata","name","email","userInsertData","uid","nickname","profileimg","password","storedUserData","parsedUserData","checkUser","auth","getUser","window","addEventListener","showModal","toggleLogoutButton","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","HeaderContainer","Logo","src","ProfileWrapper","ProfileBox","ProfileImg","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","NickName","ButtonWrapper","ButtonBox","ToggleButton","onClick","LogOutButton","LinkButton","to","PostLinkButton","LoginButton","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/common/Header.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { atom, useAtom } from 'jotai';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport Login, { userAtom, userEmailAtom } from '../user/login/Login';\r\nimport { getUserInfo, sigOutService } from '../../services/supabase/auth';\r\nimport icon from '../../image/icon.png';\r\nimport * as S from './Styled.Header';\r\n\r\nimport type { UserType, UserTypes } from '../../types/supabase';\r\n\r\nimport { supabase } from '../../services/supabase/supabase';\r\nimport { sosialUserAtom } from '../user/social/SosialLogin';\r\n\r\nexport const jotaiUserDataAtom = atom<Omit<UserTypes, 'password'> | null>(null);\r\n\r\nconst Header = () => {\r\n  const queryClient = useQueryClient();\r\n  const [loginModal, setLoginModal] = useState(false);\r\n  const [showLogoutButton, setShowLogoutButton] = useState(false);\r\n\r\n  const [, setUser] = useAtom(userAtom);\r\n  const [userEmail, setUserEmail] = useAtom(userEmailAtom);\r\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\r\n  const [socialUser, setSocialUser] = useAtom(sosialUserAtom);\r\n\r\n  // 유저 정보 조회하는 쿼리\r\n  const {\r\n    isLoading,\r\n    isError,\r\n    data: userData\r\n  } = useQuery<Omit<UserType, 'password'> | null>(['users', userEmail], () => getUserInfo(userEmail), {\r\n    staleTime: 300000,\r\n    enabled: userEmail !== null\r\n  });\r\n\r\n  // 로그아웃 뮤테이션\r\n  const logoutMutation = useMutation(() => sigOutService(), {\r\n    onSuccess: () => {\r\n      setJotaiUserData(null);\r\n      setUserEmail('');\r\n      localStorage.removeItem('jotaiUserData');\r\n      queryClient.invalidateQueries(['users', userEmail]);\r\n    }\r\n  });\r\n\r\n  // 로그아웃 핸들러\r\n  const signOutHandler = async () => {\r\n    try {\r\n      setSocialUser(null);\r\n      setUser(null); // userData 초기화\r\n      setUserEmail('');\r\n      await logoutMutation.mutateAsync();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // 이메일 로그인 토큰 생성 => jotaiUserData\r\n  useEffect(() => {\r\n    if (userData) {\r\n      const userDataString = JSON.stringify(userData);\r\n      localStorage.setItem('jotaiUserData', userDataString);\r\n      setJotaiUserData(userData);\r\n    }\r\n  }, [userData]);\r\n\r\n  // 소셜 로그인 토큰 생성 => jotaiUserData\r\n  useEffect(() => {\r\n    if (!socialUser?.identities) {\r\n      return;\r\n    } else if (socialUser?.identities[0].provider !== 'email') {\r\n      const tokenKey = localStorage.getItem('sb-bbakvkybkyfoiijevbec-auth-token');\r\n      const parsedToken = tokenKey ? JSON.parse(tokenKey) : null;\r\n\r\n      const userId = parsedToken?.user.id;\r\n      const userName = parsedToken?.user.user_metadata.name;\r\n      const userEmail = parsedToken?.user.email;\r\n\r\n      const userInsertData = {\r\n        uid: userId,\r\n        nickname: userName,\r\n        profileimg: 'neverdelete/461839d7-4ae5-4981-a29c-7793179d98ac.jpeg',\r\n        email: userEmail,\r\n        password: ''\r\n      };\r\n      const userDataString = JSON.stringify(userInsertData);\r\n      localStorage.setItem('jotaiUserData', userDataString);\r\n      setJotaiUserData(userInsertData);\r\n    }\r\n  }, [socialUser]);\r\n\r\n  // 생성한 토큰 가져와서 새로고침 방지\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem('jotaiUserData');\r\n    if (storedUserData) {\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setJotaiUserData(parsedUserData);\r\n    }\r\n  }, []);\r\n\r\n  // 현재 유저의 정보 가져오기\r\n  const checkUser = async () => {\r\n    const {\r\n      data: { user }\r\n    } = await supabase.auth.getUser();\r\n    setSocialUser(user);\r\n  };\r\n\r\n  // window.addEventListener('hashchange' =>브라우저의 URL 해시(예: # 뒤의 일부)가 변경될 때 발생\r\n  // 의존성 배열을 빈 배열([])을 전달했기 때문에, 컴포넌트가 처음 렌더링될 때 한 번만 실행되며, 이후에는 의존성 변경 없이는 다시 실행되지 않음\r\n  useEffect(() => {\r\n    checkUser();\r\n    window.addEventListener('hashchange', function () {\r\n      checkUser();\r\n    });\r\n  }, []);\r\n\r\n  // 로그인 모달 오픈\r\n  const showModal = () => {\r\n    setLoginModal(true);\r\n  };\r\n\r\n  // 드롭박스 토글 버튼\r\n  const toggleLogoutButton = () => {\r\n    setShowLogoutButton((prevState) => !prevState);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>데이터 로딩 중입니다.</div>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div>데이터를 불러오는 동안 오류가 발생했습니다</div>;\r\n  }\r\n\r\n  return (\r\n    <S.HeaderContainer>\r\n      <S.Logo src={icon} />\r\n      <div>\r\n        {jotaiUserData ? (\r\n          <S.ProfileWrapper>\r\n            <div>\r\n              {jotaiUserData ? (\r\n                <S.ProfileBox key={jotaiUserData.uid}>\r\n                  <S.ProfileImg\r\n                    src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData.profileimg}`}\r\n                    alt=\"Profile\"\r\n                  />\r\n                  <S.NickName>{jotaiUserData.nickname}</S.NickName>\r\n                </S.ProfileBox>\r\n              ) : null}\r\n            </div>\r\n            <S.ButtonWrapper>\r\n              <S.ButtonBox>\r\n                <S.ToggleButton onClick={toggleLogoutButton}>▼</S.ToggleButton>\r\n                {showLogoutButton && (\r\n                  <>\r\n                    <S.LogOutButton onClick={signOutHandler}>로그아웃</S.LogOutButton>\r\n                    <S.LinkButton to=\"/mypage\">마이페이지</S.LinkButton>\r\n                    <S.PostLinkButton to=\"/post\">글작성</S.PostLinkButton>\r\n                  </>\r\n                )}\r\n              </S.ButtonBox>\r\n            </S.ButtonWrapper>\r\n          </S.ProfileWrapper>\r\n        ) : (\r\n          <S.LoginButton onClick={showModal}>Login</S.LoginButton>\r\n        )}\r\n\r\n        {loginModal && <Login setLoginModal={setLoginModal} />}\r\n      </div>\r\n    </S.HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}