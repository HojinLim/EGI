{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\mypage\\\\MyProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jotaiUserDataAtom } from '../common/Header';\nimport { useAtom } from 'jotai';\nimport { supabase } from '../../services/supabase/supabase';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { handleImageChange } from '../../hooks/useHandleImage';\nimport UserPosts, { myIscompletedhAtom, myPostLegthAtom } from './UserPosts';\nimport * as S from './Styled.MyProfile';\nimport * as L from '../common/Styled.Loading';\nimport { userAtom, userEmailAtom } from '../user/login/Login';\nimport { sosialUserAtom } from '../user/social/SosialLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyProfile = () => {\n  _s();\n  const [user] = useAtom(userAtom);\n  const [editnickname, setEditNickName] = useState('');\n  const [selectedImages, setSelectedImages] = useState([]);\n  const queryClient = useQueryClient();\n  const [userEmail] = useAtom(userEmailAtom);\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\n  const [isEditing, setIsEditing] = useState(false);\n  const [socialUser] = useAtom(sosialUserAtom);\n  const [myPostLegth] = useAtom(myPostLegthAtom);\n  const [myIscompleted] = useAtom(myIscompletedhAtom);\n\n  // 생성한 토큰 가져와서 새로고침 방지\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('jotaiUserData');\n    if (storedUserData) {\n      const parsedUserData = JSON.parse(storedUserData);\n      setJotaiUserData(parsedUserData);\n      queryClient.invalidateQueries(['users', userEmail]);\n    }\n  }, []);\n  console.log('myIscompleted', myIscompleted);\n  // 프로필 수정 => 저장\n  const handleEdit = async () => {\n    let profileimg = null;\n    if (jotaiUserData !== null && jotaiUserData !== void 0 && jotaiUserData.profileimg && Array.isArray(jotaiUserData.profileimg)) {\n      profileimg = jotaiUserData.profileimg.join(';');\n    }\n    if (selectedImages.length > 0) {\n      const newImageUrls = [];\n      for (const selectedImage of selectedImages) {\n        const {\n          data,\n          error\n        } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\n        if (error) {\n          console.error('Error uploading image to Supabase storage:', error);\n          alert('이미지 업로드 중 에러가 발생했습니다!');\n          return;\n        }\n        newImageUrls.push(data.path);\n      }\n      if (profileimg === null) {\n        profileimg = newImageUrls.join(';');\n      } else {\n        profileimg += ';' + newImageUrls.join(';');\n      }\n    }\n    if (editnickname) {\n      const {\n        error\n      } = await supabase.from('users').update({\n        nickname: editnickname,\n        profileimg: profileimg || (jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.profileimg)\n      }).eq('uid', jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.uid);\n      if (error) {\n        console.error('Error editing post:', error);\n        alert('에러가 발생했습니다!');\n      } else {\n        alert('수정이 완료되었습니다.');\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('users').select().eq('uid', jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.uid).single();\n        if (fetchError) {\n          console.error('Error fetching updated user data:', fetchError);\n        } else {\n          localStorage.setItem('jotaiUserData', JSON.stringify(data));\n          setJotaiUserData(data);\n        }\n        setEditNickName('');\n        setSelectedImages([]);\n        setIsEditing(false);\n      }\n    }\n  };\n  const handleImageChangeWrapper = e => {\n    const selectedFiles = e.target.files;\n    if (selectedFiles) {\n      const updatedSelectedImages = handleImageChange(selectedFiles);\n      setSelectedImages(updatedSelectedImages);\n    }\n  };\n  const handleEditClickOpen = () => {\n    if (!(socialUser !== null && socialUser !== void 0 && socialUser.identities) || undefined && jotaiUserData) {\n      setEditNickName((jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.nickname) || '');\n      setIsEditing(true);\n    } else if ((socialUser === null || socialUser === void 0 ? void 0 : socialUser.identities[0].provider) !== 'email') {\n      setIsEditing(false);\n      alert('소셜 로그인 시 프로필 수정이 불가능합니다.');\n    }\n  };\n  const handleEditClickClose = () => {\n    setIsEditing(false);\n  };\n  const handleNicknameChange = event => {\n    setEditNickName(event.target.value);\n  };\n\n  // 마이페이지 등급\n  const grade = () => {\n    if (myPostLegth >= 20) {\n      return 'VIP';\n    } else if (myPostLegth >= 15) {\n      return 'Gold';\n    } else if (myPostLegth >= 10) {\n      return 'Silver';\n    } else {\n      return 'Bronze';\n    }\n  };\n\n  // 판매완료 개수 체크\n  const completed = () => {\n    if (!myIscompleted) {\n      return 0; // 빈 배열이면 완료된 항목이 없으므로 0을 반환\n    } else {\n      const userUid = jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.uid;\n\n      // uid가 jotaiUserData의 uid와 일치하고 iscomplted가 true인 객체만 필터링\n      const completedItems = myIscompleted.filter(item => {\n        return item.uid == userUid && item.iscompleted == '판매 완료';\n      });\n      return completedItems.length;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(S.MypageContainer, {\n    children: user || jotaiUserData ? /*#__PURE__*/_jsxDEV(S.MypageWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.MypageWrap, {\n        children: [/*#__PURE__*/_jsxDEV(S.ProfileTable, {\n          children: [/*#__PURE__*/_jsxDEV(S.ProfileBox, {\n            children: [/*#__PURE__*/_jsxDEV(S.ProfileImg, {\n              src: jotaiUserData !== null && jotaiUserData !== void 0 && jotaiUserData.profileimg ? `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.profileimg}` : '-',\n              alt: `프로필 이미지 - ${user === null || user === void 0 ? void 0 : user.uid}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(S.ProfileInfo, {\n              children: [isEditing ? /*#__PURE__*/_jsxDEV(S.NickNameBox, {\n                children: [/*#__PURE__*/_jsxDEV(S.EditNickName, {\n                  children: \"\\uB2C9\\uB124\\uC784 :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(S.InputNickName, {\n                  type: \"text\",\n                  value: editnickname,\n                  onChange: handleNicknameChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(S.NickName, {\n                children: jotaiUserData ? jotaiUserData.nickname : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(S.Email, {\n                children: jotaiUserData ? jotaiUserData.email : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(S.EditBtn, {\n                  onClick: handleEdit,\n                  children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(S.EditBtn, {\n                  onClick: handleEditClickClose,\n                  children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(S.EditBtn, {\n                onClick: handleEditClickOpen,\n                children: \"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.EditProfile, {\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(S.EditProfileLabel, {\n                  htmlFor: \"file-input\",\n                  children: \"\\uD30C\\uC77C\\uC120\\uD0DD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(S.EditProfileInput, {\n                  id: \"file-input\",\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: handleImageChangeWrapper\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(S.EtcInfoBox, {\n            children: [/*#__PURE__*/_jsxDEV(S.GradeBox, {\n              children: [/*#__PURE__*/_jsxDEV(S.GradeFc, {\n                children: grade()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(S.GradeText, {\n                children: \"\\uD68C\\uC6D0 \\uB4F1\\uAE09\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(S.CompleteBox, {\n              children: [/*#__PURE__*/_jsxDEV(S.CompleteText, {\n                children: \"\\uD310\\uB9E4 \\uC644\\uB8CC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(S.CompleteNum, {\n                children: [completed(), \" / \", myPostLegth]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UserPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(L.LoadingOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(MyProfile, \"ndcHCh+FjlCOIFi6g2MaLUszi/E=\", false, function () {\n  return [useAtom, useQueryClient, useAtom, useAtom, useAtom, useAtom, useAtom];\n});\n_c = MyProfile;\nexport default MyProfile;\nvar _c;\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"names":["React","useState","useEffect","jotaiUserDataAtom","useAtom","supabase","useQueryClient","handleImageChange","UserPosts","myIscompletedhAtom","myPostLegthAtom","S","L","userAtom","userEmailAtom","sosialUserAtom","jsxDEV","_jsxDEV","MyProfile","_s","user","editnickname","setEditNickName","selectedImages","setSelectedImages","queryClient","userEmail","jotaiUserData","setJotaiUserData","isEditing","setIsEditing","socialUser","myPostLegth","myIscompleted","storedUserData","localStorage","getItem","parsedUserData","JSON","parse","invalidateQueries","console","log","handleEdit","profileimg","Array","isArray","join","length","newImageUrls","selectedImage","data","error","storage","from","upload","name","alert","push","path","update","nickname","eq","uid","fetchError","select","single","setItem","stringify","handleImageChangeWrapper","e","selectedFiles","target","files","updatedSelectedImages","handleEditClickOpen","identities","undefined","provider","handleEditClickClose","handleNicknameChange","event","value","grade","completed","userUid","completedItems","filter","item","iscompleted","MypageContainer","children","MypageWrapper","MypageWrap","ProfileTable","ProfileBox","ProfileImg","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","ProfileInfo","NickNameBox","EditNickName","InputNickName","type","onChange","NickName","Email","email","EditBtn","onClick","EditProfile","EditProfileLabel","htmlFor","EditProfileInput","id","accept","EtcInfoBox","GradeBox","GradeFc","GradeText","CompleteBox","CompleteText","CompleteNum","LoadingOverlay","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/mypage/MyProfile.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { jotaiUserDataAtom } from '../common/Header';\r\nimport { useAtom } from 'jotai';\r\nimport { supabase } from '../../services/supabase/supabase';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { handleImageChange } from '../../hooks/useHandleImage';\r\nimport UserPosts, { myIscompletedhAtom, myPostLegthAtom } from './UserPosts';\r\nimport * as S from './Styled.MyProfile';\r\nimport * as L from '../common/Styled.Loading';\r\nimport { userAtom, userEmailAtom } from '../user/login/Login';\r\nimport { sosialUserAtom } from '../user/social/SosialLogin';\r\n\r\nconst MyProfile = () => {\r\n  const [user] = useAtom(userAtom);\r\n  const [editnickname, setEditNickName] = useState('');\r\n  const [selectedImages, setSelectedImages] = useState<File[]>([]);\r\n  const queryClient = useQueryClient();\r\n  const [userEmail] = useAtom(userEmailAtom);\r\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [socialUser] = useAtom(sosialUserAtom);\r\n  const [myPostLegth] = useAtom(myPostLegthAtom);\r\n  const [myIscompleted] = useAtom(myIscompletedhAtom);\r\n\r\n  // 생성한 토큰 가져와서 새로고침 방지\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem('jotaiUserData');\r\n    if (storedUserData) {\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setJotaiUserData(parsedUserData);\r\n\r\n      queryClient.invalidateQueries(['users', userEmail]);\r\n    }\r\n  }, []);\r\n  console.log('myIscompleted', myIscompleted);\r\n  // 프로필 수정 => 저장\r\n  const handleEdit = async () => {\r\n    let profileimg: string | null = null;\r\n\r\n    if (jotaiUserData?.profileimg && Array.isArray(jotaiUserData.profileimg)) {\r\n      profileimg = jotaiUserData.profileimg.join(';');\r\n    }\r\n\r\n    if (selectedImages.length > 0) {\r\n      const newImageUrls: string[] = [];\r\n\r\n      for (const selectedImage of selectedImages) {\r\n        const { data, error } = await supabase.storage\r\n          .from('1st')\r\n          .upload(`images/${selectedImage.name}`, selectedImage);\r\n\r\n        if (error) {\r\n          console.error('Error uploading image to Supabase storage:', error);\r\n          alert('이미지 업로드 중 에러가 발생했습니다!');\r\n          return;\r\n        }\r\n\r\n        newImageUrls.push(data.path);\r\n      }\r\n\r\n      if (profileimg === null) {\r\n        profileimg = newImageUrls.join(';');\r\n      } else {\r\n        profileimg += ';' + newImageUrls.join(';');\r\n      }\r\n    }\r\n\r\n    if (editnickname) {\r\n      const { error } = await supabase\r\n        .from('users')\r\n        .update({\r\n          nickname: editnickname,\r\n          profileimg: profileimg || jotaiUserData?.profileimg\r\n        })\r\n        .eq('uid', jotaiUserData?.uid);\r\n\r\n      if (error) {\r\n        console.error('Error editing post:', error);\r\n        alert('에러가 발생했습니다!');\r\n      } else {\r\n        alert('수정이 완료되었습니다.');\r\n\r\n        const { data, error: fetchError } = await supabase\r\n          .from('users')\r\n          .select()\r\n          .eq('uid', jotaiUserData?.uid)\r\n          .single();\r\n\r\n        if (fetchError) {\r\n          console.error('Error fetching updated user data:', fetchError);\r\n        } else {\r\n          localStorage.setItem('jotaiUserData', JSON.stringify(data));\r\n          setJotaiUserData(data);\r\n        }\r\n        setEditNickName('');\r\n        setSelectedImages([]);\r\n        setIsEditing(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleImageChangeWrapper = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFiles = e.target.files;\r\n\r\n    if (selectedFiles) {\r\n      const updatedSelectedImages = handleImageChange(selectedFiles);\r\n      setSelectedImages(updatedSelectedImages);\r\n    }\r\n  };\r\n\r\n  const handleEditClickOpen = () => {\r\n    if (!socialUser?.identities || (undefined && jotaiUserData)) {\r\n      setEditNickName(jotaiUserData?.nickname || '');\r\n      setIsEditing(true);\r\n    } else if (socialUser?.identities[0].provider !== 'email') {\r\n      setIsEditing(false);\r\n      alert('소셜 로그인 시 프로필 수정이 불가능합니다.');\r\n    }\r\n  };\r\n\r\n  const handleEditClickClose = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleNicknameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEditNickName(event.target.value);\r\n  };\r\n\r\n  // 마이페이지 등급\r\n  const grade = () => {\r\n    if (myPostLegth >= 20) {\r\n      return 'VIP';\r\n    } else if (myPostLegth >= 15) {\r\n      return 'Gold';\r\n    } else if (myPostLegth >= 10) {\r\n      return 'Silver';\r\n    } else {\r\n      return 'Bronze';\r\n    }\r\n  };\r\n\r\n  // 판매완료 개수 체크\r\n  const completed = () => {\r\n    if (!myIscompleted) {\r\n      return 0; // 빈 배열이면 완료된 항목이 없으므로 0을 반환\r\n    } else {\r\n      const userUid = jotaiUserData?.uid;\r\n\r\n      // uid가 jotaiUserData의 uid와 일치하고 iscomplted가 true인 객체만 필터링\r\n      const completedItems = myIscompleted.filter((item) => {\r\n        return item.uid == userUid && item.iscompleted == '판매 완료';\r\n      });\r\n\r\n      return completedItems.length;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.MypageContainer>\r\n      {user || jotaiUserData ? (\r\n        <S.MypageWrapper>\r\n          <S.MypageWrap>\r\n            <S.ProfileTable>\r\n              <S.ProfileBox>\r\n                <S.ProfileImg\r\n                  src={\r\n                    jotaiUserData?.profileimg\r\n                      ? `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData?.profileimg}`\r\n                      : '-'\r\n                  }\r\n                  alt={`프로필 이미지 - ${user?.uid}`}\r\n                />\r\n                <S.ProfileInfo>\r\n                  {isEditing ? (\r\n                    <S.NickNameBox>\r\n                      <S.EditNickName>닉네임 :</S.EditNickName>\r\n                      <S.InputNickName type=\"text\" value={editnickname} onChange={handleNicknameChange} />\r\n                    </S.NickNameBox>\r\n                  ) : (\r\n                    <S.NickName>{jotaiUserData ? jotaiUserData.nickname : ''}</S.NickName>\r\n                  )}\r\n                  <S.Email>{jotaiUserData ? jotaiUserData.email : ''}</S.Email>\r\n\r\n                  {isEditing ? (\r\n                    <div>\r\n                      <S.EditBtn onClick={handleEdit}>저장하기</S.EditBtn>\r\n                      <S.EditBtn onClick={handleEditClickClose}>취소하기</S.EditBtn>\r\n                    </div>\r\n                  ) : (\r\n                    <S.EditBtn onClick={handleEditClickOpen}>프로필 수정</S.EditBtn>\r\n                  )}\r\n                </S.ProfileInfo>\r\n              </S.ProfileBox>\r\n              <S.EditProfile>\r\n                {isEditing ? (\r\n                  <div>\r\n                    <div>\r\n                      <S.EditProfileLabel htmlFor=\"file-input\">파일선택</S.EditProfileLabel>\r\n                      <S.EditProfileInput\r\n                        id=\"file-input\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleImageChangeWrapper}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n              </S.EditProfile>\r\n            </S.ProfileTable>\r\n            <div>\r\n              <S.EtcInfoBox>\r\n                <S.GradeBox>\r\n                  <S.GradeFc>{grade()}</S.GradeFc> <S.GradeText>회원 등급</S.GradeText>\r\n                </S.GradeBox>\r\n                <S.CompleteBox>\r\n                  <S.CompleteText>판매 완료</S.CompleteText>{' '}\r\n                  <S.CompleteNum>\r\n                    {completed()} / {myPostLegth}\r\n                  </S.CompleteNum>\r\n                </S.CompleteBox>\r\n              </S.EtcInfoBox>\r\n            </div>\r\n          </S.MypageWrap>\r\n          <UserPosts />\r\n        </S.MypageWrapper>\r\n      ) : (\r\n        <div>\r\n          <L.LoadingOverlay />\r\n        </div>\r\n      )}\r\n    </S.MypageContainer>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}