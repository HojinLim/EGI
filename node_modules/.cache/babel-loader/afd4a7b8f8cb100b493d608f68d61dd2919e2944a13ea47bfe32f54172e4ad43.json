{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\GetPost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { supabase } from '../../services/supabase/supabase';\nimport { categories } from '../category/Category';\nimport * as S from './Styled.Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GetPost = () => {\n  _s();\n  const [, setPage] = useState(1);\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [postEnd] = useState(false);\n  const fetchPostsAndPageUpdate = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('posts').select('*');\n    if (error) {\n      console.error('Error fetching posts:', error);\n    } else {\n      const postsWithCompleteURLs = data.map(post => ({\n        ...post,\n        image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\n      }));\n      setPosts(postsWithCompleteURLs);\n      setFilteredPosts(postsWithCompleteURLs);\n      setPage(prevPage => prevPage + 1); // 페이지 업데이트\n    }\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const {\n        innerHeight\n      } = window;\n      const {\n        scrollHeight\n      } = document.body;\n      const {\n        scrollTop\n      } = document.documentElement;\n      if (Math.round(scrollTop + innerHeight) >= scrollHeight) {\n        fetchPostsAndPageUpdate(); // 호출해서 새로운 데이터 가져오고 페이지 업데이트\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const handleCategoryClick = category => {\n    if (category === '전체') {\n      setFilteredPosts(posts);\n    } else {\n      const filteredPosts = posts.filter(post => post.category === category);\n      setFilteredPosts(filteredPosts);\n    }\n  };\n  const categoryButtons = categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n    value: category.value,\n    onClick: () => handleCategoryClick(category.value),\n    children: category.label\n  }, category.value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: categoryButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Container, {\n      children: [filteredPosts.map(post => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/post/${post.pid}`,\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        children: /*#__PURE__*/_jsxDEV(S.PostItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.image_urls.length > 0 && /*#__PURE__*/_jsxDEV(S.Image, {\n              src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `,\n              alt: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, post.pid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), postEnd && /*#__PURE__*/_jsxDEV(S.EndMassage, {\n        children: \"\\uB354 \\uC774\\uC0C1\\uC758 \\uAC8C\\uC2DC\\uBB3C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GetPost, \"SVkbcsdA24MVnY4xjH/fhNdVcjM=\");\n_c = GetPost;\nexport default GetPost;\nvar _c;\n$RefreshReg$(_c, \"GetPost\");","map":{"version":3,"names":["React","useEffect","useState","NavLink","supabase","categories","S","jsxDEV","_jsxDEV","Fragment","_Fragment","GetPost","_s","setPage","posts","setPosts","filteredPosts","setFilteredPosts","postEnd","fetchPostsAndPageUpdate","data","error","from","select","console","postsWithCompleteURLs","map","post","image_urls","replace","split","prevPage","handleScroll","innerHeight","window","scrollHeight","document","body","scrollTop","documentElement","Math","round","addEventListener","removeEventListener","handleCategoryClick","category","filter","categoryButtons","value","onClick","children","label","fileName","_jsxFileName","lineNumber","columnNumber","Container","to","pid","style","textDecoration","color","PostItem","title","length","Image","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","EndMassage","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/GetPost.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { Post } from '../../types/supabase';\r\nimport { supabase } from '../../services/supabase/supabase';\r\nimport { categories } from '../category/Category';\r\nimport * as S from './Styled.Posts';\r\n\r\nexport const GetPost = () => {\r\n  const [, setPage] = useState<number>(1);\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\r\n  const [postEnd] = useState<boolean>(false);\r\n\r\n  const fetchPostsAndPageUpdate = async () => {\r\n    const { data, error } = await supabase.from('posts').select('*');\r\n\r\n    if (error) {\r\n      console.error('Error fetching posts:', error);\r\n    } else {\r\n      const postsWithCompleteURLs = data.map((post) => ({\r\n        ...post,\r\n        image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\r\n      }));\r\n\r\n      setPosts(postsWithCompleteURLs);\r\n      setFilteredPosts(postsWithCompleteURLs);\r\n      setPage((prevPage) => prevPage + 1); // 페이지 업데이트\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const { innerHeight } = window;\r\n      const { scrollHeight } = document.body;\r\n      const { scrollTop } = document.documentElement;\r\n      if (Math.round(scrollTop + innerHeight) >= scrollHeight) {\r\n        fetchPostsAndPageUpdate(); // 호출해서 새로운 데이터 가져오고 페이지 업데이트\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    if (category === '전체') {\r\n      setFilteredPosts(posts);\r\n    } else {\r\n      const filteredPosts = posts.filter((post) => post.category === category);\r\n      setFilteredPosts(filteredPosts);\r\n    }\r\n  };\r\n\r\n  const categoryButtons = categories.map((category) => (\r\n    <button key={category.value} value={category.value} onClick={() => handleCategoryClick(category.value)}>\r\n      {category.label}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div>{categoryButtons}</div>\r\n      <S.Container>\r\n        {filteredPosts.map((post) => (\r\n          <NavLink to={`/post/${post.pid}`} key={post.pid} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n            <S.PostItem>\r\n              <h2>{post.title}</h2>\r\n              <div>\r\n                {post.image_urls.length > 0 && (\r\n                  <S.Image\r\n                    src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `}\r\n                    alt={post.title}\r\n                  />\r\n                )}\r\n              </div>\r\n            </S.PostItem>\r\n          </NavLink>\r\n        ))}\r\n        {postEnd && <S.EndMassage>더 이상의 게시물이 없습니다.</S.EndMassage>}\r\n      </S.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}