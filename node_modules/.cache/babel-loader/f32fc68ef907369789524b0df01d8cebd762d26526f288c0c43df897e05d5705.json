{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\GetPost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst GetPost = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function fetchPosts() {\n      const {\n        data,\n        error\n      } = await supabase.from('posts').select('*');\n      if (error) {\n        console.error('Error fetching posts:', error);\n      } else {\n        setPosts(data);\n      }\n    }\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PostContainer, {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: post.body\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(GetPost, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = GetPost;\nexport default GetPost;\nconst PostContainer = styled.div`\n  display: grid;\n\n  grid-template-columns: repeat(5, 1fr); /* 한 줄에 5개씩 */\n  gap: 10px;\n`;\n_c2 = PostContainer;\nconst PostItem = styled.div`\n  border: 1px solid #ddd;\n  padding: 10px;\n`;\n_c3 = PostItem;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GetPost\");\n$RefreshReg$(_c2, \"PostContainer\");\n$RefreshReg$(_c3, \"PostItem\");","map":{"version":3,"names":["React","useEffect","useState","createClient","styled","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_KEY","supabase","GetPost","_s","posts","setPosts","fetchPosts","data","error","from","select","console","PostContainer","children","map","post","PostItem","title","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","body","id","_c","div","_c2","_c3","$RefreshReg$"],"sources":["C:/React/team_one/src/components/GetPost.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport styled from 'styled-components';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY as string;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nconst GetPost = () => {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      const { data, error } = await supabase.from('posts').select('*');\r\n\r\n      if (error) {\r\n        console.error('Error fetching posts:', error);\r\n      } else {\r\n        setPosts(data);\r\n      }\r\n    }\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <PostContainer>\r\n      {posts.map((post) => (\r\n        <PostItem key={post.id}>\r\n          <h2>{post.title}</h2>\r\n          <div dangerouslySetInnerHTML={{ __html: post.body }} />\r\n        </PostItem>\r\n      ))}\r\n    </PostContainer>\r\n  );\r\n};\r\n\r\nexport default GetPost;\r\n\r\nconst PostContainer = styled.div`\r\n  display: grid;\r\n\r\n  grid-template-columns: repeat(5, 1fr); /* 한 줄에 5개씩 */\r\n  gap: 10px;\r\n`;\r\n\r\nconst PostItem = styled.div`\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n`;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAgC;AAChE,MAAMC,WAAW,GAAGH,OAAO,CAACC,GAAG,CAACG,sBAAgC;AAEhE,MAAMC,QAAQ,GAAGV,YAAY,CAACI,WAAW,EAAEI,WAAW,CAAC;AAQvD,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,eAAeiB,UAAUA,CAAA,EAAG;MAC1B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;MAEhE,IAAIF,KAAK,EAAE;QACTG,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,MAAM;QACLH,QAAQ,CAACE,IAAI,CAAC;MAChB;IACF;IAEAD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACkB,aAAa;IAAAC,QAAA,EACXT,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdrB,OAAA,CAACsB,QAAQ;MAAAH,QAAA,gBACPnB,OAAA;QAAAmB,QAAA,EAAKE,IAAI,CAACE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrB3B,OAAA;QAAK4B,uBAAuB,EAAE;UAAEC,MAAM,EAAER,IAAI,CAACS;QAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAF1CN,IAAI,CAACU,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB,CAAC;AAAClB,EAAA,CA3BID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AA6Bb,eAAeA,OAAO;AAEtB,MAAMU,aAAa,GAAGpB,MAAM,CAACmC,GAAI;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIhB,aAAa;AAOnB,MAAMI,QAAQ,GAAGxB,MAAM,CAACmC,GAAI;AAC5B;AACA;AACA,CAAC;AAACE,GAAA,GAHIb,QAAQ;AAAA,IAAAU,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}