{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\Post.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { useEffect, useState } from 'react';\nimport Editor from './Editor';\n// import { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst Post = () => {\n  _s();\n  const [, setPosts] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newbody, setNewBody] = useState('');\n  useEffect(() => {\n    async function fetchPosts() {\n      const {\n        data,\n        error\n      } = await supabase.from('posts').select('*');\n      if (error) {\n        console.error('Error fetching posts:', error);\n      } else {\n        setPosts(data);\n      }\n    }\n    fetchPosts();\n  }, []);\n  const handleAddPost = async () => {\n    if (newTitle && newbody) {\n      const {\n        data,\n        error\n      } = await supabase.from('posts').insert([{\n        title: newTitle,\n        body: newbody\n      }]);\n      if (error) {\n        console.error('Error adding post:', error);\n      } else {\n        if (data) {\n          setNewTitle('');\n          setNewBody('');\n          alert('글 작성이 완료되었습니다.');\n          window.location.href = '/';\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: newbody,\n        onChange: content => setNewBody(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"Y3Kq87geG610PxmQ48JiwYYyqjo=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","createClient","useEffect","useState","Editor","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_KEY","supabase","Post","_s","setPosts","newTitle","setNewTitle","newbody","setNewBody","fetchPosts","data","error","from","select","console","handleAddPost","insert","title","body","alert","window","location","href","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/Post.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { useEffect, useState } from 'react';\r\nimport Editor from './Editor';\r\n// import { Link } from 'react-router-dom';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY as string;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nconst Post = () => {\r\n  const [, setPosts] = useState<Post[]>([]);\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newbody, setNewBody] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      const { data, error } = await supabase.from('posts').select('*');\r\n\r\n      if (error) {\r\n        console.error('Error fetching posts:', error);\r\n      } else {\r\n        setPosts(data);\r\n      }\r\n    }\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleAddPost = async () => {\r\n    if (newTitle && newbody) {\r\n      const { data, error } = await supabase.from('posts').insert([{ title: newTitle, body: newbody }]);\r\n\r\n      if (error) {\r\n        console.error('Error adding post:', error);\r\n      } else {\r\n        if (data) {\r\n          setNewTitle('');\r\n          setNewBody('');\r\n          alert('글 작성이 완료되었습니다.');\r\n          window.location.href = '/';\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n        <Editor value={newbody} onChange={(content) => setNewBody(content)} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <button onClick={handleAddPost}>Add Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}