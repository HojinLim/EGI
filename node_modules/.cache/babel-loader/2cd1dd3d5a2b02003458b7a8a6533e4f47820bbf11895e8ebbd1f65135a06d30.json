{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\common\\\\Header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { atom, useAtom } from 'jotai';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport Login, { userAtom, userEmailAtom } from '../user/login/Login';\nimport { getUserInfo, sigOutService } from '../../services/supabase/auth';\nimport icon from '../../image/icon.png';\nimport * as S from './Styled.Header';\nimport { supabase } from '../../services/supabase/supabase';\nimport { sosialUserAtom } from '../user/social/SosialLogin';\nimport { useNavigate } from 'react-router';\nimport * as SL from '../common/Styled.Loading';\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const jotaiUserDataAtom = atom(null);\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [loginModal, setLoginModal] = useState(false);\n  const [showLogoutButton, setShowLogoutButton] = useState(false);\n  const [user, setUser] = useAtom(userAtom);\n  const [userEmail, setUserEmail] = useAtom(userEmailAtom);\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\n  const [socialUser, setSocialUser] = useAtom(sosialUserAtom);\n  console.log('user', user);\n  console.log('socialUser', socialUser);\n  // 유저 정보 조회하는 쿼리\n  const {\n    isLoading,\n    isError,\n    data: userData\n  } = useQuery(['users', userEmail], () => getUserInfo(userEmail), {\n    staleTime: 300000,\n    enabled: userEmail !== null\n  });\n\n  // 로그아웃 뮤테이션\n  const logoutMutation = useMutation(() => sigOutService(), {\n    onSuccess: () => {\n      setJotaiUserData(null);\n      setUserEmail('');\n      localStorage.removeItem('jotaiUserData');\n      queryClient.invalidateQueries(['users', userEmail]);\n    }\n  });\n\n  // 로그아웃 핸들러\n  const signOutHandler = async () => {\n    try {\n      setSocialUser(null);\n      setUser(null); // userData 초기화\n      setUserEmail('');\n      navigate('/');\n      setLoginModal(true);\n      await logoutMutation.mutateAsync();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // 이메일 로그인 토큰 생성 => jotaiUserData\n  useEffect(() => {\n    if (userData) {\n      const userDataString = JSON.stringify(userData);\n      localStorage.setItem('jotaiUserData', userDataString);\n      setJotaiUserData(userData);\n    }\n  }, [userData]);\n\n  // 소셜 로그인 토큰 생성 => jotaiUserData\n  useEffect(() => {\n    if (!(socialUser !== null && socialUser !== void 0 && socialUser.identities)) {\n      return;\n    } else if ((socialUser === null || socialUser === void 0 ? void 0 : socialUser.identities[0].provider) !== 'email') {\n      const tokenKey = localStorage.getItem('sb-bbakvkybkyfoiijevbec-auth-token');\n      const parsedToken = tokenKey ? JSON.parse(tokenKey) : null;\n      const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.user.id;\n      const userName = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.user.user_metadata.name;\n      const userEmail = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.user.email;\n      const userInsertData = {\n        uid: userId,\n        nickname: userName,\n        profileimg: 'neverdelete/461839d7-4ae5-4981-a29c-7793179d98ac.jpeg',\n        email: userEmail,\n        password: ''\n      };\n      const userDataString = JSON.stringify(userInsertData);\n      localStorage.setItem('jotaiUserData', userDataString);\n      setJotaiUserData(userInsertData);\n    }\n  }, [socialUser]);\n\n  // 생성한 토큰 가져와서 새로고침 방지\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('jotaiUserData');\n    if (storedUserData) {\n      const parsedUserData = JSON.parse(storedUserData);\n      setJotaiUserData(parsedUserData);\n    }\n  }, []);\n\n  // 현재 유저의 정보 가져오기!\n  const checkUser = async () => {\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser();\n    if (!(user !== null && user !== void 0 && user.identities)) {\n      return;\n    } else if ((user === null || user === void 0 ? void 0 : user.identities[0].provider) == 'github' || (user === null || user === void 0 ? void 0 : user.identities[0].provider) == 'google') {\n      setSocialUser(user);\n    }\n  };\n\n  // window.addEventListener('hashchange' =>브라우저의 URL 해시(예: # 뒤의 일부)가 변경될 때 발생!\n  // 의존성 배열을 빈 배열([])을 전달했기 때문에, 컴포넌트가 처음 렌더링될 때 한 번만 실행되며, 이후에는 의존성 변경 없이는 다시 실행되지 않음\n  useEffect(() => {\n    checkUser();\n    window.addEventListener('hashchange', function () {\n      checkUser();\n    });\n  }, []);\n\n  // 로그인 모달 오픈\n  const showModal = () => {\n    setLoginModal(true);\n  };\n\n  // 드롭박스 토글 버튼\n  const toggleLogoutButton = () => {\n    setShowLogoutButton(prevState => !prevState);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SL.LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uB3D9\\uC548 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  const handleSearch = keyword => {\n    // 검색 결과 처리 로직을 여기에 작성\n    console.log('Search keyword:', keyword);\n    // 예: 필터링된 데이터를 업데이트하거나 다른 처리 수행\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.HeaderContainer, {\n      children: [/*#__PURE__*/_jsxDEV(S.Logo, {\n        src: icon,\n        onClick: () => navigate('/')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [jotaiUserData ? /*#__PURE__*/_jsxDEV(S.ProfileWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: jotaiUserData ? /*#__PURE__*/_jsxDEV(S.ProfileBox, {\n              children: [/*#__PURE__*/_jsxDEV(S.ProfileImg, {\n                src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData.profileimg}`,\n                alt: \"Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(S.NickName, {\n                children: jotaiUserData.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, jotaiUserData.uid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.ButtonWrapper, {\n            children: /*#__PURE__*/_jsxDEV(S.ButtonBox, {\n              children: [/*#__PURE__*/_jsxDEV(S.ToggleButton, {\n                onClick: toggleLogoutButton,\n                children: \"\\u25BC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), showLogoutButton && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(S.LogOutButton, {\n                  onClick: signOutHandler,\n                  children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(S.LinkButton, {\n                  to: \"/mypage\",\n                  children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(S.PostLinkButton, {\n                  to: \"/post\",\n                  children: \"\\uAE00\\uC791\\uC131\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(S.LoginButton, {\n          onClick: showModal,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), loginModal && /*#__PURE__*/_jsxDEV(Login, {\n          setLoginModal: setLoginModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Line, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Header, \"3tES4+SYg4fEw7wKn92lZwmnP9k=\", false, function () {\n  return [useNavigate, useQueryClient, useAtom, useAtom, useAtom, useAtom, useQuery, useMutation];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","atom","useAtom","useMutation","useQuery","useQueryClient","Login","userAtom","userEmailAtom","getUserInfo","sigOutService","icon","S","supabase","sosialUserAtom","useNavigate","SL","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","jotaiUserDataAtom","Header","_s","navigate","queryClient","loginModal","setLoginModal","showLogoutButton","setShowLogoutButton","user","setUser","userEmail","setUserEmail","jotaiUserData","setJotaiUserData","socialUser","setSocialUser","console","log","isLoading","isError","data","userData","staleTime","enabled","logoutMutation","onSuccess","localStorage","removeItem","invalidateQueries","signOutHandler","mutateAsync","error","userDataString","JSON","stringify","setItem","identities","provider","tokenKey","getItem","parsedToken","parse","userId","id","userName","user_metadata","name","email","userInsertData","uid","nickname","profileimg","password","storedUserData","parsedUserData","checkUser","auth","getUser","window","addEventListener","showModal","toggleLogoutButton","prevState","LoadingOverlay","fileName","_jsxFileName","lineNumber","columnNumber","children","handleSearch","keyword","HeaderContainer","Logo","src","onClick","ProfileWrapper","ProfileBox","ProfileImg","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","NickName","ButtonWrapper","ButtonBox","ToggleButton","LogOutButton","LinkButton","to","PostLinkButton","LoginButton","Line","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/common/Header.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { atom, useAtom } from 'jotai';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport Login, { userAtom, userEmailAtom } from '../user/login/Login';\r\nimport { getUserInfo, sigOutService } from '../../services/supabase/auth';\r\nimport icon from '../../image/icon.png';\r\nimport * as S from './Styled.Header';\r\n\r\nimport type { UserType, UserTypes } from '../../types/supabase';\r\n\r\nimport { supabase } from '../../services/supabase/supabase';\r\nimport { sosialUserAtom } from '../user/social/SosialLogin';\r\nimport { useNavigate } from 'react-router';\r\nimport * as SL from '../common/Styled.Loading';\r\nimport Search from './Search';\r\n\r\nexport const jotaiUserDataAtom = atom<Omit<UserTypes, 'password'> | null>(null);\r\n\r\nconst Header = () => {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const [loginModal, setLoginModal] = useState(false);\r\n  const [showLogoutButton, setShowLogoutButton] = useState(false);\r\n\r\n  const [user, setUser] = useAtom(userAtom);\r\n  const [userEmail, setUserEmail] = useAtom(userEmailAtom);\r\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\r\n  const [socialUser, setSocialUser] = useAtom(sosialUserAtom);\r\n  console.log('user', user);\r\n  console.log('socialUser', socialUser);\r\n  // 유저 정보 조회하는 쿼리\r\n  const {\r\n    isLoading,\r\n    isError,\r\n    data: userData\r\n  } = useQuery<Omit<UserType, 'password'> | null>(['users', userEmail], () => getUserInfo(userEmail), {\r\n    staleTime: 300000,\r\n    enabled: userEmail !== null\r\n  });\r\n\r\n  // 로그아웃 뮤테이션\r\n  const logoutMutation = useMutation(() => sigOutService(), {\r\n    onSuccess: () => {\r\n      setJotaiUserData(null);\r\n      setUserEmail('');\r\n      localStorage.removeItem('jotaiUserData');\r\n      queryClient.invalidateQueries(['users', userEmail]);\r\n    }\r\n  });\r\n\r\n  // 로그아웃 핸들러\r\n  const signOutHandler = async () => {\r\n    try {\r\n      setSocialUser(null);\r\n      setUser(null); // userData 초기화\r\n      setUserEmail('');\r\n      navigate('/');\r\n      setLoginModal(true);\r\n      await logoutMutation.mutateAsync();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // 이메일 로그인 토큰 생성 => jotaiUserData\r\n  useEffect(() => {\r\n    if (userData) {\r\n      const userDataString = JSON.stringify(userData);\r\n      localStorage.setItem('jotaiUserData', userDataString);\r\n      setJotaiUserData(userData);\r\n    }\r\n  }, [userData]);\r\n\r\n  // 소셜 로그인 토큰 생성 => jotaiUserData\r\n  useEffect(() => {\r\n    if (!socialUser?.identities) {\r\n      return;\r\n    } else if (socialUser?.identities[0].provider !== 'email') {\r\n      const tokenKey = localStorage.getItem('sb-bbakvkybkyfoiijevbec-auth-token');\r\n      const parsedToken = tokenKey ? JSON.parse(tokenKey) : null;\r\n\r\n      const userId = parsedToken?.user.id;\r\n      const userName = parsedToken?.user.user_metadata.name;\r\n      const userEmail = parsedToken?.user.email;\r\n\r\n      const userInsertData = {\r\n        uid: userId,\r\n        nickname: userName,\r\n        profileimg: 'neverdelete/461839d7-4ae5-4981-a29c-7793179d98ac.jpeg',\r\n        email: userEmail,\r\n        password: ''\r\n      };\r\n      const userDataString = JSON.stringify(userInsertData);\r\n      localStorage.setItem('jotaiUserData', userDataString);\r\n      setJotaiUserData(userInsertData);\r\n    }\r\n  }, [socialUser]);\r\n\r\n  // 생성한 토큰 가져와서 새로고침 방지\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem('jotaiUserData');\r\n    if (storedUserData) {\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setJotaiUserData(parsedUserData);\r\n    }\r\n  }, []);\r\n\r\n  // 현재 유저의 정보 가져오기!\r\n  const checkUser = async () => {\r\n    const {\r\n      data: { user }\r\n    } = await supabase.auth.getUser();\r\n\r\n    if (!user?.identities) {\r\n      return;\r\n    } else if (user?.identities[0].provider == 'github' || user?.identities[0].provider == 'google') {\r\n      setSocialUser(user);\r\n    }\r\n  };\r\n\r\n  // window.addEventListener('hashchange' =>브라우저의 URL 해시(예: # 뒤의 일부)가 변경될 때 발생!\r\n  // 의존성 배열을 빈 배열([])을 전달했기 때문에, 컴포넌트가 처음 렌더링될 때 한 번만 실행되며, 이후에는 의존성 변경 없이는 다시 실행되지 않음\r\n  useEffect(() => {\r\n    checkUser();\r\n    window.addEventListener('hashchange', function () {\r\n      checkUser();\r\n    });\r\n  }, []);\r\n\r\n  // 로그인 모달 오픈\r\n  const showModal = () => {\r\n    setLoginModal(true);\r\n  };\r\n\r\n  // 드롭박스 토글 버튼\r\n  const toggleLogoutButton = () => {\r\n    setShowLogoutButton((prevState) => !prevState);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <SL.LoadingOverlay />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div>데이터를 불러오는 동안 오류가 발생했습니다</div>;\r\n  }\r\n\r\n  const handleSearch = (keyword: string) => {\r\n    // 검색 결과 처리 로직을 여기에 작성\r\n    console.log('Search keyword:', keyword);\r\n    // 예: 필터링된 데이터를 업데이트하거나 다른 처리 수행\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.HeaderContainer>\r\n        <S.Logo src={icon} onClick={() => navigate('/')} />\r\n        <Search handleSearch={handleSearch} /> {/* handleSearch 함수 전달 */}\r\n        <div>\r\n          {jotaiUserData ? (\r\n            <S.ProfileWrapper>\r\n              <div>\r\n                {jotaiUserData ? (\r\n                  <S.ProfileBox key={jotaiUserData.uid}>\r\n                    <S.ProfileImg\r\n                      src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData.profileimg}`}\r\n                      alt=\"Profile\"\r\n                    />\r\n                    <S.NickName>{jotaiUserData.nickname}</S.NickName>\r\n                  </S.ProfileBox>\r\n                ) : null}\r\n              </div>\r\n              <S.ButtonWrapper>\r\n                <S.ButtonBox>\r\n                  <S.ToggleButton onClick={toggleLogoutButton}>▼</S.ToggleButton>\r\n                  {showLogoutButton && (\r\n                    <>\r\n                      <S.LogOutButton onClick={signOutHandler}>로그아웃</S.LogOutButton>\r\n                      <S.LinkButton to=\"/mypage\">마이페이지</S.LinkButton>\r\n                      <S.PostLinkButton to=\"/post\">글작성</S.PostLinkButton>\r\n                    </>\r\n                  )}\r\n                </S.ButtonBox>\r\n              </S.ButtonWrapper>\r\n            </S.ProfileWrapper>\r\n          ) : (\r\n            <S.LoginButton onClick={showModal}>Login</S.LoginButton>\r\n          )}\r\n\r\n          {loginModal && <Login setLoginModal={setLoginModal} />}\r\n        </div>\r\n      </S.HeaderContainer>\r\n      <S.Line></S.Line>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}