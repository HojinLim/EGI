{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\Post.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport Editor from '../editor/Editor';\nimport { v4 as uuidv4 } from 'uuid';\nimport { supabase } from '../../services/supabase/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const navigate = useNavigate();\n  const [newTitle, setNewTitle] = useState('');\n  const [newbody, setNewBody] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleAddPost = async () => {\n    if (!newTitle.trim() || !newbody.trim()) {\n      alert('제목과 본문을 모두 입력해주세요.');\n      return;\n    }\n    if (selectedImage) {\n      const {\n        data,\n        error\n      } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\n      if (error) {\n        console.error('Error uploading image to Supabase storage:', error);\n        alert('이미지 업로드 중 에러가 발생했습니다!');\n        return;\n      }\n      const imageUrl = data.path;\n      const {\n        error: insertError\n      } = await supabase.from('posts').insert([{\n        title: newTitle,\n        body: newbody,\n        image_url: imageUrl\n      }]);\n      if (insertError) {\n        console.error('Error adding post:', insertError);\n        alert('에러가 발생했습니다!');\n        return;\n      }\n    }\n    setNewTitle('');\n    setNewBody('');\n    setSelectedImage(null);\n    alert('글 작성이 완료되었습니다.');\n    navigate(`/`);\n  };\n  const handleImageChange = e => {\n    const selectedFile = e.target.files && e.target.files[0];\n    if (selectedFile) {\n      const originalFileName = selectedFile.name;\n      const fileExtension = originalFileName.split('.').pop();\n      const randomFileName = uuidv4() + '.' + fileExtension;\n      setSelectedImage(new File([selectedFile], randomFileName));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: newbody,\n        onChange: content => setNewBody(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"mH24LCgRPJBjfLblTVbdEPjfg4s=\", false, function () {\n  return [useNavigate];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useNavigate","useState","Editor","v4","uuidv4","supabase","jsxDEV","_jsxDEV","Posts","_s","navigate","newTitle","setNewTitle","newbody","setNewBody","selectedImage","setSelectedImage","handleAddPost","trim","alert","data","error","storage","from","upload","name","console","imageUrl","path","insertError","insert","title","body","image_url","handleImageChange","e","selectedFile","target","files","originalFileName","fileExtension","split","pop","randomFileName","File","children","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","content","accept","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/Post.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Editor from '../editor/Editor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { Post } from '../../types/supabase';\r\nimport { supabase } from '../../services/supabase/supabase';\r\n\r\nconst Posts = () => {\r\n  const navigate = useNavigate();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newbody, setNewBody] = useState('');\r\n  const [selectedImage, setSelectedImage] = useState<File | null>(null);\r\n\r\n  const handleAddPost = async () => {\r\n    if (!newTitle.trim() || !newbody.trim()) {\r\n      alert('제목과 본문을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    if (selectedImage) {\r\n      const { data, error } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\r\n\r\n      if (error) {\r\n        console.error('Error uploading image to Supabase storage:', error);\r\n        alert('이미지 업로드 중 에러가 발생했습니다!');\r\n        return;\r\n      }\r\n\r\n      const imageUrl = data.path;\r\n\r\n      const { error: insertError } = await supabase\r\n        .from('posts')\r\n        .insert([{ title: newTitle, body: newbody, image_url: imageUrl }]);\r\n      if (insertError) {\r\n        console.error('Error adding post:', insertError);\r\n        alert('에러가 발생했습니다!');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setNewTitle('');\r\n    setNewBody('');\r\n    setSelectedImage(null);\r\n    alert('글 작성이 완료되었습니다.');\r\n    navigate(`/`);\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFile = e.target.files && e.target.files[0];\r\n    if (selectedFile) {\r\n      const originalFileName = selectedFile.name;\r\n      const fileExtension = originalFileName.split('.').pop();\r\n      const randomFileName = uuidv4() + '.' + fileExtension;\r\n      setSelectedImage(new File([selectedFile], randomFileName));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n        <Editor value={newbody} onChange={(content) => setNewBody(content)} />\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n        <button onClick={handleAddPost}>글 작성하기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}