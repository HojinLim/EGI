{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\user\\\\login\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { atom, useAtom } from 'jotai';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport SignUp from '../signUp/SignUp';\nimport { loginService } from '../../../services/supabase/auth';\nimport * as S from './Styled.Login';\nimport PasswordReset from './PasswordReset';\nimport SosialLogin from '../social/SosialLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const userAtom = atom(null);\nexport const signUpModalAtom = atom(false);\nexport const userEmailAtom = atom('');\nconst Login = ({\n  setLoginModal\n}) => {\n  _s();\n  // 초기 UserData\n  const initialUserData = {\n    uid: '',\n    email: '',\n    password: '',\n    profileimg: null\n  };\n  const queryClient = useQueryClient();\n  const [user, setUser] = useAtom(userAtom);\n  const [userEmail, setUserEmail] = useAtom(userEmailAtom);\n  const [userData, setUserData] = useState({\n    uid: '',\n    email: '',\n    password: '',\n    profileimg: null\n  });\n\n  // 로그인 뮤테이션\n  const loginMutation = useMutation(loginService, {\n    onSuccess: response => {\n      setUser(userData);\n      console.log(userData);\n      setLoginModal(false);\n      if (response) {\n        setUserEmail(userData.email);\n      }\n      queryClient.invalidateQueries({\n        queryKey: ['users']\n      });\n    }\n  });\n\n  // 로그인 핸들러\n  const loginHandler = async e => {\n    e.preventDefault();\n    if (!userData.email || !userData.password) {\n      alert('이메일과 비밀번호를 입력해주세요.');\n      return;\n    }\n    try {\n      const response = await loginMutation.mutateAsync(userData);\n      if (!response) {\n        alert('이메일 또는 비밀번호가 올바르지 않습니다.');\n        return;\n      } else {\n        setLoginModal(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const [signUpModal, setSignUpModal] = useAtom(signUpModalAtom);\n\n  // 회원가입 모달 열기\n  const showSignUpModal = () => {\n    setSignUpModal(true);\n  };\n  // 로그인 모달 닫기\n  const closeLoginModal = () => {\n    setLoginModal(false);\n    setUserData(initialUserData);\n  };\n\n  // email onchange 핸들러\n  const emailInputChangeHandler = e => {\n    setUserData({\n      ...userData,\n      email: e.target.value\n    });\n  };\n\n  // password onchange 핸들러\n  const passwordInputChangeHandler = e => {\n    setUserData({\n      ...userData,\n      password: e.target.value\n    });\n  };\n  console.log(user);\n  console.log(userEmail);\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.CloseBtn, {\n      onClick: closeLoginModal,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.Title, {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Line1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(S.FormBox, {\n          onSubmit: loginHandler,\n          children: [/*#__PURE__*/_jsxDEV(S.EmailBox, {\n            type: \"text\",\n            value: userData.email,\n            onChange: emailInputChangeHandler,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.PasswordBox, {\n            type: \"password\",\n            value: userData.password,\n            onChange: passwordInputChangeHandler,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.LoginBtn, {\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.ModalBox, {\n          children: [/*#__PURE__*/_jsxDEV(S.SignUpBtn, {\n            onClick: showSignUpModal,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), signUpModal && /*#__PURE__*/_jsxDEV(SignUp, {\n            setSignUpmodal: setSignUpModal,\n            setLoginModal: setLoginModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PasswordReset, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SosialLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"3SevM3AgQ9gcuttfqZRf9b6wrtY=\", false, function () {\n  return [useQueryClient, useAtom, useAtom, useMutation, useAtom];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","atom","useAtom","useMutation","useQueryClient","SignUp","loginService","S","PasswordReset","SosialLogin","jsxDEV","_jsxDEV","userAtom","signUpModalAtom","userEmailAtom","Login","setLoginModal","_s","initialUserData","uid","email","password","profileimg","queryClient","user","setUser","userEmail","setUserEmail","userData","setUserData","loginMutation","onSuccess","response","console","log","invalidateQueries","queryKey","loginHandler","e","preventDefault","alert","mutateAsync","error","signUpModal","setSignUpModal","showSignUpModal","closeLoginModal","emailInputChangeHandler","target","value","passwordInputChangeHandler","Container","children","CloseBtn","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Wrapper","Title","Line1","InputContainer","FormBox","onSubmit","EmailBox","type","onChange","placeholder","PasswordBox","LoginBtn","ModalBox","SignUpBtn","setSignUpmodal","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/user/login/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { atom, useAtom } from 'jotai';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport SignUp from '../signUp/SignUp';\r\nimport { loginService } from '../../../services/supabase/auth';\r\nimport * as S from './Styled.Login';\r\n\r\nimport type { UserType } from '../../../types/supabase';\r\nimport PasswordReset from './PasswordReset';\r\nimport SosialLogin from '../social/SosialLogin';\r\n\r\ntype LoginType = {\r\n  setLoginModal: (isOpen: boolean) => void;\r\n};\r\nexport const userAtom = atom<Omit<UserType, 'nickname'> | null>(null);\r\nexport const signUpModalAtom = atom<boolean>(false);\r\nexport const userEmailAtom = atom('');\r\n\r\nconst Login = ({ setLoginModal }: LoginType) => {\r\n  // 초기 UserData\r\n  const initialUserData = {\r\n    uid: '',\r\n    email: '',\r\n    password: '',\r\n    profileimg: null\r\n  };\r\n  const queryClient = useQueryClient();\r\n\r\n  const [user, setUser] = useAtom(userAtom);\r\n  const [userEmail, setUserEmail] = useAtom(userEmailAtom);\r\n  const [userData, setUserData] = useState<Omit<UserType, 'nickname'>>({\r\n    uid: '',\r\n    email: '',\r\n    password: '',\r\n    profileimg: null\r\n  });\r\n\r\n  // 로그인 뮤테이션\r\n  const loginMutation = useMutation(loginService, {\r\n    onSuccess: (response) => {\r\n      setUser(userData);\r\n      console.log(userData);\r\n      setLoginModal(false);\r\n      if (response) {\r\n        setUserEmail(userData.email);\r\n      }\r\n      queryClient.invalidateQueries({ queryKey: ['users'] });\r\n    }\r\n  });\r\n\r\n  // 로그인 핸들러\r\n  const loginHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!userData.email || !userData.password) {\r\n      alert('이메일과 비밀번호를 입력해주세요.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await loginMutation.mutateAsync(userData);\r\n      if (!response) {\r\n        alert('이메일 또는 비밀번호가 올바르지 않습니다.');\r\n        return;\r\n      } else {\r\n        setLoginModal(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const [signUpModal, setSignUpModal] = useAtom(signUpModalAtom);\r\n\r\n  // 회원가입 모달 열기\r\n  const showSignUpModal = () => {\r\n    setSignUpModal(true);\r\n  };\r\n  // 로그인 모달 닫기\r\n  const closeLoginModal = () => {\r\n    setLoginModal(false);\r\n    setUserData(initialUserData);\r\n  };\r\n\r\n  // email onchange 핸들러\r\n  const emailInputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, email: e.target.value });\r\n  };\r\n\r\n  // password onchange 핸들러\r\n  const passwordInputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, password: e.target.value });\r\n  };\r\n\r\n  console.log(user);\r\n  console.log(userEmail);\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.CloseBtn onClick={closeLoginModal}>x</S.CloseBtn>\r\n      <S.Wrapper>\r\n        <S.Title>로그인</S.Title>\r\n        <S.Line1></S.Line1>\r\n        <S.InputContainer>\r\n          <S.FormBox onSubmit={loginHandler}>\r\n            <S.EmailBox type=\"text\" value={userData.email} onChange={emailInputChangeHandler} placeholder=\"Email\" />\r\n            <S.PasswordBox\r\n              type=\"password\"\r\n              value={userData.password}\r\n              onChange={passwordInputChangeHandler}\r\n              placeholder=\"Password\"\r\n            />\r\n            <S.LoginBtn>로그인</S.LoginBtn>\r\n          </S.FormBox>\r\n          <S.ModalBox>\r\n            <S.SignUpBtn onClick={showSignUpModal}>회원가입</S.SignUpBtn>\r\n            {signUpModal && <SignUp setSignUpmodal={setSignUpModal} setLoginModal={setLoginModal} />}\r\n            <PasswordReset />\r\n          </S.ModalBox>\r\n          <SosialLogin />\r\n        </S.InputContainer>\r\n      </S.Wrapper>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}