{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\Post.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport Editor from '../editor/Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst Post = () => {\n  _s();\n  const navigate = useNavigate();\n  const [newTitle, setNewTitle] = useState('');\n  const [newbody, setNewBody] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleAddPost = async () => {\n    if (!newTitle.trim() || !newbody.trim()) {\n      alert('제목과 본문을 모두 입력해주세요.');\n      return;\n    }\n    if (selectedImage) {\n      const formData = new FormData();\n      formData.append('file', selectedImage);\n      formData.append('upload_preset', 'your-cloudinary-upload-preset'); // Cloudinary의 업로드 프리셋 설정\n\n      const response = await fetch('https://api.cloudinary.com/v1_1/your-cloudinary-cloud-name/image/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        console.error('Error uploading image to Cloudinary.');\n        alert('이미지 업로드 중 에러가 발생했습니다!');\n        return;\n      }\n      const imageUploadResult = await response.json();\n      const imageUrl = imageUploadResult.secure_url;\n      const {\n        error\n      } = await supabase.from('posts').insert([{\n        title: newTitle,\n        body: newbody,\n        image_url: imageUrl\n      }]);\n      if (error) {\n        console.error('Error adding post:', error);\n        alert('에러가 발생했습니다!');\n        return;\n      }\n    }\n    setNewTitle('');\n    setNewBody('');\n    setSelectedImage(null);\n    alert('글 작성이 완료되었습니다.');\n    navigate(`/`);\n  };\n  const handleImageChange = e => {\n    const selectedFile = e.target.files && e.target.files[0];\n    if (selectedFile) {\n      setSelectedImage(selectedFile);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: newbody,\n        onChange: content => setNewBody(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"mH24LCgRPJBjfLblTVbdEPjfg4s=\", false, function () {\n  return [useNavigate];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","createClient","useNavigate","useState","Editor","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_KEY","supabase","Post","_s","navigate","newTitle","setNewTitle","newbody","setNewBody","selectedImage","setSelectedImage","handleAddPost","trim","alert","formData","FormData","append","response","fetch","method","body","ok","console","error","imageUploadResult","json","imageUrl","secure_url","from","insert","title","image_url","handleImageChange","e","selectedFile","target","files","children","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","content","accept","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/Post.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Editor from '../editor/Editor';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY as string;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\ninterface Post {\r\n  pid: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nconst Post = () => {\r\n  const navigate = useNavigate();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newbody, setNewBody] = useState('');\r\n  const [selectedImage, setSelectedImage] = useState<File | null>(null);\r\n\r\n  const handleAddPost = async () => {\r\n    if (!newTitle.trim() || !newbody.trim()) {\r\n      alert('제목과 본문을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    if (selectedImage) {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedImage);\r\n      formData.append('upload_preset', 'your-cloudinary-upload-preset'); // Cloudinary의 업로드 프리셋 설정\r\n\r\n      const response = await fetch('https://api.cloudinary.com/v1_1/your-cloudinary-cloud-name/image/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error('Error uploading image to Cloudinary.');\r\n        alert('이미지 업로드 중 에러가 발생했습니다!');\r\n        return;\r\n      }\r\n\r\n      const imageUploadResult = await response.json();\r\n      const imageUrl = imageUploadResult.secure_url;\r\n\r\n      const { error } = await supabase.from('posts').insert([{ title: newTitle, body: newbody, image_url: imageUrl }]);\r\n      if (error) {\r\n        console.error('Error adding post:', error);\r\n        alert('에러가 발생했습니다!');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setNewTitle('');\r\n    setNewBody('');\r\n    setSelectedImage(null);\r\n    alert('글 작성이 완료되었습니다.');\r\n    navigate(`/`);\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFile = e.target.files && e.target.files[0];\r\n    if (selectedFile) {\r\n      setSelectedImage(selectedFile);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n        <Editor value={newbody} onChange={(content) => setNewBody(content)} />\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <button onClick={handleAddPost}>글 작성하기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}