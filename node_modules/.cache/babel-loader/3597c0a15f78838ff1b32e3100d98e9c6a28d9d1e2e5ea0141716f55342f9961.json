{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\main\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useAtom } from 'jotai';\nimport * as S from './Styled.Main';\nimport { supabase } from '../../services/supabase/supabase';\nimport { filterdcategories } from '../category/Category';\nimport { searchKeywordAtom } from '../common/Search';\nimport { getIconComponet } from './MuiBtn';\n\n// MUI- Material Icons\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [searchKeyword] = useAtom(searchKeywordAtom);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('posts').select('*');\n      if (error) {\n        console.error('Error fetching posts:', error);\n      } else {\n        const postsWithCompleteURLs = data.map(post => ({\n          ...post,\n          image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\n        }));\n        setPosts(postsWithCompleteURLs);\n        setFilteredPosts(postsWithCompleteURLs);\n      }\n    };\n    console.log('과연 서버사이드?');\n    fetchPosts();\n  }, []);\n  const handleCategoryClick = category => {\n    if (category === '전체') {\n      setFilteredPosts(posts);\n    } else {\n      const filteredPosts = posts.filter(post => post.category === category);\n      setFilteredPosts(filteredPosts);\n    }\n  };\n  useEffect(() => {\n    const handleSearch = () => {\n      if (searchKeyword.trim() === '' || searchKeyword === '') {\n        setFilteredPosts(posts);\n      } else {\n        const keywordLower = searchKeyword.toLowerCase();\n        const filtered = posts.filter(post => post.title.toLowerCase().includes(keywordLower) || post.location.toLowerCase().includes(keywordLower));\n        setFilteredPosts(filtered);\n      }\n    };\n    const handleKeyDown = event => {\n      if (event.key === 'Enter') {\n        handleSearch();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [searchKeyword]);\n  const categoryButtons = filterdcategories.map(category => {\n    const IconComponent = getIconComponet(category.value); // 이 부분에 오타 수정\n    return /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        padding: '20px',\n        fontSize: '18px',\n        border: '2px solid #0056b3'\n      },\n      value: category.value,\n      onClick: () => handleCategoryClick(category.value),\n      variant: \"outlined\",\n      startIcon: /*#__PURE__*/_jsxDEV(IconComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this),\n      children: category.label\n    }, category.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  });\n  const pagePerObjects = 8;\n  const totalCount = filteredPosts.length;\n  const totalPages = Math.ceil(totalCount / pagePerObjects);\n  const [currentPage, setCurrentPage] = useState(1);\n  const handlePreviousPage = () => {\n    setCurrentPage(currentPage - 1);\n  };\n  const handleNextPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  const handlePageClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const startIdx = (currentPage - 1) * pagePerObjects;\n  const endIdx = Math.min(startIdx + pagePerObjects, totalCount);\n  const paginatedData = filteredPosts.slice(startIdx, endIdx);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.ButtonGrid, {\n      children: categoryButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.PostContainer, {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/post/${post.pid}`,\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        children: /*#__PURE__*/_jsxDEV(S.PostItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.image_urls.length > 0 && /*#__PURE__*/_jsxDEV(S.Image, {\n              src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `,\n              alt: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, post.pid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.EndMessage, {\n      children: \"\\uB354 \\uC774\\uC0C1\\uC758 \\uAC8C\\uC2DC\\uBB3C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"FKEiWDUGDLBJXA7lXM8qGgvqzK0=\", false, function () {\n  return [useAtom];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","NavLink","useAtom","S","supabase","filterdcategories","searchKeywordAtom","getIconComponet","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","posts","setPosts","filteredPosts","setFilteredPosts","searchKeyword","fetchPosts","data","error","from","select","console","postsWithCompleteURLs","map","post","image_urls","replace","split","log","handleCategoryClick","category","filter","handleSearch","trim","keywordLower","toLowerCase","filtered","title","includes","location","handleKeyDown","event","key","window","addEventListener","removeEventListener","categoryButtons","IconComponent","value","style","padding","fontSize","border","onClick","variant","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","children","label","pagePerObjects","totalCount","length","totalPages","Math","ceil","currentPage","setCurrentPage","handlePreviousPage","handleNextPage","handlePageClick","pageNumber","startIdx","endIdx","min","paginatedData","slice","ButtonGrid","PostContainer","to","pid","textDecoration","color","PostItem","Image","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","EndMessage","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/main/Main.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useAtom } from 'jotai';\r\n\r\nimport * as S from './Styled.Main';\r\nimport { Post } from '../../types/supabase';\r\nimport { supabase } from '../../services/supabase/supabase';\r\nimport { filterdcategories } from '../category/Category';\r\nimport { searchKeywordAtom } from '../common/Search';\r\nimport { getIconComponet } from './MuiBtn';\r\n\r\n// MUI- Material Icons\r\nimport Button from '@mui/material/Button';\r\n\r\nexport const Main = () => {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\r\n  const [searchKeyword] = useAtom(searchKeywordAtom);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const { data, error } = await supabase.from('posts').select('*');\r\n\r\n      if (error) {\r\n        console.error('Error fetching posts:', error);\r\n      } else {\r\n        const postsWithCompleteURLs = data.map((post) => ({\r\n          ...post,\r\n          image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\r\n        }));\r\n\r\n        setPosts(postsWithCompleteURLs);\r\n        setFilteredPosts(postsWithCompleteURLs);\r\n      }\r\n    };\r\n    console.log('과연 서버사이드?');\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    if (category === '전체') {\r\n      setFilteredPosts(posts);\r\n    } else {\r\n      const filteredPosts = posts.filter((post) => post.category === category);\r\n      setFilteredPosts(filteredPosts);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleSearch = () => {\r\n      if (searchKeyword.trim() === '' || searchKeyword === '') {\r\n        setFilteredPosts(posts);\r\n      } else {\r\n        const keywordLower = searchKeyword.toLowerCase();\r\n        const filtered = posts.filter(\r\n          (post) =>\r\n            post.title.toLowerCase().includes(keywordLower) || post.location.toLowerCase().includes(keywordLower)\r\n        );\r\n        setFilteredPosts(filtered);\r\n      }\r\n    };\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'Enter') {\r\n        handleSearch();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [searchKeyword]);\r\n\r\n  const categoryButtons = filterdcategories.map((category) => {\r\n    const IconComponent = getIconComponet(category.value); // 이 부분에 오타 수정\r\n    return (\r\n      <Button\r\n        style={{ padding: '20px', fontSize: '18px', border: '2px solid #0056b3' }}\r\n        key={category.value}\r\n        value={category.value}\r\n        onClick={() => handleCategoryClick(category.value)}\r\n        variant=\"outlined\"\r\n        startIcon={<IconComponent />}\r\n      >\r\n        {category.label}\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  const pagePerObjects = 8;\r\n\r\n  const totalCount = filteredPosts.length;\r\n  const totalPages = Math.ceil(totalCount / pagePerObjects);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const handlePreviousPage = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const handlePageClick = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const startIdx = (currentPage - 1) * pagePerObjects;\r\n  const endIdx = Math.min(startIdx + pagePerObjects, totalCount);\r\n  const paginatedData = filteredPosts.slice(startIdx, endIdx);\r\n\r\n  return (\r\n    <>\r\n      <S.ButtonGrid>{categoryButtons}</S.ButtonGrid>\r\n\r\n      <S.PostContainer>\r\n        {filteredPosts.map((post) => (\r\n          <NavLink to={`/post/${post.pid}`} key={post.pid} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n            <S.PostItem>\r\n              <h2>{post.title}</h2>\r\n              <div>\r\n                {post.image_urls.length > 0 && (\r\n                  <S.Image\r\n                    src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `}\r\n                    alt={post.title}\r\n                  />\r\n                )}\r\n              </div>\r\n            </S.PostItem>\r\n          </NavLink>\r\n        ))}\r\n      </S.PostContainer>\r\n      <S.EndMessage>더 이상의 게시물이 없습니다.</S.EndMessage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}