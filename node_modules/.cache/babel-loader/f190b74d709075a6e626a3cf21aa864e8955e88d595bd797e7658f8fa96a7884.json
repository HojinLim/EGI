{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\user\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { atom, useAtom } from 'jotai';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport SignUp from './SignUp';\nimport { loginService } from '../../services/supabase/auth';\nimport * as S from './Styled.Login';\n\n// import { supabase } from '../../services/supabase';\n// import ResetPasswordModal from './ResetPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const userAtom = atom(null);\nexport const signUpModalAtom = atom(false);\nexport const userEmailAtom = atom('');\nconst Login = ({\n  setLoginModal\n}) => {\n  _s();\n  const queryClient = useQueryClient();\n  const [, setUserEmail] = useAtom(userEmailAtom);\n  const [, setUser] = useAtom(userAtom);\n  const [signUpModal, setSignUpModal] = useAtom(signUpModalAtom);\n  const [userData, setUserData] = useState({\n    uid: '',\n    email: '',\n    password: '',\n    profileimg: null\n  });\n  const initialUserData = {\n    uid: '',\n    email: '',\n    password: '',\n    profileimg: null\n  };\n  // 회원가입 모달 열기\n  const showSignUpModal = () => {\n    setSignUpModal(true);\n  };\n  // 로그인 모달 닫기\n  const closeLoginModal = () => {\n    setLoginModal(false);\n    setUserData(initialUserData);\n  };\n  const loginMutation = useMutation(loginService, {\n    onSuccess: () => {\n      setUser(userData);\n      console.log(userData);\n      setLoginModal(false);\n      setUserEmail(userData.email);\n      queryClient.invalidateQueries({\n        queryKey: ['users']\n      });\n    }\n  });\n  const loginHandler = async e => {\n    e.preventDefault();\n    if (!userData.email || !userData.password) {\n      alert('이메일과 비밀번호를 입력해주세요.');\n      return;\n    }\n    try {\n      const response = await loginMutation.mutateAsync(userData);\n      if (!response) {\n        alert('이메일 또는 비밀번호가 올바르지 않습니다.');\n        setLoginModal(true);\n      } else {\n        setLoginModal(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const emailInputChangeHandler = e => {\n    setUserData({\n      ...userData,\n      email: e.target.value\n    });\n  };\n  const passwordInputChangeHandler = e => {\n    setUserData({\n      ...userData,\n      password: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.CloseBtn, {\n      onClick: closeLoginModal,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(S.FormBox, {\n          onSubmit: loginHandler,\n          children: [/*#__PURE__*/_jsxDEV(S.EmailBox, {\n            type: \"text\",\n            value: userData.email,\n            onChange: emailInputChangeHandler,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.PasswordBox, {\n            type: \"password\",\n            value: userData.password,\n            onChange: passwordInputChangeHandler,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.LoginBtn, {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.SignUpBtn, {\n        onClick: showSignUpModal,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), signUpModal && /*#__PURE__*/_jsxDEV(SignUp, {\n        setSignUpmodal: setSignUpModal,\n        setLoginModal: setLoginModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"R8L9cBSXnqBaBRPbg27L/QTjfhA=\", false, function () {\n  return [useQueryClient, useAtom, useAtom, useAtom, useMutation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","atom","useAtom","useMutation","useQueryClient","SignUp","loginService","S","jsxDEV","_jsxDEV","userAtom","signUpModalAtom","userEmailAtom","Login","setLoginModal","_s","queryClient","setUserEmail","setUser","signUpModal","setSignUpModal","userData","setUserData","uid","email","password","profileimg","initialUserData","showSignUpModal","closeLoginModal","loginMutation","onSuccess","console","log","invalidateQueries","queryKey","loginHandler","e","preventDefault","alert","response","mutateAsync","error","emailInputChangeHandler","target","value","passwordInputChangeHandler","Container","children","CloseBtn","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Wrapper","InputContainer","FormBox","onSubmit","EmailBox","type","onChange","placeholder","PasswordBox","LoginBtn","SignUpBtn","setSignUpmodal","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/user/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { atom, useAtom } from 'jotai';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport SignUp from './SignUp';\r\nimport { loginService } from '../../services/supabase/auth';\r\nimport * as S from './Styled.Login';\r\n\r\nimport type { UserType } from '../../types/supabase';\r\n// import { supabase } from '../../services/supabase';\r\n// import ResetPasswordModal from './ResetPassword';\r\n\r\ntype LoginType = {\r\n  setLoginModal: (isOpen: boolean) => void;\r\n};\r\n\r\nexport const userAtom = atom<Omit<UserType, 'nickname'> | null>(null);\r\nexport const signUpModalAtom = atom<boolean>(false);\r\nexport const userEmailAtom = atom('');\r\n\r\nconst Login = ({ setLoginModal }: LoginType) => {\r\n  const queryClient = useQueryClient();\r\n  const [, setUserEmail] = useAtom(userEmailAtom);\r\n  const [, setUser] = useAtom(userAtom);\r\n  const [signUpModal, setSignUpModal] = useAtom(signUpModalAtom);\r\n  const [userData, setUserData] = useState<Omit<UserType, 'nickname'>>({\r\n    uid: '',\r\n    email: '',\r\n    password: '',\r\n    profileimg: null\r\n  });\r\n\r\n  const initialUserData = {\r\n    uid: '',\r\n    email: '',\r\n    password: '',\r\n    profileimg: null\r\n  };\r\n  // 회원가입 모달 열기\r\n  const showSignUpModal = () => {\r\n    setSignUpModal(true);\r\n  };\r\n  // 로그인 모달 닫기\r\n  const closeLoginModal = () => {\r\n    setLoginModal(false);\r\n    setUserData(initialUserData);\r\n  };\r\n\r\n  const loginMutation = useMutation(loginService, {\r\n    onSuccess: () => {\r\n      setUser(userData);\r\n      console.log(userData);\r\n      setLoginModal(false);\r\n      setUserEmail(userData.email);\r\n      queryClient.invalidateQueries({ queryKey: ['users'] });\r\n    }\r\n  });\r\n\r\n  const loginHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!userData.email || !userData.password) {\r\n      alert('이메일과 비밀번호를 입력해주세요.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await loginMutation.mutateAsync(userData);\r\n      if (!response) {\r\n        alert('이메일 또는 비밀번호가 올바르지 않습니다.');\r\n        setLoginModal(true);\r\n      } else {\r\n        setLoginModal(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const emailInputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, email: e.target.value });\r\n  };\r\n\r\n  const passwordInputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, password: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.CloseBtn onClick={closeLoginModal}>x</S.CloseBtn>\r\n      <S.Wrapper>\r\n        <S.InputContainer>\r\n          <S.FormBox onSubmit={loginHandler}>\r\n            <S.EmailBox type=\"text\" value={userData.email} onChange={emailInputChangeHandler} placeholder=\"Email\" />\r\n            <S.PasswordBox\r\n              type=\"password\"\r\n              value={userData.password}\r\n              onChange={passwordInputChangeHandler}\r\n              placeholder=\"Password\"\r\n            />\r\n            <S.LoginBtn>Login</S.LoginBtn>\r\n          </S.FormBox>\r\n        </S.InputContainer>\r\n        {/* <button onClick={resetPasswordHandler}> 비밀번호 찾기</button>\r\n        {resetPasswordModal && (\r\n          <ResetPasswordModal closeResetPasswordModal={() => setResetPasswordModal(false)} email={email} />\r\n        )} */}\r\n        <S.SignUpBtn onClick={showSignUpModal}>회원가입</S.SignUpBtn>\r\n        {signUpModal && <SignUp setSignUpmodal={setSignUpModal} setLoginModal={setLoginModal} />}\r\n      </S.Wrapper>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}