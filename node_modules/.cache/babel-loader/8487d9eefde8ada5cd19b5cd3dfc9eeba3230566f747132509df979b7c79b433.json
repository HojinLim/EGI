{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\pages\\\\Mypage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jotaiUserDataAtom } from '../components/common/Header';\nimport { useAtom } from 'jotai';\nimport { supabase } from '../services/supabase/supabase';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { handleImageChange } from '../components/posts/HandleImage';\nimport UserPosts, { myPostLegthAtom } from '../components/mypage/UserPosts';\nimport * as S from '../pages/Styled.Mypage';\nimport * as L from '../components/common/Styled.Loading';\nimport { userAtom, userEmailAtom } from '../components/user/login/Login';\nimport { sosialUserAtom } from '../components/user/social/SosialLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mypage = () => {\n  _s();\n  const [user] = useAtom(userAtom);\n  const [editnickname, setEditNickName] = useState('');\n  const [selectedImages, setSelectedImages] = useState([]);\n  const queryClient = useQueryClient();\n  const [userEmail] = useAtom(userEmailAtom);\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\n  const [isEditing, setIsEditing] = useState(false);\n  const [socialUser] = useAtom(sosialUserAtom);\n  const [myPostLegth] = useAtom(myPostLegthAtom);\n\n  // 생성한 토큰 가져와서 새로고침 방지\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('jotaiUserData');\n    if (storedUserData) {\n      const parsedUserData = JSON.parse(storedUserData);\n      setJotaiUserData(parsedUserData);\n      queryClient.invalidateQueries(['users', userEmail]);\n    }\n  }, []);\n\n  // 프로필 수정 => 저장\n  const handleEdit = async () => {\n    let profileimg = null;\n    if (jotaiUserData !== null && jotaiUserData !== void 0 && jotaiUserData.profileimg && Array.isArray(jotaiUserData.profileimg)) {\n      profileimg = jotaiUserData.profileimg.join(';');\n    }\n    if (selectedImages.length > 0) {\n      const newImageUrls = [];\n      for (const selectedImage of selectedImages) {\n        const {\n          data,\n          error\n        } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\n        if (error) {\n          console.error('Error uploading image to Supabase storage:', error);\n          alert('이미지 업로드 중 에러가 발생했습니다!');\n          return;\n        }\n        newImageUrls.push(data.path);\n      }\n      if (profileimg === null) {\n        profileimg = newImageUrls.join(';');\n      } else {\n        profileimg += ';' + newImageUrls.join(';');\n      }\n    }\n    if (editnickname) {\n      const {\n        error\n      } = await supabase.from('users').update({\n        nickname: editnickname,\n        profileimg: profileimg || (jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.profileimg)\n      }).eq('uid', jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.uid);\n      if (error) {\n        console.error('Error editing post:', error);\n        alert('에러가 발생했습니다!');\n      } else {\n        alert('수정이 완료되었습니다.');\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('users').select().eq('uid', jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.uid).single();\n        if (fetchError) {\n          console.error('Error fetching updated user data:', fetchError);\n        } else {\n          localStorage.setItem('jotaiUserData', JSON.stringify(data));\n          setJotaiUserData(data);\n        }\n        setEditNickName('');\n        setSelectedImages([]);\n        setIsEditing(false);\n      }\n    }\n  };\n  const handleImageChangeWrapper = e => {\n    const selectedFiles = e.target.files;\n    if (selectedFiles) {\n      const updatedSelectedImages = handleImageChange(selectedFiles);\n      setSelectedImages(updatedSelectedImages);\n    }\n  };\n  const handleEditClickOpen = () => {\n    if (!(socialUser !== null && socialUser !== void 0 && socialUser.identities) || undefined && jotaiUserData) {\n      setEditNickName((jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.nickname) || '');\n      setIsEditing(true);\n    } else if ((socialUser === null || socialUser === void 0 ? void 0 : socialUser.identities[0].provider) !== 'email') {\n      setIsEditing(false);\n      alert('소셜 로그인 시 프로필 수정이 불가능합니다.');\n    }\n  };\n  const handleEditClickClose = () => {\n    setIsEditing(false);\n  };\n  const handleNicknameChange = event => {\n    setEditNickName(event.target.value);\n  };\n\n  // 마이페이지 등급\n  const grade = () => {\n    if (myPostLegth >= 20) {\n      return 'VIP';\n    } else if (myPostLegth >= 15) {\n      return 'Gold';\n    } else if (myPostLegth >= 10) {\n      return 'Silver';\n    } else {\n      return 'Bonze';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(S.MypageContainer, {\n    children: user || jotaiUserData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(S.ProfileBox, {\n        children: [/*#__PURE__*/_jsxDEV(S.ProfileImg, {\n          src: jotaiUserData !== null && jotaiUserData !== void 0 && jotaiUserData.profileimg ? `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.profileimg}` : '-',\n          alt: `프로필 이미지 - ${user === null || user === void 0 ? void 0 : user.uid}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.ProfileInfo, {\n          children: [isEditing ? /*#__PURE__*/_jsxDEV(S.NickNameBox, {\n            children: [/*#__PURE__*/_jsxDEV(S.EditNickName, {\n              children: \"\\uB2C9\\uB124\\uC784 :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(S.InputNickName, {\n              type: \"text\",\n              value: editnickname,\n              onChange: handleNicknameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(S.NickName, {\n            children: jotaiUserData ? jotaiUserData.nickname : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(S.Email, {\n            children: jotaiUserData ? jotaiUserData.email : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(S.EditBtn, {\n              onClick: handleEdit,\n              children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(S.EditBtn, {\n              onClick: handleEditClickClose,\n              children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(S.EditBtn, {\n            onClick: handleEditClickOpen,\n            children: \"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uB4F1\\uAE09 :\", grade()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.EditProfile, {\n        children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(S.EditProfileLabel, {\n              htmlFor: \"file-input\",\n              children: \"\\uD30C\\uC77C\\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(S.EditProfileInput, {\n              id: \"file-input\",\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageChangeWrapper\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UserPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(L.LoadingOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(Mypage, \"1E5GP9Mjf9ay4UrxW2I0f+q0NH8=\", false, function () {\n  return [useAtom, useQueryClient, useAtom, useAtom, useAtom, useAtom];\n});\n_c = Mypage;\nexport default Mypage;\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["React","useState","useEffect","jotaiUserDataAtom","useAtom","supabase","useQueryClient","handleImageChange","UserPosts","myPostLegthAtom","S","L","userAtom","userEmailAtom","sosialUserAtom","jsxDEV","_jsxDEV","Mypage","_s","user","editnickname","setEditNickName","selectedImages","setSelectedImages","queryClient","userEmail","jotaiUserData","setJotaiUserData","isEditing","setIsEditing","socialUser","myPostLegth","storedUserData","localStorage","getItem","parsedUserData","JSON","parse","invalidateQueries","handleEdit","profileimg","Array","isArray","join","length","newImageUrls","selectedImage","data","error","storage","from","upload","name","console","alert","push","path","update","nickname","eq","uid","fetchError","select","single","setItem","stringify","handleImageChangeWrapper","e","selectedFiles","target","files","updatedSelectedImages","handleEditClickOpen","identities","undefined","provider","handleEditClickClose","handleNicknameChange","event","value","grade","MypageContainer","children","ProfileBox","ProfileImg","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","ProfileInfo","NickNameBox","EditNickName","InputNickName","type","onChange","NickName","Email","email","EditBtn","onClick","EditProfile","EditProfileLabel","htmlFor","EditProfileInput","id","accept","LoadingOverlay","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/pages/Mypage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { jotaiUserDataAtom } from '../components/common/Header';\r\nimport { useAtom } from 'jotai';\r\nimport { supabase } from '../services/supabase/supabase';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { handleImageChange } from '../components/posts/HandleImage';\r\nimport UserPosts, { myPostLegthAtom } from '../components/mypage/UserPosts';\r\nimport * as S from '../pages/Styled.Mypage';\r\nimport * as L from '../components/common/Styled.Loading';\r\nimport { userAtom, userEmailAtom } from '../components/user/login/Login';\r\nimport { sosialUserAtom } from '../components/user/social/SosialLogin';\r\n\r\nconst Mypage = () => {\r\n  const [user] = useAtom(userAtom);\r\n  const [editnickname, setEditNickName] = useState('');\r\n  const [selectedImages, setSelectedImages] = useState<File[]>([]);\r\n  const queryClient = useQueryClient();\r\n  const [userEmail] = useAtom(userEmailAtom);\r\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [socialUser] = useAtom(sosialUserAtom);\r\n  const [myPostLegth] = useAtom(myPostLegthAtom);\r\n\r\n  // 생성한 토큰 가져와서 새로고침 방지\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem('jotaiUserData');\r\n    if (storedUserData) {\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setJotaiUserData(parsedUserData);\r\n\r\n      queryClient.invalidateQueries(['users', userEmail]);\r\n    }\r\n  }, []);\r\n\r\n  // 프로필 수정 => 저장\r\n  const handleEdit = async () => {\r\n    let profileimg: string | null = null;\r\n\r\n    if (jotaiUserData?.profileimg && Array.isArray(jotaiUserData.profileimg)) {\r\n      profileimg = jotaiUserData.profileimg.join(';');\r\n    }\r\n\r\n    if (selectedImages.length > 0) {\r\n      const newImageUrls: string[] = [];\r\n\r\n      for (const selectedImage of selectedImages) {\r\n        const { data, error } = await supabase.storage\r\n          .from('1st')\r\n          .upload(`images/${selectedImage.name}`, selectedImage);\r\n\r\n        if (error) {\r\n          console.error('Error uploading image to Supabase storage:', error);\r\n          alert('이미지 업로드 중 에러가 발생했습니다!');\r\n          return;\r\n        }\r\n\r\n        newImageUrls.push(data.path);\r\n      }\r\n\r\n      if (profileimg === null) {\r\n        profileimg = newImageUrls.join(';');\r\n      } else {\r\n        profileimg += ';' + newImageUrls.join(';');\r\n      }\r\n    }\r\n\r\n    if (editnickname) {\r\n      const { error } = await supabase\r\n        .from('users')\r\n        .update({\r\n          nickname: editnickname,\r\n          profileimg: profileimg || jotaiUserData?.profileimg\r\n        })\r\n        .eq('uid', jotaiUserData?.uid);\r\n\r\n      if (error) {\r\n        console.error('Error editing post:', error);\r\n        alert('에러가 발생했습니다!');\r\n      } else {\r\n        alert('수정이 완료되었습니다.');\r\n\r\n        const { data, error: fetchError } = await supabase\r\n          .from('users')\r\n          .select()\r\n          .eq('uid', jotaiUserData?.uid)\r\n          .single();\r\n\r\n        if (fetchError) {\r\n          console.error('Error fetching updated user data:', fetchError);\r\n        } else {\r\n          localStorage.setItem('jotaiUserData', JSON.stringify(data));\r\n          setJotaiUserData(data);\r\n        }\r\n        setEditNickName('');\r\n        setSelectedImages([]);\r\n        setIsEditing(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleImageChangeWrapper = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFiles = e.target.files;\r\n\r\n    if (selectedFiles) {\r\n      const updatedSelectedImages = handleImageChange(selectedFiles);\r\n      setSelectedImages(updatedSelectedImages);\r\n    }\r\n  };\r\n\r\n  const handleEditClickOpen = () => {\r\n    if (!socialUser?.identities || (undefined && jotaiUserData)) {\r\n      setEditNickName(jotaiUserData?.nickname || '');\r\n      setIsEditing(true);\r\n    } else if (socialUser?.identities[0].provider !== 'email') {\r\n      setIsEditing(false);\r\n      alert('소셜 로그인 시 프로필 수정이 불가능합니다.');\r\n    }\r\n  };\r\n\r\n  const handleEditClickClose = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleNicknameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEditNickName(event.target.value);\r\n  };\r\n\r\n  // 마이페이지 등급\r\n  const grade = () => {\r\n    if (myPostLegth >= 20) {\r\n      return 'VIP';\r\n    } else if (myPostLegth >= 15) {\r\n      return 'Gold';\r\n    } else if (myPostLegth >= 10) {\r\n      return 'Silver';\r\n    } else {\r\n      return 'Bonze';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.MypageContainer>\r\n      {user || jotaiUserData ? (\r\n        <div>\r\n          <S.ProfileBox>\r\n            <S.ProfileImg\r\n              src={\r\n                jotaiUserData?.profileimg\r\n                  ? `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${jotaiUserData?.profileimg}`\r\n                  : '-'\r\n              }\r\n              alt={`프로필 이미지 - ${user?.uid}`}\r\n            />\r\n            <S.ProfileInfo>\r\n              {isEditing ? (\r\n                <S.NickNameBox>\r\n                  <S.EditNickName>닉네임 :</S.EditNickName>\r\n                  <S.InputNickName type=\"text\" value={editnickname} onChange={handleNicknameChange} />\r\n                </S.NickNameBox>\r\n              ) : (\r\n                <S.NickName>{jotaiUserData ? jotaiUserData.nickname : ''}</S.NickName>\r\n              )}\r\n              <S.Email>{jotaiUserData ? jotaiUserData.email : ''}</S.Email>\r\n\r\n              {isEditing ? (\r\n                <div>\r\n                  <S.EditBtn onClick={handleEdit}>저장하기</S.EditBtn>\r\n                  <S.EditBtn onClick={handleEditClickClose}>취소하기</S.EditBtn>\r\n                </div>\r\n              ) : (\r\n                <S.EditBtn onClick={handleEditClickOpen}>프로필 수정</S.EditBtn>\r\n              )}\r\n            </S.ProfileInfo>\r\n          </S.ProfileBox>\r\n          <div>등급 :{grade()}</div>\r\n          <S.EditProfile>\r\n            {isEditing ? (\r\n              <div>\r\n                <div>\r\n                  <S.EditProfileLabel htmlFor=\"file-input\">파일선택</S.EditProfileLabel>\r\n                  <S.EditProfileInput\r\n                    id=\"file-input\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageChangeWrapper}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </S.EditProfile>\r\n          <UserPosts />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <L.LoadingOverlay />\r\n        </div>\r\n      )}\r\n    </S.MypageContainer>\r\n  );\r\n};\r\n\r\nexport default Mypage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}