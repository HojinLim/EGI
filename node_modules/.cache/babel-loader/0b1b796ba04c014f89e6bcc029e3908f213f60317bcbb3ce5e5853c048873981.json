{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\user\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport SignUp from './SignUp';\nimport { atom, useAtom } from 'jotai';\nimport { useQueryClient, useMutation } from '@tanstack/react-query';\nimport { loginService } from '../../services/supabase/auth';\n\n// import { supabase } from '../../services/supabase';\n// import ResetPasswordModal from './ResetPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const userAtom = atom(null);\nexport const signUpModalAtom = atom(false);\nconst Login = ({\n  setLoginModal\n}) => {\n  _s();\n  const queryClient = useQueryClient();\n  const [, setUser] = useAtom(userAtom);\n  // const [resetPasswordModal, setResetPasswordModal] = useState(false);\n  const [signUpModal, setSignUpModal] = useAtom(signUpModalAtom);\n  const [userData, setUserData] = useState({\n    uid: '',\n    email: '',\n    password: ''\n  });\n  // 회원가입 모달 열기\n  const showSignUpModal = () => {\n    setSignUpModal(true);\n  };\n  // 로그인 모달 닫기\n  const closeLoginModal = () => {\n    setLoginModal(false);\n  };\n  const loginMutation = useMutation(loginService, {\n    onSuccess: () => {\n      setUser(userData);\n      setLoginModal(false);\n      queryClient.invalidateQueries({\n        queryKey: [userData]\n      });\n    }\n  });\n  const loginHandler = async e => {\n    e.preventDefault();\n    try {\n      loginMutation.mutate(userData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // const passwordMutation = useMutation(resetPassword, {\n  //   onSuccess: () => {\n  //     setEmail('');\n  //     queryClient.invalidateQueries({ queryKey: [email] });\n  //   }\n  // });\n\n  // const resetPasswordHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n  //   e.preventDefault();\n\n  //   try {\n  //     passwordMutation.mutate(email);\n  //     setResetPasswordModal(true);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   supabase.auth.onAuthStateChange(async (event, session) => {\n  //     if (event == 'PASSWORD_RECOVERY') {\n  //       const newPassword = prompt('What would you like your new password to be?');\n  //       if (newPassword !== null) {\n  //         const { data, error } = await supabase.auth.updateUser({ password: newPassword });\n\n  //         if (data) {\n  //           alert('Password updated successfully!');\n  //         } else if (error) {\n  //           alert('There was an error updating your password.');\n  //         }\n  //       }\n  //     }\n  //     console.log(session);\n  //   });\n  // }, []);\n  const emailInputChangeHandler = e => {\n    setUserData({\n      ...userData,\n      email: e.target.value\n    });\n  };\n  const passwordInputChangeHandler = e => {\n    setUserData({\n      ...userData,\n      password: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CloseBtn, {\n      onClick: closeLoginModal,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: loginHandler,\n          children: [/*#__PURE__*/_jsxDEV(EmailBox, {\n            type: \"text\",\n            value: userData.email,\n            onChange: emailInputChangeHandler,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordBox, {\n            type: \"password\",\n            value: userData.password,\n            onChange: passwordInputChangeHandler,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoginBtn, {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showSignUpModal,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), signUpModal && /*#__PURE__*/_jsxDEV(SignUp, {\n        setSignUpmodal: setSignUpModal,\n        setLoginModal: setLoginModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"q4h0PD6/9XrcKZ47vpH0K21mFvI=\", false, function () {\n  return [useQueryClient, useAtom, useAtom, useMutation];\n});\n_c = Login;\nexport default Login;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 300px;\n  height: 400px;\n\n  z-index: 999;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background-color: gray;\n  border: 1px solid black;\n  border-radius: 8px;\n`;\n_c2 = Container;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n_c3 = Wrapper;\nconst CloseBtn = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n`;\n_c4 = CloseBtn;\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n_c5 = InputContainer;\nconst EmailBox = styled.input`\n  width: 170px;\n  height: 30px;\n\n  margin: 10px;\n`;\n_c6 = EmailBox;\nconst PasswordBox = styled.input`\n  width: 170px;\n  height: 30px;\n  margin: 10px;\n`;\n_c7 = PasswordBox;\nconst LoginBtn = styled.button`\n  width: 130px;\n  height: 30px;\n`;\n_c8 = LoginBtn;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"CloseBtn\");\n$RefreshReg$(_c5, \"InputContainer\");\n$RefreshReg$(_c6, \"EmailBox\");\n$RefreshReg$(_c7, \"PasswordBox\");\n$RefreshReg$(_c8, \"LoginBtn\");","map":{"version":3,"names":["React","useState","styled","SignUp","atom","useAtom","useQueryClient","useMutation","loginService","jsxDEV","_jsxDEV","userAtom","signUpModalAtom","Login","setLoginModal","_s","queryClient","setUser","signUpModal","setSignUpModal","userData","setUserData","uid","email","password","showSignUpModal","closeLoginModal","loginMutation","onSuccess","invalidateQueries","queryKey","loginHandler","e","preventDefault","mutate","error","console","log","emailInputChangeHandler","target","value","passwordInputChangeHandler","Container","children","CloseBtn","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Wrapper","InputContainer","onSubmit","EmailBox","type","onChange","placeholder","PasswordBox","LoginBtn","setSignUpmodal","_c","div","_c2","_c3","button","_c4","_c5","input","_c6","_c7","_c8","$RefreshReg$"],"sources":["C:/React/team_one/src/components/user/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport SignUp from './SignUp';\r\nimport { atom, useAtom } from 'jotai';\r\nimport { useQueryClient, useMutation } from '@tanstack/react-query';\r\nimport { loginService } from '../../services/supabase/auth';\r\nimport type { UserType } from '../../types/supabase';\r\n// import { supabase } from '../../services/supabase';\r\n// import ResetPasswordModal from './ResetPassword';\r\n\r\ntype LoginType = {\r\n  setLoginModal: (isOpen: boolean) => void;\r\n};\r\n\r\nexport const userAtom = atom<Omit<UserType, 'nickname' | 'profileImg'> | null>(null);\r\nexport const signUpModalAtom = atom<boolean>(false);\r\n\r\nconst Login = ({ setLoginModal }: LoginType) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const [, setUser] = useAtom(userAtom);\r\n  // const [resetPasswordModal, setResetPasswordModal] = useState(false);\r\n  const [signUpModal, setSignUpModal] = useAtom(signUpModalAtom);\r\n  const [userData, setUserData] = useState<Omit<UserType, 'nickname' | 'profileImg'>>({\r\n    uid: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n  // 회원가입 모달 열기\r\n  const showSignUpModal = () => {\r\n    setSignUpModal(true);\r\n  };\r\n  // 로그인 모달 닫기\r\n  const closeLoginModal = () => {\r\n    setLoginModal(false);\r\n  };\r\n\r\n  const loginMutation = useMutation(loginService, {\r\n    onSuccess: () => {\r\n      setUser(userData);\r\n      setLoginModal(false);\r\n      queryClient.invalidateQueries({ queryKey: [userData] });\r\n    }\r\n  });\r\n\r\n  const loginHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      loginMutation.mutate(userData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // const passwordMutation = useMutation(resetPassword, {\r\n  //   onSuccess: () => {\r\n  //     setEmail('');\r\n  //     queryClient.invalidateQueries({ queryKey: [email] });\r\n  //   }\r\n  // });\r\n\r\n  // const resetPasswordHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n  //   e.preventDefault();\r\n\r\n  //   try {\r\n  //     passwordMutation.mutate(email);\r\n  //     setResetPasswordModal(true);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   supabase.auth.onAuthStateChange(async (event, session) => {\r\n  //     if (event == 'PASSWORD_RECOVERY') {\r\n  //       const newPassword = prompt('What would you like your new password to be?');\r\n  //       if (newPassword !== null) {\r\n  //         const { data, error } = await supabase.auth.updateUser({ password: newPassword });\r\n\r\n  //         if (data) {\r\n  //           alert('Password updated successfully!');\r\n  //         } else if (error) {\r\n  //           alert('There was an error updating your password.');\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     console.log(session);\r\n  //   });\r\n  // }, []);\r\n  const emailInputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, email: e.target.value });\r\n  };\r\n\r\n  const passwordInputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, password: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CloseBtn onClick={closeLoginModal}>x</CloseBtn>\r\n      <Wrapper>\r\n        <InputContainer>\r\n          <form onSubmit={loginHandler}>\r\n            <EmailBox\r\n              type=\"text\"\r\n              value={userData.email}\r\n              onChange={emailInputChangeHandler}\r\n              placeholder=\"Email\"\r\n            ></EmailBox>\r\n            <PasswordBox\r\n              type=\"password\"\r\n              value={userData.password}\r\n              onChange={passwordInputChangeHandler}\r\n              placeholder=\"Password\"\r\n            ></PasswordBox>\r\n            <LoginBtn>Login</LoginBtn>\r\n          </form>\r\n        </InputContainer>\r\n        {/* <button onClick={resetPasswordHandler}> 비밀번호 찾기</button>\r\n        {resetPasswordModal && (\r\n          <ResetPasswordModal closeResetPasswordModal={() => setResetPasswordModal(false)} email={email} />\r\n        )} */}\r\n        <button onClick={showSignUpModal}>회원가입하기</button>\r\n        {signUpModal && <SignUp setSignUpmodal={setSignUpModal} setLoginModal={setLoginModal} />}\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 300px;\r\n  height: 400px;\r\n\r\n  z-index: 999;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  background-color: gray;\r\n  border: 1px solid black;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst EmailBox = styled.input`\r\n  width: 170px;\r\n  height: 30px;\r\n\r\n  margin: 10px;\r\n`;\r\n\r\nconst PasswordBox = styled.input`\r\n  width: 170px;\r\n  height: 30px;\r\n  margin: 10px;\r\n`;\r\n\r\nconst LoginBtn = styled.button`\r\n  width: 130px;\r\n  height: 30px;\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}