{"ast":null,"code":"import { supabase } from './supabase';\nexport const fetchComments = async pid => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('comments').select('*').eq('pid', pid);\n    if (error) {\n      console.log('Error fetching comments:', error);\n      alert('에러가 발생했습니다.' + error);\n      return [];\n    }\n    return data;\n  } catch (e) {\n    console.log(e);\n    alert('알 수 없는 오류가 발생했습니다.');\n    return [];\n  }\n};\nexport const insertComment = async comment => {\n  try {\n    console.log(comment);\n    const {\n      error\n    } = await supabase.from('comments').insert([comment]);\n    if (error) {\n      console.log('Error inserting comment:', error);\n      alert('댓글 삽입 중 에러가 발생했습니다.');\n    } else {\n      alert('댓글이 성공적으로 작성되었습니다.');\n    }\n  } catch (e) {\n    console.log('Error inserting comment:', e);\n    alert('알 수 없는 오류가 발생했습니다.');\n  }\n};","map":{"version":3,"names":["supabase","fetchComments","pid","data","error","from","select","eq","console","log","alert","e","insertComment","comment","insert"],"sources":["C:/React/team_one/src/services/supabase/comments.ts"],"sourcesContent":["import { Comment } from '../../types/supabase';\r\nimport { supabase } from './supabase';\r\n\r\nexport const fetchComments = async (pid: string) => {\r\n  try {\r\n    const { data, error } = await supabase.from('comments').select('*').eq('pid', pid);\r\n    if (error) {\r\n      console.log('Error fetching comments:', error);\r\n      alert('에러가 발생했습니다.' + error);\r\n      return [];\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    alert('알 수 없는 오류가 발생했습니다.');\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const insertComment = async (comment: Comment) => {\r\n  try {\r\n    console.log(comment);\r\n    const { error } = await supabase.from('comments').insert([comment]);\r\n    if (error) {\r\n      console.log('Error inserting comment:', error);\r\n      alert('댓글 삽입 중 에러가 발생했습니다.');\r\n    } else {\r\n      alert('댓글이 성공적으로 작성되었습니다.');\r\n    }\r\n  } catch (e) {\r\n    console.log('Error inserting comment:', e);\r\n    alert('알 수 없는 오류가 발생했습니다.');\r\n  }\r\n};\r\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,YAAY;AAErC,OAAO,MAAMC,aAAa,GAAG,MAAOC,GAAW,IAAK;EAClD,IAAI;IACF,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,EAAE,CAAC,KAAK,EAAEL,GAAG,CAAC;IAClF,IAAIE,KAAK,EAAE;MACTI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,KAAK,CAAC;MAC9CM,KAAK,CAAC,aAAa,GAAGN,KAAK,CAAC;MAC5B,OAAO,EAAE;IACX;IACA,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOQ,CAAC,EAAE;IACVH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;IACdD,KAAK,CAAC,oBAAoB,CAAC;IAC3B,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,OAAgB,IAAK;EACvD,IAAI;IACFL,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;IACpB,MAAM;MAAET;IAAM,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,UAAU,CAAC,CAACS,MAAM,CAAC,CAACD,OAAO,CAAC,CAAC;IACnE,IAAIT,KAAK,EAAE;MACTI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,KAAK,CAAC;MAC9CM,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,MAAM;MACLA,KAAK,CAAC,oBAAoB,CAAC;IAC7B;EACF,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVH,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,CAAC,CAAC;IAC1CD,KAAK,CAAC,oBAAoB,CAAC;EAC7B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}