{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\payment\\\\payment.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useAtom } from 'jotai';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { userEmailAtom } from '../user/login/Login';\nimport { jotaiUserDataAtom } from '../common/Header';\nimport KakaoPay from '../../image/KakaoPay.jpg';\nimport TossPay from '../../image/TossPay.webp';\nimport Inisis from '../../image/Inisis.jpg';\nimport * as S from './Styled.Payment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = ({\n  handlePayment,\n  post\n}) => {\n  _s();\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\n  const [userEmail] = useAtom(userEmailAtom);\n  const queryClient = useQueryClient();\n\n  // 생성한 토큰 가져와서 새로고침 방지\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('jotaiUserData');\n    if (storedUserData) {\n      const parsedUserData = JSON.parse(storedUserData);\n      setJotaiUserData(parsedUserData);\n      queryClient.invalidateQueries(['users', userEmail]);\n    }\n  }, []);\n\n  // 결제 모듈 초기화\n  useEffect(() => {\n    const IMP = window.IMP;\n    const impKey = process.env.REACT_APP_IMP_KEY;\n    if (impKey) {\n      IMP === null || IMP === void 0 ? void 0 : IMP.init(impKey);\n    } else {\n      console.error('키가 없습니다.');\n    }\n  }, []);\n  const handlePaymentClick = (pg, post) => {\n    if (!post) {\n      console.error('Post is not available.');\n      return;\n    }\n    const paymentInfo = {\n      pg: pg,\n      pay_method: 'card',\n      merchant_uid: 'merchant_' + new Date().getTime(),\n      name: post.title,\n      amount: post.price || 0,\n      buyer_name: post.nickname,\n      buyer_tel: '010-1234-5678',\n      buyer_email: (jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.email) || ''\n    };\n    handlePayment(paymentInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(S.PayMentBtn, {\n      onClick: () => handlePaymentClick('kakaopay', post),\n      children: /*#__PURE__*/_jsxDEV(S.PayMentIMG, {\n        src: KakaoPay,\n        alt: \"\\uCE74\\uCE74\\uC624\\uD398\\uC774 \\uACB0\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.PayMentBtn, {\n      onClick: () => handlePaymentClick('inicis', post),\n      children: /*#__PURE__*/_jsxDEV(S.PayMentIMG, {\n        src: Inisis,\n        alt: \"\\uC774\\uB2C8\\uC2DC\\uC2A4 \\uACB0\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.PayMentBtn, {\n      onClick: () => handlePaymentClick('tosspay', post),\n      children: /*#__PURE__*/_jsxDEV(S.PayMentIMG, {\n        src: TossPay,\n        alt: \"\\uD1A0\\uC2A4\\uD398\\uC774 \\uACB0\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"Y5RIFN6VeMzLbP8yzI6wBRDq7z4=\", false, function () {\n  return [useAtom, useAtom, useQueryClient];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useEffect","useAtom","useQueryClient","userEmailAtom","jotaiUserDataAtom","KakaoPay","TossPay","Inisis","S","jsxDEV","_jsxDEV","Payment","handlePayment","post","_s","jotaiUserData","setJotaiUserData","userEmail","queryClient","storedUserData","localStorage","getItem","parsedUserData","JSON","parse","invalidateQueries","IMP","window","impKey","process","env","REACT_APP_IMP_KEY","init","console","error","handlePaymentClick","pg","paymentInfo","pay_method","merchant_uid","Date","getTime","name","title","amount","price","buyer_name","nickname","buyer_tel","buyer_email","email","children","PayMentBtn","onClick","PayMentIMG","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/payment/payment.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { RequestPayParams } from 'iamport-typings';\r\nimport { Post } from '../../types/supabase';\r\nimport { useAtom } from 'jotai';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { userEmailAtom } from '../user/login/Login';\r\nimport { jotaiUserDataAtom } from '../common/Header';\r\nimport KakaoPay from '../../image/KakaoPay.jpg';\r\nimport TossPay from '../../image/TossPay.webp';\r\nimport Inisis from '../../image/Inisis.jpg';\r\nimport * as S from './Styled.Payment';\r\n\r\ninterface PaymentProps {\r\n  handlePayment: (paymentInfo: RequestPayParams) => void;\r\n  post: Post;\r\n}\r\n\r\nconst Payment: React.FC<PaymentProps> = ({ handlePayment, post }) => {\r\n  const [jotaiUserData, setJotaiUserData] = useAtom(jotaiUserDataAtom);\r\n  const [userEmail] = useAtom(userEmailAtom);\r\n  const queryClient = useQueryClient();\r\n\r\n  // 생성한 토큰 가져와서 새로고침 방지\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem('jotaiUserData');\r\n    if (storedUserData) {\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setJotaiUserData(parsedUserData);\r\n\r\n      queryClient.invalidateQueries(['users', userEmail]);\r\n    }\r\n  }, []);\r\n\r\n  // 결제 모듈 초기화\r\n  useEffect(() => {\r\n    const IMP = window.IMP;\r\n    const impKey = process.env.REACT_APP_IMP_KEY;\r\n\r\n    if (impKey) {\r\n      IMP?.init(impKey);\r\n    } else {\r\n      console.error('키가 없습니다.');\r\n    }\r\n  }, []);\r\n\r\n  const handlePaymentClick = (pg: string, post: Post) => {\r\n    if (!post) {\r\n      console.error('Post is not available.');\r\n      return;\r\n    }\r\n\r\n    const paymentInfo: RequestPayParams = {\r\n      pg: pg,\r\n      pay_method: 'card',\r\n      merchant_uid: 'merchant_' + new Date().getTime(),\r\n      name: post.title,\r\n      amount: post.price || 0,\r\n      buyer_name: post.nickname,\r\n      buyer_tel: '010-1234-5678',\r\n      buyer_email: jotaiUserData?.email || ''\r\n    };\r\n\r\n    handlePayment(paymentInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <S.PayMentBtn onClick={() => handlePaymentClick('kakaopay', post)}>\r\n        <S.PayMentIMG src={KakaoPay} alt=\"카카오페이 결제\" />\r\n      </S.PayMentBtn>\r\n      <S.PayMentBtn onClick={() => handlePaymentClick('inicis', post)}>\r\n        <S.PayMentIMG src={Inisis} alt=\"이니시스 결제\" />\r\n      </S.PayMentBtn>\r\n      <S.PayMentBtn onClick={() => handlePaymentClick('tosspay', post)}>\r\n        <S.PayMentIMG src={TossPay} alt=\"토스페이 결제\" />\r\n      </S.PayMentBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAGxC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,KAAKC,CAAC,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtC,MAAMC,OAA+B,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,OAAO,CAACG,iBAAiB,CAAC;EACpE,MAAM,CAACa,SAAS,CAAC,GAAGhB,OAAO,CAACE,aAAa,CAAC;EAC1C,MAAMe,WAAW,GAAGhB,cAAc,CAAC,CAAC;;EAEpC;EACAF,SAAS,CAAC,MAAM;IACd,MAAMmB,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC5D,IAAIF,cAAc,EAAE;MAClB,MAAMG,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;MACjDH,gBAAgB,CAACM,cAAc,CAAC;MAEhCJ,WAAW,CAACO,iBAAiB,CAAC,CAAC,OAAO,EAAER,SAAS,CAAC,CAAC;IACrD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjB,SAAS,CAAC,MAAM;IACd,MAAM0B,GAAG,GAAGC,MAAM,CAACD,GAAG;IACtB,MAAME,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;IAE5C,IAAIH,MAAM,EAAE;MACVF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEM,IAAI,CAACJ,MAAM,CAAC;IACnB,CAAC,MAAM;MACLK,OAAO,CAACC,KAAK,CAAC,UAAU,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAGA,CAACC,EAAU,EAAEvB,IAAU,KAAK;IACrD,IAAI,CAACA,IAAI,EAAE;MACToB,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;MACvC;IACF;IAEA,MAAMG,WAA6B,GAAG;MACpCD,EAAE,EAAEA,EAAE;MACNE,UAAU,EAAE,MAAM;MAClBC,YAAY,EAAE,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAChDC,IAAI,EAAE7B,IAAI,CAAC8B,KAAK;MAChBC,MAAM,EAAE/B,IAAI,CAACgC,KAAK,IAAI,CAAC;MACvBC,UAAU,EAAEjC,IAAI,CAACkC,QAAQ;MACzBC,SAAS,EAAE,eAAe;MAC1BC,WAAW,EAAE,CAAAlC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEmC,KAAK,KAAI;IACvC,CAAC;IAEDtC,aAAa,CAACyB,WAAW,CAAC;EAC5B,CAAC;EACD,oBACE3B,OAAA;IAAAyC,QAAA,gBACEzC,OAAA,CAACF,CAAC,CAAC4C,UAAU;MAACC,OAAO,EAAEA,CAAA,KAAMlB,kBAAkB,CAAC,UAAU,EAAEtB,IAAI,CAAE;MAAAsC,QAAA,eAChEzC,OAAA,CAACF,CAAC,CAAC8C,UAAU;QAACC,GAAG,EAAElD,QAAS;QAACmD,GAAG,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACflD,OAAA,CAACF,CAAC,CAAC4C,UAAU;MAACC,OAAO,EAAEA,CAAA,KAAMlB,kBAAkB,CAAC,QAAQ,EAAEtB,IAAI,CAAE;MAAAsC,QAAA,eAC9DzC,OAAA,CAACF,CAAC,CAAC8C,UAAU;QAACC,GAAG,EAAEhD,MAAO;QAACiD,GAAG,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACflD,OAAA,CAACF,CAAC,CAAC4C,UAAU;MAACC,OAAO,EAAEA,CAAA,KAAMlB,kBAAkB,CAAC,SAAS,EAAEtB,IAAI,CAAE;MAAAsC,QAAA,eAC/DzC,OAAA,CAACF,CAAC,CAAC8C,UAAU;QAACC,GAAG,EAAEjD,OAAQ;QAACkD,GAAG,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAAC9C,EAAA,CA5DIH,OAA+B;EAAA,QACOV,OAAO,EAC7BA,OAAO,EACPC,cAAc;AAAA;AAAA2D,EAAA,GAH9BlD,OAA+B;AA8DrC,eAAeA,OAAO;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}