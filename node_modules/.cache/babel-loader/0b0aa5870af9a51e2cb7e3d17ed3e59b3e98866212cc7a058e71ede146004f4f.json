{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\comments\\\\Comments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as S from './Styled.Comments';\nimport { fetchComments, insertComment } from '../../services/supabase/comments';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const queryClient = useQueryClient();\n  const [isCommenting, setIsCommenting] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const {\n    id: pid\n  } = useParams();\n  if (!pid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"pid\\uAC00 \\uC720\\uD6A8\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  const handleCommentFormBtnClick = () => {\n    setIsCommenting(!isCommenting);\n  };\n  const handleCommentInputChange = e => {\n    setCommentText(e.target.value);\n  };\n  const handleSubmitBtn = e => {\n    e.preventDefault();\n    if (commentText.trim() === '') {\n      return;\n    }\n\n    // const newComment = {\n    //   uid: 1,\n    //   pid: parseInt(pid),\n    //   nickname: '테스트',\n    //   profileimg: '아무튼url',\n    //   body: commentText,\n    //   created_at: new Date().toISOString()\n    // };\n    const newComment = {\n      uid: 3,\n      pid: parseInt(pid),\n      nickname: '테스트',\n      body: commentText,\n      created_at: new Date().toISOString()\n    };\n    addCommentMutation.mutate(newComment);\n    setCommentText('');\n  };\n  const addCommentMutation = useMutation(insertComment, {\n    onSuccess: () => {\n      // 댓글이 성공적으로 삽입되면 해당 쿼리를 다시 가져오도록 갱신\n      queryClient.invalidateQueries(['comments', pid]);\n      setCommentText(''); // 입력 필드 초기화\n    },\n\n    onError: error => {\n      alert(`댓글 삽입 중 오류가 발생했습니다.: ${error}`);\n    }\n  });\n  const defaultQueryOptions = {\n    queryKey: ['comments', pid],\n    // Use pid as part of the query key\n    queryFn: () => fetchComments(pid),\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false\n  };\n  const {\n    data: comments,\n    error,\n    isFetching\n  } = useQuery(defaultQueryOptions);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uB3C4\\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(S.CommentsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(S.CommentsPanel, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \\uB313\\uAE00 \", comments === null || comments === void 0 ? void 0 : comments.length, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCommentFormBtnClick,\n          children: \"\\uC791\\uC131\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.CommentsHr, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.CommentList, {\n      children: comments === null || comments === void 0 ? void 0 : comments.map(comment => /*#__PURE__*/_jsxDEV(S.CommentItem, {\n        children: [/*#__PURE__*/_jsxDEV(S.CommentProfileImgBox, {\n          children: \"\\uC0AC\\uC9C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.CommentTextBox, {\n          children: [/*#__PURE__*/_jsxDEV(S.CommentAuthor, {\n            children: comment.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.CommentBody, {\n            children: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, comment.cid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.CommentForm, {\n      isCommenting: isCommenting,\n      onSubmit: handleSubmitBtn,\n      children: /*#__PURE__*/_jsxDEV(S.CommentItem, {\n        children: [/*#__PURE__*/_jsxDEV(S.CommentProfileImgBox, {\n          children: \"\\uC0AC\\uC9C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.CommentBody, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: commentText,\n            onChange: handleCommentInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"IxeFNbae2MTpS8PeERlwMW9MM3o=\", false, function () {\n  return [useQueryClient, useParams, useMutation, useQuery];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","S","fetchComments","insertComment","useMutation","useQuery","useQueryClient","useParams","jsxDEV","_jsxDEV","Comments","_s","queryClient","isCommenting","setIsCommenting","commentText","setCommentText","id","pid","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCommentFormBtnClick","handleCommentInputChange","e","target","value","handleSubmitBtn","preventDefault","trim","newComment","uid","parseInt","nickname","body","created_at","Date","toISOString","addCommentMutation","mutate","onSuccess","invalidateQueries","onError","error","alert","defaultQueryOptions","queryKey","queryFn","refetchOnWindowFocus","refetchOnReconnect","data","comments","isFetching","CommentsContainer","CommentsPanel","length","onClick","CommentsHr","CommentList","map","comment","CommentItem","CommentProfileImgBox","CommentTextBox","CommentAuthor","CommentBody","cid","CommentForm","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/comments/Comments.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as S from './Styled.Comments';\r\nimport { fetchComments, insertComment } from '../../services/supabase/comments';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { useParams } from 'react-router';\r\nimport { Comment } from '../../types/supabase';\r\n\r\nconst Comments = () => {\r\n  const queryClient = useQueryClient();\r\n  const [isCommenting, setIsCommenting] = useState(false);\r\n  const [commentText, setCommentText] = useState('');\r\n\r\n  const { id: pid } = useParams<{ id?: string }>();\r\n  if (!pid) {\r\n    return <div>pid가 유효하지 않습니다.</div>;\r\n  }\r\n\r\n  const handleCommentFormBtnClick = () => {\r\n    setIsCommenting(!isCommenting);\r\n  };\r\n\r\n  const handleCommentInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n\r\n  const handleSubmitBtn = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (commentText.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    // const newComment = {\r\n    //   uid: 1,\r\n    //   pid: parseInt(pid),\r\n    //   nickname: '테스트',\r\n    //   profileimg: '아무튼url',\r\n    //   body: commentText,\r\n    //   created_at: new Date().toISOString()\r\n    // };\r\n    const newComment = {\r\n      uid: 3,\r\n      pid: parseInt(pid),\r\n      nickname: '테스트',\r\n      body: commentText,\r\n      created_at: new Date().toISOString()\r\n    };\r\n\r\n    addCommentMutation.mutate(newComment);\r\n    setCommentText('');\r\n  };\r\n\r\n  const addCommentMutation = useMutation(insertComment, {\r\n    onSuccess: () => {\r\n      // 댓글이 성공적으로 삽입되면 해당 쿼리를 다시 가져오도록 갱신\r\n      queryClient.invalidateQueries(['comments', pid]);\r\n      setCommentText(''); // 입력 필드 초기화\r\n    },\r\n    onError: (error) => {\r\n      alert(`댓글 삽입 중 오류가 발생했습니다.: ${error}`);\r\n    }\r\n  });\r\n\r\n  const defaultQueryOptions = {\r\n    queryKey: ['comments', pid], // Use pid as part of the query key\r\n    queryFn: () => fetchComments(pid),\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  };\r\n\r\n  const { data: comments, error, isFetching } = useQuery<Comment[]>(defaultQueryOptions);\r\n\r\n  if (error) {\r\n    return <div>데이터를 가져오는 도중 오류가 발생했습니다.</div>;\r\n  }\r\n\r\n  if (isFetching) {\r\n    return <div>로딩중입니다.</div>;\r\n  }\r\n\r\n  return (\r\n    <S.CommentsContainer>\r\n      <S.CommentsPanel>\r\n        <div>\r\n          <div> 댓글 {comments?.length} </div>\r\n        </div>\r\n        <div>\r\n          <button onClick={handleCommentFormBtnClick}>작성하기</button>\r\n        </div>\r\n      </S.CommentsPanel>\r\n      <S.CommentsHr />\r\n      <S.CommentList>\r\n        {comments?.map((comment) => (\r\n          <S.CommentItem key={comment.cid}>\r\n            <S.CommentProfileImgBox>사진</S.CommentProfileImgBox>\r\n            <S.CommentTextBox>\r\n              <S.CommentAuthor>{comment.nickname}</S.CommentAuthor>\r\n              <S.CommentBody>{comment.body}</S.CommentBody>\r\n            </S.CommentTextBox>\r\n          </S.CommentItem>\r\n        ))}\r\n      </S.CommentList>\r\n      <S.CommentForm isCommenting={isCommenting} onSubmit={handleSubmitBtn}>\r\n        <S.CommentItem>\r\n          <S.CommentProfileImgBox>사진</S.CommentProfileImgBox>\r\n          <S.CommentBody>\r\n            <input type=\"text\" value={commentText} onChange={handleCommentInputChange} />\r\n          </S.CommentBody>\r\n        </S.CommentItem>\r\n      </S.CommentForm>\r\n    </S.CommentsContainer>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}