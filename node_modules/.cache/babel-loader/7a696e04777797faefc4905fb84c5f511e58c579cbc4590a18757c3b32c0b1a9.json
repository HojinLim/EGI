{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\comments\\\\CommentItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as S from './Styled.Comments';\nimport CommentPanel from './CommentPanel';\nimport ReplyCommentForm from './ReplyCommentForm';\nimport baseProfile from '../../image/baseprofile.jpeg';\nimport useCommentMutation from '../../hooks/useCommentMutation';\nimport { useAtom } from 'jotai';\nimport { jotaiUserDataAtom } from '../common/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentItem = ({\n  comment,\n  pid,\n  isUpdating,\n  setIsUpdating\n}) => {\n  _s();\n  const [updateComment, setUpdateComment] = useState('');\n  const [isAddReply, setIsAddReply] = useState(false);\n  const [updateCommentId, setUpdateCommentId] = useState(0);\n  const [jotaiUserData] = useAtom(jotaiUserDataAtom);\n  const {\n    updateCommentMutation,\n    deleteCommentMutation\n  } = useCommentMutation();\n  const handleUpdateCommentBtnClick = (cid, comment) => {\n    setIsUpdating(true);\n    setUpdateComment(comment);\n    setUpdateCommentId(cid);\n  };\n  const handleUpdateCommentInputChange = e => {\n    setUpdateComment(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleUpdateBtnClick();\n    }\n  };\n  const handleUpdateBtnClick = () => {\n    if (updateComment === '') {\n      alert('작성된 댓글이 없습니다.');\n      return false;\n    }\n    const newComment = {\n      cid: updateCommentId,\n      body: updateComment\n    };\n    updateCommentMutation.mutate(newComment);\n    setUpdateComment('');\n    setIsUpdating(false);\n    setUpdateCommentId(null);\n  };\n  const handleUpdateCommentCancel = () => {\n    setIsUpdating(false);\n    setUpdateCommentId(null);\n  };\n  const handleDeleteCommentBtnClick = cid => {\n    const isConfirmed = window.confirm('삭제하시겠습니까?');\n    if (!isConfirmed) {\n      return false;\n    }\n    deleteCommentMutation.mutate(cid);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.CommentItem, {\n      children: [/*#__PURE__*/_jsxDEV(S.CommentProfileImgBox, {\n        children: comment !== null && comment !== void 0 && comment.profileimg ? /*#__PURE__*/_jsxDEV(S.CommentProfileImg, {\n          src: `${process.env.REACT_APP_SUPABASE_STORAGE_URL}${comment.profileimg}`,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(S.CommentProfileImg, {\n          src: `${baseProfile}`,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.CommentTextBox, {\n        children: [/*#__PURE__*/_jsxDEV(S.CommentAuthor, {\n          children: comment.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), isUpdating && updateCommentId == comment.cid ? /*#__PURE__*/_jsxDEV(S.CommentInput, {\n          type: \"text\",\n          value: updateComment,\n          onChange: handleUpdateCommentInputChange,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(S.CommentBody, {\n            children: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n            onClick: () => setIsAddReply(!isAddReply),\n            children: \"\\uB2F5\\uAE00\\uB2EC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), (jotaiUserData === null || jotaiUserData === void 0 ? void 0 : jotaiUserData.uid) === comment.uid ? isUpdating && updateCommentId === comment.cid ? /*#__PURE__*/_jsxDEV(CommentPanel, {\n        commenting: true,\n        handleUpdateBtnClick: handleUpdateBtnClick,\n        handleUpdateCommentCancel: handleUpdateCommentCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(CommentPanel, {\n        commenting: false,\n        handleUpdateCommentBtnClick: () => handleUpdateCommentBtnClick(comment.cid, comment.body),\n        handleDeleteCommentBtnClick: () => handleDeleteCommentBtnClick(comment.cid)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '105px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), isAddReply && /*#__PURE__*/_jsxDEV(ReplyCommentForm, {\n      pid: pid,\n      cid: comment.cid,\n      setIsAddReply: setIsAddReply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n};\n_s(CommentItem, \"ngPHhW0NxBBdqQucRwi1ykhpHU0=\", false, function () {\n  return [useAtom, useCommentMutation];\n});\n_c = CommentItem;\nexport default CommentItem;\nvar _c;\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["React","useState","S","CommentPanel","ReplyCommentForm","baseProfile","useCommentMutation","useAtom","jotaiUserDataAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentItem","comment","pid","isUpdating","setIsUpdating","_s","updateComment","setUpdateComment","isAddReply","setIsAddReply","updateCommentId","setUpdateCommentId","jotaiUserData","updateCommentMutation","deleteCommentMutation","handleUpdateCommentBtnClick","cid","handleUpdateCommentInputChange","e","target","value","handleKeyDown","key","handleUpdateBtnClick","alert","newComment","body","mutate","handleUpdateCommentCancel","handleDeleteCommentBtnClick","isConfirmed","window","confirm","children","CommentProfileImgBox","profileimg","CommentProfileImg","src","process","env","REACT_APP_SUPABASE_STORAGE_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","CommentTextBox","CommentAuthor","nickname","CommentInput","type","onChange","onKeyDown","CommentBody","Button","onClick","uid","commenting","style","width","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/comments/CommentItem.tsx"],"sourcesContent":["import React, { Dispatch, useState } from 'react';\r\nimport * as S from './Styled.Comments';\r\nimport CommentPanel from './CommentPanel';\r\nimport ReplyCommentForm from './ReplyCommentForm';\r\nimport baseProfile from '../../image/baseprofile.jpeg';\r\nimport useCommentMutation from '../../hooks/useCommentMutation';\r\nimport { SetStateAction, useAtom } from 'jotai';\r\nimport { jotaiUserDataAtom } from '../common/Header';\r\n\r\nimport type { CommentType } from '../../types/supabase';\r\ninterface CommentItemProps {\r\n  pid: string;\r\n  comment: CommentType;\r\n  isUpdating: boolean;\r\n  setIsUpdating: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst CommentItem = ({ comment, pid, isUpdating, setIsUpdating }: CommentItemProps) => {\r\n  const [updateComment, setUpdateComment] = useState('');\r\n  const [isAddReply, setIsAddReply] = useState(false);\r\n\r\n  const [updateCommentId, setUpdateCommentId] = useState<number | null>(0);\r\n\r\n  const [jotaiUserData] = useAtom(jotaiUserDataAtom);\r\n\r\n  const { updateCommentMutation, deleteCommentMutation } = useCommentMutation();\r\n\r\n  const handleUpdateCommentBtnClick = (cid: number, comment: string) => {\r\n    setIsUpdating(true);\r\n    setUpdateComment(comment);\r\n    setUpdateCommentId(cid);\r\n  };\r\n\r\n  const handleUpdateCommentInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUpdateComment(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleUpdateBtnClick();\r\n    }\r\n  };\r\n\r\n  const handleUpdateBtnClick = () => {\r\n    if (updateComment === '') {\r\n      alert('작성된 댓글이 없습니다.');\r\n      return false;\r\n    }\r\n\r\n    const newComment = {\r\n      cid: updateCommentId!,\r\n      body: updateComment\r\n    };\r\n\r\n    updateCommentMutation.mutate(newComment);\r\n\r\n    setUpdateComment('');\r\n    setIsUpdating(false);\r\n    setUpdateCommentId(null);\r\n  };\r\n\r\n  const handleUpdateCommentCancel = () => {\r\n    setIsUpdating(false);\r\n    setUpdateCommentId(null);\r\n  };\r\n\r\n  const handleDeleteCommentBtnClick = (cid: number) => {\r\n    const isConfirmed = window.confirm('삭제하시겠습니까?');\r\n    if (!isConfirmed) {\r\n      return false;\r\n    }\r\n    deleteCommentMutation.mutate(cid);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.CommentItem>\r\n        <S.CommentProfileImgBox>\r\n          {comment?.profileimg ? (\r\n            <S.CommentProfileImg\r\n              src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${comment.profileimg}`}\r\n              alt=\"Profile\"\r\n            />\r\n          ) : (\r\n            <S.CommentProfileImg src={`${baseProfile}`} alt=\"Profile\" />\r\n          )}\r\n        </S.CommentProfileImgBox>\r\n        <S.CommentTextBox>\r\n          <S.CommentAuthor>{comment.nickname}</S.CommentAuthor>\r\n          {isUpdating && updateCommentId == comment.cid ? (\r\n            <S.CommentInput\r\n              type=\"text\"\r\n              value={updateComment}\r\n              onChange={handleUpdateCommentInputChange}\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n          ) : (\r\n            <>\r\n              <S.CommentBody>{comment.body}</S.CommentBody>\r\n              <S.Button onClick={() => setIsAddReply(!isAddReply)}>답글달기</S.Button>\r\n            </>\r\n          )}\r\n        </S.CommentTextBox>\r\n        {jotaiUserData?.uid === comment.uid ? (\r\n          isUpdating && updateCommentId === comment.cid ? (\r\n            <CommentPanel\r\n              commenting={true}\r\n              handleUpdateBtnClick={handleUpdateBtnClick} \r\n              handleUpdateCommentCancel={handleUpdateCommentCancel}\r\n            />\r\n          ) : (\r\n            <CommentPanel\r\n              commenting={false}\r\n              handleUpdateCommentBtnClick={() => handleUpdateCommentBtnClick(comment.cid, comment.body)}\r\n              handleDeleteCommentBtnClick={() => handleDeleteCommentBtnClick(comment.cid)}\r\n            />\r\n          )\r\n        ) : (\r\n          <div style={{ width: '105px' }} />\r\n        )}\r\n      </S.CommentItem>\r\n      {isAddReply && <ReplyCommentForm pid={pid} cid={comment.cid} setIsAddReply={setIsAddReply} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}