{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\payment\\\\IamPort.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IamPort = ({\n  post,\n  selectedPaymentMethod\n}) => {\n  _s();\n  // Receive props\n  useEffect(() => {\n    const IMP = window.IMP;\n    const impKey = process.env.REACT_APP_IMP_KEY;\n    if (impKey) {\n      IMP === null || IMP === void 0 ? void 0 : IMP.init(impKey);\n    } else {\n      console.error('REACT_APP_IMP_KEY is not defined in the environment variables.');\n    }\n  }, []);\n  const handlePayment = () => {\n    if (!post) {\n      console.error('Post data is not available.');\n      return;\n    }\n    if (!selectedPaymentMethod) {\n      console.error('Payment method is not selected.');\n      return;\n    }\n    const paymentInfo = {\n      pg: selectedPaymentMethod,\n      // Use the selected payment method from props\n      pay_method: 'card',\n      merchant_uid: 'merchant_' + new Date().getTime(),\n      name: post.title,\n      amount: String(parseInt(post.price)),\n      buyer_name: post.nickname,\n      buyer_tel: '010-1234-5678',\n      buyer_email: '161@test.com'\n    };\n    const IMP = window.IMP;\n    IMP === null || IMP === void 0 ? void 0 : IMP.request_pay(paymentInfo, function (response) {\n      if (response !== null && response !== void 0 && response.success) {\n        alert('결제가 완료되었습니다.');\n      } else {\n        alert('결제에 실패하였습니다.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"\\uACB0\\uC81C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(IamPort, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = IamPort;\nexport default IamPort;\nvar _c;\n$RefreshReg$(_c, \"IamPort\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","IamPort","post","selectedPaymentMethod","_s","IMP","window","impKey","process","env","REACT_APP_IMP_KEY","init","console","error","handlePayment","paymentInfo","pg","pay_method","merchant_uid","Date","getTime","name","title","amount","String","parseInt","price","buyer_name","nickname","buyer_tel","buyer_email","request_pay","response","success","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/payment/IamPort.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { RequestPayParams, RequestPayResponse } from 'iamport-typings';\r\nimport { ProductInfo } from '../../types/supabase';\r\n\r\ninterface IamPortProps {\r\n  post: ProductInfo;\r\n  selectedPaymentMethod: string; // Define the type of selectedPaymentMethod\r\n}\r\n\r\nconst IamPort = ({ post, selectedPaymentMethod }: IamPortProps) => {\r\n  // Receive props\r\n  useEffect(() => {\r\n    const IMP = window.IMP;\r\n    const impKey = process.env.REACT_APP_IMP_KEY;\r\n\r\n    if (impKey) {\r\n      IMP?.init(impKey);\r\n    } else {\r\n      console.error('REACT_APP_IMP_KEY is not defined in the environment variables.');\r\n    }\r\n  }, []);\r\n\r\n  const handlePayment = () => {\r\n    if (!post) {\r\n      console.error('Post data is not available.');\r\n      return;\r\n    }\r\n\r\n    if (!selectedPaymentMethod) {\r\n      console.error('Payment method is not selected.');\r\n      return;\r\n    }\r\n\r\n    const paymentInfo: RequestPayParams = {\r\n      pg: selectedPaymentMethod, // Use the selected payment method from props\r\n      pay_method: 'card',\r\n      merchant_uid: 'merchant_' + new Date().getTime(),\r\n      name: post.title,\r\n      amount: String(parseInt(post.price)),\r\n      buyer_name: post.nickname,\r\n      buyer_tel: '010-1234-5678',\r\n      buyer_email: '161@test.com'\r\n    };\r\n\r\n    const IMP = window.IMP;\r\n    IMP?.request_pay(paymentInfo, function (response: RequestPayResponse) {\r\n      if (response?.success) {\r\n        alert('결제가 완료되었습니다.');\r\n      } else {\r\n        alert('결제에 실패하였습니다.');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Use the handlePayment function */}\r\n      <button onClick={handlePayment}>결제하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IamPort;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAoC,CAAC,KAAK;EAAAC,EAAA;EACjE;EACAN,SAAS,CAAC,MAAM;IACd,MAAMO,GAAG,GAAGC,MAAM,CAACD,GAAG;IACtB,MAAME,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;IAE5C,IAAIH,MAAM,EAAE;MACVF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEM,IAAI,CAACJ,MAAM,CAAC;IACnB,CAAC,MAAM;MACLK,OAAO,CAACC,KAAK,CAAC,gEAAgE,CAAC;IACjF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACZ,IAAI,EAAE;MACTU,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;MAC5C;IACF;IAEA,IAAI,CAACV,qBAAqB,EAAE;MAC1BS,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;MAChD;IACF;IAEA,MAAME,WAA6B,GAAG;MACpCC,EAAE,EAAEb,qBAAqB;MAAE;MAC3Bc,UAAU,EAAE,MAAM;MAClBC,YAAY,EAAE,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAChDC,IAAI,EAAEnB,IAAI,CAACoB,KAAK;MAChBC,MAAM,EAAEC,MAAM,CAACC,QAAQ,CAACvB,IAAI,CAACwB,KAAK,CAAC,CAAC;MACpCC,UAAU,EAAEzB,IAAI,CAAC0B,QAAQ;MACzBC,SAAS,EAAE,eAAe;MAC1BC,WAAW,EAAE;IACf,CAAC;IAED,MAAMzB,GAAG,GAAGC,MAAM,CAACD,GAAG;IACtBA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE0B,WAAW,CAAChB,WAAW,EAAE,UAAUiB,QAA4B,EAAE;MACpE,IAAIA,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEC,OAAO,EAAE;QACrBC,KAAK,CAAC,cAAc,CAAC;MACvB,CAAC,MAAM;QACLA,KAAK,CAAC,cAAc,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACElC,OAAA;IAAAmC,QAAA,eAEEnC,OAAA;MAAQoC,OAAO,EAAEtB,aAAc;MAAAqB,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACpC,EAAA,CAnDIH,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}