{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\posts\\\\Post.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport Editor from '../editor/Editor';\nimport { v4 as uuidv4 } from 'uuid';\nimport { supabase } from '../../services/supabase/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const navigate = useNavigate();\n  const [newTitle, setNewTitle] = useState('');\n  const [newBody, setNewBody] = useState('');\n  const [selectedImages, setSelectedImages] = useState([]);\n  const handleAddPost = async () => {\n    if (!newTitle.trim() || !newBody.trim()) {\n      alert('제목과 본문을 모두 입력해주세요.');\n      return;\n    }\n    const imageUrls = [];\n    for (const selectedImage of selectedImages) {\n      const {\n        data,\n        error\n      } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\n      if (error) {\n        console.error('Error uploading image to Supabase storage:', error);\n        alert('이미지 업로드 중 에러가 발생했습니다!');\n        return;\n      }\n      imageUrls.push(data.path);\n    }\n    const {\n      error: insertError\n    } = await supabase.from('posts').insert([{\n      title: newTitle,\n      body: newBody,\n      image_urls: imageUrls\n    }]);\n    if (insertError) {\n      console.error('Error adding post:', insertError);\n      alert('에러가 발생했습니다!');\n      return;\n    }\n    setNewTitle('');\n    setNewBody('');\n    setSelectedImages([]);\n    alert('글 작성이 완료되었습니다.');\n    navigate(`/`);\n  };\n  const handleImageChange = e => {\n    const selectedFiles = e.target.files;\n    if (selectedFiles && selectedFiles.length > 0) {\n      const updatedSelectedImages = [];\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const selectedFile = selectedFiles[i];\n        const originalFileName = selectedFile.name;\n        const fileExtension = originalFileName.split('.').pop();\n        const randomFileName = uuidv4() + '.' + (fileExtension || 'jpg');\n        updatedSelectedImages.push(new File([selectedFile], randomFileName));\n      }\n      setSelectedImages(updatedSelectedImages);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: newBody,\n        onChange: content => setNewBody(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"I2Cfbkjbpj42N+ND6a50+mP2TXw=\", false, function () {\n  return [useNavigate];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useNavigate","useState","Editor","v4","uuidv4","supabase","jsxDEV","_jsxDEV","Post","_s","navigate","newTitle","setNewTitle","newBody","setNewBody","selectedImages","setSelectedImages","handleAddPost","trim","alert","imageUrls","selectedImage","data","error","storage","from","upload","name","console","push","path","insertError","insert","title","body","image_urls","handleImageChange","e","selectedFiles","target","files","length","updatedSelectedImages","i","selectedFile","originalFileName","fileExtension","split","pop","randomFileName","File","children","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","content","accept","multiple","onClick","_c","$RefreshReg$"],"sources":["C:/React/team_one/src/components/posts/Post.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Editor from '../editor/Editor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { supabase } from '../../services/supabase/supabase';\r\n\r\nconst Post = () => {\r\n  const navigate = useNavigate();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newBody, setNewBody] = useState('');\r\n  const [selectedImages, setSelectedImages] = useState<File[]>([]);\r\n\r\n  const handleAddPost = async () => {\r\n    if (!newTitle.trim() || !newBody.trim()) {\r\n      alert('제목과 본문을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    const imageUrls: string[] = [];\r\n\r\n    for (const selectedImage of selectedImages) {\r\n      const { data, error } = await supabase.storage.from('1st').upload(`images/${selectedImage.name}`, selectedImage);\r\n\r\n      if (error) {\r\n        console.error('Error uploading image to Supabase storage:', error);\r\n        alert('이미지 업로드 중 에러가 발생했습니다!');\r\n        return;\r\n      }\r\n\r\n      imageUrls.push(data.path);\r\n    }\r\n    const { error: insertError } = await supabase\r\n      .from('posts')\r\n      .insert([{ title: newTitle, body: newBody, image_urls: imageUrls }]);\r\n    if (insertError) {\r\n      console.error('Error adding post:', insertError);\r\n      alert('에러가 발생했습니다!');\r\n      return;\r\n    }\r\n    setNewTitle('');\r\n    setNewBody('');\r\n    setSelectedImages([]);\r\n    alert('글 작성이 완료되었습니다.');\r\n    navigate(`/`);\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFiles = e.target.files;\r\n\r\n    if (selectedFiles && selectedFiles.length > 0) {\r\n      const updatedSelectedImages: File[] = [];\r\n\r\n      for (let i = 0; i < selectedFiles.length; i++) {\r\n        const selectedFile = selectedFiles[i];\r\n        const originalFileName = selectedFile.name;\r\n        const fileExtension = originalFileName.split('.').pop();\r\n        const randomFileName = uuidv4() + '.' + (fileExtension || 'jpg');\r\n\r\n        updatedSelectedImages.push(new File([selectedFile], randomFileName));\r\n      }\r\n\r\n      setSelectedImages(updatedSelectedImages);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n        <Editor value={newBody} onChange={(content) => setNewBody(content)} />\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <input type=\"file\" accept=\"image/*\" multiple onChange={handleImageChange} />\r\n        <button onClick={handleAddPost}>글 작성하기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SAASC,QAAQ,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAEhE,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC,IAAI,CAACL,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;MACvCC,KAAK,CAAC,oBAAoB,CAAC;MAC3B;IACF;IAEA,MAAMC,SAAmB,GAAG,EAAE;IAE9B,KAAK,MAAMC,aAAa,IAAIN,cAAc,EAAE;MAC1C,MAAM;QAAEO,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMlB,QAAQ,CAACmB,OAAO,CAACC,IAAI,CAAC,KAAK,CAAC,CAACC,MAAM,CAAE,UAASL,aAAa,CAACM,IAAK,EAAC,EAAEN,aAAa,CAAC;MAEhH,IAAIE,KAAK,EAAE;QACTK,OAAO,CAACL,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;QAClEJ,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACF;MAEAC,SAAS,CAACS,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC;IAC3B;IACA,MAAM;MAAEP,KAAK,EAAEQ;IAAY,CAAC,GAAG,MAAM1B,QAAQ,CAC1CoB,IAAI,CAAC,OAAO,CAAC,CACbO,MAAM,CAAC,CAAC;MAAEC,KAAK,EAAEtB,QAAQ;MAAEuB,IAAI,EAAErB,OAAO;MAAEsB,UAAU,EAAEf;IAAU,CAAC,CAAC,CAAC;IACtE,IAAIW,WAAW,EAAE;MACfH,OAAO,CAACL,KAAK,CAAC,oBAAoB,EAAEQ,WAAW,CAAC;MAChDZ,KAAK,CAAC,aAAa,CAAC;MACpB;IACF;IACAP,WAAW,CAAC,EAAE,CAAC;IACfE,UAAU,CAAC,EAAE,CAAC;IACdE,iBAAiB,CAAC,EAAE,CAAC;IACrBG,KAAK,CAAC,gBAAgB,CAAC;IACvBT,QAAQ,CAAE,GAAE,CAAC;EACf,CAAC;EAED,MAAM0B,iBAAiB,GAAIC,CAAsC,IAAK;IACpE,MAAMC,aAAa,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAEpC,IAAIF,aAAa,IAAIA,aAAa,CAACG,MAAM,GAAG,CAAC,EAAE;MAC7C,MAAMC,qBAA6B,GAAG,EAAE;MAExC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,aAAa,CAACG,MAAM,EAAEE,CAAC,EAAE,EAAE;QAC7C,MAAMC,YAAY,GAAGN,aAAa,CAACK,CAAC,CAAC;QACrC,MAAME,gBAAgB,GAAGD,YAAY,CAACjB,IAAI;QAC1C,MAAMmB,aAAa,GAAGD,gBAAgB,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;QACvD,MAAMC,cAAc,GAAG7C,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI0C,aAAa,IAAI,KAAK,CAAC;QAEhEJ,qBAAqB,CAACb,IAAI,CAAC,IAAIqB,IAAI,CAAC,CAACN,YAAY,CAAC,EAAEK,cAAc,CAAC,CAAC;MACtE;MAEAjC,iBAAiB,CAAC0B,qBAAqB,CAAC;IAC1C;EACF,CAAC;EAED,oBACEnC,OAAA;IAAA4C,QAAA,eACE5C,OAAA;MAAA4C,QAAA,gBACE5C,OAAA;QAAO6C,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAACC,KAAK,EAAE3C,QAAS;QAAC4C,QAAQ,EAAGlB,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACE,MAAM,CAACe,KAAK;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxGpD,OAAA,CAACL,MAAM;QAACoD,KAAK,EAAEzC,OAAQ;QAAC0C,QAAQ,EAAGK,OAAO,IAAK9C,UAAU,CAAC8C,OAAO;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEtEpD,OAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpD,OAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpD,OAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpD,OAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpD,OAAA;QAAO6C,IAAI,EAAC,MAAM;QAACS,MAAM,EAAC,SAAS;QAACC,QAAQ;QAACP,QAAQ,EAAEnB;MAAkB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5EpD,OAAA;QAAQwD,OAAO,EAAE9C,aAAc;QAAAkC,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClD,EAAA,CA1EID,IAAI;EAAA,QACSR,WAAW;AAAA;AAAAgE,EAAA,GADxBxD,IAAI;AA4EV,eAAeA,IAAI;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}