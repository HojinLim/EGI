{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { supabase } from '../../services/supabase/supabase';\n\n// interface Post {\n//   id: number;\n//   title: string;\n//   category: string;\n//   image_urls: string[];\n// }\n\n// export const categories = [\n//   { value: '컴퓨터', label: '컴퓨터' },\n//   { value: '노트북', label: '노트북' },\n//   { value: '콘솔', label: '콘솔' },\n//   { value: '핸드폰', label: '핸드폰' },\n//   { value: '주변기기', label: '주변기기' },\n//   { value: '모니터', label: '모니터' }\n// ];\n\n// const CategoryFilter = () => {\n//   const [posts, setPosts] = useState<Post[]>([]);\n//   const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       const { data, error } = await supabase.from('posts').select('*');\n\n//       if (error) {\n//         console.error('Error fetching posts:', error);\n//       } else {\n//         const postsWithCompleteURLs = data.map((post) => ({\n//           ...post,\n//           image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\n//         }));\n\n//         setPosts(postsWithCompleteURLs);\n//       }\n//     };\n\n//     fetchPosts();\n//   }, []);\n\n//   const handleCategoryClick = (category: string) => {\n//     const filteredPosts = posts.filter((post) => post.category === category);\n//     setFilteredPosts(filteredPosts);\n//   };\n\n//   const categoryButtons = categories.map((category) => (\n//     <button key={category.value} value={category.value} onClick={() => handleCategoryClick(category.value)}>\n//       {category.label}\n//     </button>\n//   ));\n\n//   return (\n//     <div>\n//       <div>{categoryButtons}</div>\n//       <div>\n//         {filteredPosts.map((post) => (\n//           <div key={post.id}>\n//             <h3>{post.title}</h3>\n\n//             <div>\n//               {post.image_urls.length > 0 && (\n//                 <img src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `} alt={post.title} />\n//               )}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CategoryFilter;","map":{"version":3,"names":[],"sources":["C:/React/team_one/src/components/category/CategoryFilter.tsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { supabase } from '../../services/supabase/supabase';\r\n\r\n// interface Post {\r\n//   id: number;\r\n//   title: string;\r\n//   category: string;\r\n//   image_urls: string[];\r\n// }\r\n\r\n// export const categories = [\r\n//   { value: '컴퓨터', label: '컴퓨터' },\r\n//   { value: '노트북', label: '노트북' },\r\n//   { value: '콘솔', label: '콘솔' },\r\n//   { value: '핸드폰', label: '핸드폰' },\r\n//   { value: '주변기기', label: '주변기기' },\r\n//   { value: '모니터', label: '모니터' }\r\n// ];\r\n\r\n// const CategoryFilter = () => {\r\n//   const [posts, setPosts] = useState<Post[]>([]);\r\n//   const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       const { data, error } = await supabase.from('posts').select('*');\r\n\r\n//       if (error) {\r\n//         console.error('Error fetching posts:', error);\r\n//       } else {\r\n//         const postsWithCompleteURLs = data.map((post) => ({\r\n//           ...post,\r\n//           image_urls: post.image_urls ? post.image_urls.replace(/\\[|\\]|\"/g, '').split(',') : []\r\n//         }));\r\n\r\n//         setPosts(postsWithCompleteURLs);\r\n//       }\r\n//     };\r\n\r\n//     fetchPosts();\r\n//   }, []);\r\n\r\n//   const handleCategoryClick = (category: string) => {\r\n//     const filteredPosts = posts.filter((post) => post.category === category);\r\n//     setFilteredPosts(filteredPosts);\r\n//   };\r\n\r\n//   const categoryButtons = categories.map((category) => (\r\n//     <button key={category.value} value={category.value} onClick={() => handleCategoryClick(category.value)}>\r\n//       {category.label}\r\n//     </button>\r\n//   ));\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>{categoryButtons}</div>\r\n//       <div>\r\n//         {filteredPosts.map((post) => (\r\n//           <div key={post.id}>\r\n//             <h3>{post.title}</h3>\r\n\r\n//             <div>\r\n//               {post.image_urls.length > 0 && (\r\n//                 <img src={`${process.env.REACT_APP_SUPABASE_STORAGE_URL}${post.image_urls[0]} `} alt={post.title} />\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategoryFilter;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}