{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\team_one\\\\src\\\\components\\\\InfiniteScroll.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport { Container } from './posts/Styled.Posts';\nimport { getPostList } from './ScrollDummy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteScroll = () => {\n  _s();\n  const [page, setPage] = useState(1);\n  const [posts, setPosts] = useState(getPostList(1));\n  //더미데이터의 정보값 가져오기\n  const [postEnd, setPostEnd] = useState(false);\n  const handleScroll = useCallback(() => {\n    const {\n      innerHeight\n    } = window;\n    const {\n      scrollHeight\n    } = document.body;\n    const {\n      scrollTop\n    } = document.documentElement;\n    if (Math.round(scrollTop + innerHeight) >= scrollHeight) {\n      const newPosts = getPostList(page + 1);\n      if (newPosts.length === 0) {\n        setPostEnd(true);\n      } else {\n        setPosts(prevPosts => [...prevPosts, ...newPosts]);\n        setPage(prevPage => prevPage + 1);\n      }\n    }\n  }, [page]);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [posts.map((post, idx) => /*#__PURE__*/_jsxDEV(PostItem, {\n      children: post.contents\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), postEnd && /*#__PURE__*/_jsxDEV(EndMassage, {\n      children: \"\\uB354 \\uC774\\uC0C1\\uC758 \\uAC8C\\uC2DC\\uBB3C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(InfiniteScroll, \"a3YE8Dzo9caFCr8KrNBbvW7zc0s=\");\n_c = InfiniteScroll;\nconst PostItem = styled.div`\n  width: 100%;\n  height: 350px;\n  border: 2px solid black;\n`;\n_c2 = PostItem;\nconst EndMassage = styled.div`\n  text-align: center;\n  padding: 10px;\n  color: gray;\n`;\n_c3 = EndMassage;\nexport default InfiniteScroll;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InfiniteScroll\");\n$RefreshReg$(_c2, \"PostItem\");\n$RefreshReg$(_c3, \"EndMassage\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styled","Container","getPostList","jsxDEV","_jsxDEV","InfiniteScroll","_s","page","setPage","posts","setPosts","postEnd","setPostEnd","handleScroll","innerHeight","window","scrollHeight","document","body","scrollTop","documentElement","Math","round","newPosts","length","prevPosts","prevPage","addEventListener","removeEventListener","children","map","post","idx","PostItem","contents","fileName","_jsxFileName","lineNumber","columnNumber","EndMassage","_c","div","_c2","_c3","$RefreshReg$"],"sources":["C:/React/team_one/src/components/InfiniteScroll.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { styled } from 'styled-components';\r\nimport { Container } from './posts/Styled.Posts';\r\nimport { getPostList, postType } from './ScrollDummy';\r\n\r\nconst InfiniteScroll = (): JSX.Element => {\r\n  const [page, setPage] = useState<number>(1);\r\n  const [posts, setPosts] = useState<postType[]>(getPostList(1));\r\n  //더미데이터의 정보값 가져오기\r\n  const [postEnd, setPostEnd] = useState<boolean>(false);\r\n\r\n  const handleScroll = useCallback((): void => {\r\n    const { innerHeight } = window;\r\n    const { scrollHeight } = document.body;\r\n    const { scrollTop } = document.documentElement;\r\n    if (Math.round(scrollTop + innerHeight) >= scrollHeight) {\r\n      const newPosts = getPostList(page + 1);\r\n      if (newPosts.length === 0) {\r\n        setPostEnd(true);\r\n      } else {\r\n        setPosts((prevPosts) => [...prevPosts, ...newPosts]);\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  return (\r\n    <Container>\r\n      {posts.map((post: postType, idx: number) => (\r\n        <PostItem key={idx}>{post.contents}</PostItem>\r\n      ))}\r\n      {/* 더미데이터 값 뿌려주기 */}\r\n      {postEnd && <EndMassage>더 이상의 게시물이 없습니다.</EndMassage>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst PostItem = styled.div`\r\n  width: 100%;\r\n  height: 350px;\r\n  border: 2px solid black;\r\n`;\r\nconst EndMassage = styled.div`\r\n  text-align: center;\r\n  padding: 10px;\r\n  color: gray;\r\n`;\r\nexport default InfiniteScroll;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,WAAW,QAAkB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAaK,WAAW,CAAC,CAAC,CAAC,CAAC;EAC9D;EACA,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAU,KAAK,CAAC;EAEtD,MAAMgB,YAAY,GAAGf,WAAW,CAAC,MAAY;IAC3C,MAAM;MAAEgB;IAAY,CAAC,GAAGC,MAAM;IAC9B,MAAM;MAAEC;IAAa,CAAC,GAAGC,QAAQ,CAACC,IAAI;IACtC,MAAM;MAAEC;IAAU,CAAC,GAAGF,QAAQ,CAACG,eAAe;IAC9C,IAAIC,IAAI,CAACC,KAAK,CAACH,SAAS,GAAGL,WAAW,CAAC,IAAIE,YAAY,EAAE;MACvD,MAAMO,QAAQ,GAAGrB,WAAW,CAACK,IAAI,GAAG,CAAC,CAAC;MACtC,IAAIgB,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;QACzBZ,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACLF,QAAQ,CAAEe,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE,GAAGF,QAAQ,CAAC,CAAC;QACpDf,OAAO,CAAEkB,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACrC;IACF;EACF,CAAC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAEVR,SAAS,CAAC,MAAM;IACdgB,MAAM,CAACY,gBAAgB,CAAC,QAAQ,EAAEd,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXE,MAAM,CAACa,mBAAmB,CAAC,QAAQ,EAAEf,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACET,OAAA,CAACH,SAAS;IAAA4B,QAAA,GACPpB,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAc,EAAEC,GAAW,kBACrC5B,OAAA,CAAC6B,QAAQ;MAAAJ,QAAA,EAAYE,IAAI,CAACG;IAAQ,GAAnBF,GAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2B,CAC9C,CAAC,EAED3B,OAAO,iBAAIP,OAAA,CAACmC,UAAU;MAAAV,QAAA,EAAC;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEhB,CAAC;AAAChC,EAAA,CAtCID,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAwCpB,MAAM4B,QAAQ,GAAGjC,MAAM,CAACyC,GAAI;AAC5B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIT,QAAQ;AAKd,MAAMM,UAAU,GAAGvC,MAAM,CAACyC,GAAI;AAC9B;AACA;AACA;AACA,CAAC;AAACE,GAAA,GAJIJ,UAAU;AAKhB,eAAelC,cAAc;AAAC,IAAAmC,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}